{
    "version": "https://jsonfeed.org/version/1",
    "title": "Will • All posts by \"工具类\" category",
    "description": "愿你一生努力，一生被爱",
    "home_page_url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io",
    "items": [
        {
            "id": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/%E5%B7%A5%E5%85%B7%E7%B1%BB/VinUtil/",
            "url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/%E5%B7%A5%E5%85%B7%E7%B1%BB/VinUtil/",
            "title": "VinUtil",
            "date_published": "2024-01-03T13:13:21.651Z",
            "content_html": "<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> org.apache.commons.collections.CollectionUtils;<br><span class=\"hljs-keyword\">import</span> org.apache.commons.collections.ListUtils;<br><span class=\"hljs-keyword\">import</span> java.util.*;<br><br><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> VinUtil</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span> TODO</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2020/11/19 10:25</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Company</span> 天津易和信息科技有限公司</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">VinUtil</span> &#123;<br>    <span class=\"hljs-comment\">/**车架号地区代码数组*/</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> String areaArray[] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">String</span>[]&#123;<span class=\"hljs-string\">&quot;1&quot;</span>, <span class=\"hljs-string\">&quot;2&quot;</span>, <span class=\"hljs-string\">&quot;3&quot;</span>, <span class=\"hljs-string\">&quot;6&quot;</span>, <span class=\"hljs-string\">&quot;9&quot;</span>, <span class=\"hljs-string\">&quot;J&quot;</span>, <span class=\"hljs-string\">&quot;K&quot;</span>, <span class=\"hljs-string\">&quot;L&quot;</span>, <span class=\"hljs-string\">&quot;R&quot;</span>, <span class=\"hljs-string\">&quot;S&quot;</span>, <span class=\"hljs-string\">&quot;T&quot;</span>, <span class=\"hljs-string\">&quot;V&quot;</span>, <span class=\"hljs-string\">&quot;W&quot;</span>, <span class=\"hljs-string\">&quot;Y&quot;</span>, <span class=\"hljs-string\">&quot;Z&quot;</span>, <span class=\"hljs-string\">&quot;G&quot;</span>&#125;;<br><br>    <span class=\"hljs-comment\">/**车架号中可能出现的字符数组*/</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> String charArray[] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">String</span>[]&#123;<span class=\"hljs-string\">&quot;1&quot;</span>, <span class=\"hljs-string\">&quot;2&quot;</span>, <span class=\"hljs-string\">&quot;3&quot;</span>, <span class=\"hljs-string\">&quot;4&quot;</span>, <span class=\"hljs-string\">&quot;5&quot;</span>, <span class=\"hljs-string\">&quot;6&quot;</span>, <span class=\"hljs-string\">&quot;7&quot;</span>, <span class=\"hljs-string\">&quot;8&quot;</span>, <span class=\"hljs-string\">&quot;A&quot;</span>, <span class=\"hljs-string\">&quot;B&quot;</span>, <span class=\"hljs-string\">&quot;C&quot;</span>, <span class=\"hljs-string\">&quot;D&quot;</span>, <span class=\"hljs-string\">&quot;E&quot;</span>, <span class=\"hljs-string\">&quot;F&quot;</span>, <span class=\"hljs-string\">&quot;G&quot;</span>, <span class=\"hljs-string\">&quot;H&quot;</span>, <span class=\"hljs-string\">&quot;J&quot;</span>, <span class=\"hljs-string\">&quot;K&quot;</span>, <span class=\"hljs-string\">&quot;L&quot;</span>, <span class=\"hljs-string\">&quot;M&quot;</span>, <span class=\"hljs-string\">&quot;N&quot;</span>, <span class=\"hljs-string\">&quot;P&quot;</span>, <span class=\"hljs-string\">&quot;R&quot;</span>, <span class=\"hljs-string\">&quot;S&quot;</span>, <span class=\"hljs-string\">&quot;T&quot;</span>, <span class=\"hljs-string\">&quot;V&quot;</span>, <span class=\"hljs-string\">&quot;W&quot;</span>, <span class=\"hljs-string\">&quot;X&quot;</span>, <span class=\"hljs-string\">&quot;Y&quot;</span>&#125;;<br><br>    <span class=\"hljs-comment\">/**车架号校验位计算数组*/</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> Object[][] KVMACTHUP = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Object</span>[][]&#123;&#123;<span class=\"hljs-string\">&#x27;A&#x27;</span>, <span class=\"hljs-number\">1</span>&#125;, &#123;<span class=\"hljs-string\">&#x27;B&#x27;</span>, <span class=\"hljs-number\">2</span>&#125;, &#123;<span class=\"hljs-string\">&#x27;C&#x27;</span>, <span class=\"hljs-number\">3</span>&#125;, &#123;<span class=\"hljs-string\">&#x27;D&#x27;</span>, <span class=\"hljs-number\">4</span>&#125;, &#123;<span class=\"hljs-string\">&#x27;E&#x27;</span>, <span class=\"hljs-number\">5</span>&#125;, &#123;<span class=\"hljs-string\">&#x27;F&#x27;</span>, <span class=\"hljs-number\">6</span>&#125;,&#123;<span class=\"hljs-string\">&#x27;G&#x27;</span>, <span class=\"hljs-number\">7</span>&#125;, &#123;<span class=\"hljs-string\">&#x27;H&#x27;</span>, <span class=\"hljs-number\">8</span>&#125;, &#123;<span class=\"hljs-string\">&#x27;I&#x27;</span>, <span class=\"hljs-number\">0</span>&#125;, &#123;<span class=\"hljs-string\">&#x27;J&#x27;</span>, <span class=\"hljs-number\">1</span>&#125;, &#123;<span class=\"hljs-string\">&#x27;K&#x27;</span>, <span class=\"hljs-number\">2</span>&#125;, &#123;<span class=\"hljs-string\">&#x27;L&#x27;</span>, <span class=\"hljs-number\">3</span>&#125;,&#123;<span class=\"hljs-string\">&#x27;M&#x27;</span>, <span class=\"hljs-number\">4</span>&#125;, &#123;<span class=\"hljs-string\">&#x27;N&#x27;</span>, <span class=\"hljs-number\">5</span>&#125;, &#123;<span class=\"hljs-string\">&#x27;O&#x27;</span>, <span class=\"hljs-number\">0</span>&#125;, &#123;<span class=\"hljs-string\">&#x27;P&#x27;</span>, <span class=\"hljs-number\">7</span>&#125;, &#123;<span class=\"hljs-string\">&#x27;Q&#x27;</span>, <span class=\"hljs-number\">8</span>&#125;, &#123;<span class=\"hljs-string\">&#x27;R&#x27;</span>, <span class=\"hljs-number\">9</span>&#125;, &#123;<span class=\"hljs-string\">&#x27;S&#x27;</span>, <span class=\"hljs-number\">2</span>&#125;, &#123;<span class=\"hljs-string\">&#x27;T&#x27;</span>, <span class=\"hljs-number\">3</span>&#125;, &#123;<span class=\"hljs-string\">&#x27;U&#x27;</span>, <span class=\"hljs-number\">4</span>&#125;, &#123;<span class=\"hljs-string\">&#x27;V&#x27;</span>, <span class=\"hljs-number\">5</span>&#125;, &#123;<span class=\"hljs-string\">&#x27;W&#x27;</span>, <span class=\"hljs-number\">6</span>&#125;, &#123;<span class=\"hljs-string\">&#x27;X&#x27;</span>, <span class=\"hljs-number\">7</span>&#125;,&#123;<span class=\"hljs-string\">&#x27;Y&#x27;</span>, <span class=\"hljs-number\">8</span>&#125;, &#123;<span class=\"hljs-string\">&#x27;Z&#x27;</span>, <span class=\"hljs-number\">9</span>&#125;&#125;;<br>    <span class=\"hljs-comment\">/**车架号数据加权数组*/</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">int</span>[] WEIGHTVALUE = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[]&#123;<span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>&#125;;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 计算车架号的校验位</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">getIsuredCode</span><span class=\"hljs-params\">(String vin)</span> &#123;<br>        <span class=\"hljs-type\">char</span>[] Vin = vin.toCharArray();<br>        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">sum</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>,tempValue = <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-type\">char</span> temp;<br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">17</span>; i++) &#123;<br>            <span class=\"hljs-keyword\">if</span> (Vin[i] &gt;= <span class=\"hljs-string\">&#x27;a&#x27;</span> &amp;&amp; Vin[i] &lt;= <span class=\"hljs-string\">&#x27;z&#x27;</span>) &#123;<br>                temp = (<span class=\"hljs-type\">char</span>) (Vin[i] - <span class=\"hljs-number\">32</span>);<br>            &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> ((Vin[i] &gt;= <span class=\"hljs-string\">&#x27;A&#x27;</span>) &amp;&amp; (Vin[i] &lt;= <span class=\"hljs-string\">&#x27;Z&#x27;</span>)) &#123;<br>                temp = Vin[i];<br>            &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> ((Vin[i] &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span>) &amp;&amp; (Vin[i] &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)) &#123;<br>                tempValue = Integer.parseInt(String.valueOf(Vin[i]));<br>                temp = Vin[i];<br>            &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;ERROR&quot;</span>;<br>            &#125;<br>            <span class=\"hljs-keyword\">if</span> ((temp &gt;= <span class=\"hljs-string\">&#x27;A&#x27;</span>) &amp;&amp; (temp &lt;= <span class=\"hljs-string\">&#x27;Z&#x27;</span>)) &#123;<br>                <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">j</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; j &lt; <span class=\"hljs-number\">26</span>; j++) &#123;<br>                    <span class=\"hljs-keyword\">if</span> (temp == (<span class=\"hljs-type\">char</span>)KVMACTHUP[j][<span class=\"hljs-number\">0</span>]) &#123;<br>                        tempValue = (<span class=\"hljs-type\">int</span>) KVMACTHUP[j][<span class=\"hljs-number\">1</span>];<br>                    &#125;<br>                &#125;<br>            &#125;<br>            sum += tempValue * WEIGHTVALUE[i];<br>        &#125;<br>        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">reslt</span> <span class=\"hljs-operator\">=</span> sum % <span class=\"hljs-number\">11</span>;<br>        <span class=\"hljs-keyword\">if</span> (reslt != <span class=\"hljs-number\">10</span>) &#123;<br>            <span class=\"hljs-keyword\">return</span> String.valueOf(reslt);<br>        &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;X&quot;</span>;<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 判断vin是否正确</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> vin</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">boolean</span> <span class=\"hljs-title function_\">isVin</span><span class=\"hljs-params\">(String vin)</span> &#123;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">isuredCode</span> <span class=\"hljs-operator\">=</span> getIsuredCode(vin);<br>        <span class=\"hljs-keyword\">if</span> (vin.substring(<span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">9</span>).equals(isuredCode)) &#123;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;<br>        &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 拼接车架号</span><br><span class=\"hljs-comment\">     *</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> beforeStr</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> afterStr</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">spellVin</span><span class=\"hljs-params\">(String beforeStr, String afterStr)</span> &#123;<br>        <span class=\"hljs-type\">StringBuffer</span> <span class=\"hljs-variable\">vinBuffer</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">StringBuffer</span>();<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">preVin</span> <span class=\"hljs-operator\">=</span> vinBuffer.append(beforeStr).append(<span class=\"hljs-string\">&quot;X&quot;</span>).append(afterStr).toString();<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">isuredCode</span> <span class=\"hljs-operator\">=</span> getIsuredCode(preVin);<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">vin</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">StringBuffer</span>(beforeStr).append(isuredCode).append(afterStr).toString();<br>        <span class=\"hljs-keyword\">if</span> (isVin(vin)) &#123;<br>            <span class=\"hljs-keyword\">return</span> vin;<br>        &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>            <span class=\"hljs-keyword\">return</span> spellVin(beforeStr, afterStr);<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成随机前缀</span><br><span class=\"hljs-comment\">     *</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">prepareBeforeStr</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-type\">StringBuffer</span> <span class=\"hljs-variable\">stringBuffer</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">StringBuffer</span>();<br>        stringBuffer.append(<span class=\"hljs-string\">&quot;VNN&quot;</span>);<br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">5</span>; i++) &#123;<br>            stringBuffer.append(getRandomChar(areaArray));<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> stringBuffer.toString();<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成随机后缀</span><br><span class=\"hljs-comment\">     *</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">prepareAfterStr</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-type\">StringBuffer</span> <span class=\"hljs-variable\">stringBuffer</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">StringBuffer</span>();<br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">3</span>; i++) &#123;<br>            stringBuffer.append(getRandomChar(charArray));<br>        &#125;<br>        stringBuffer.append(prepareNo());<br>        <span class=\"hljs-keyword\">return</span> stringBuffer.toString();<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成随机的生产序号</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">prepareNo</span><span class=\"hljs-params\">()</span>&#123;<br>        <span class=\"hljs-type\">Random</span> <span class=\"hljs-variable\">random</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Random</span>();<br>        <span class=\"hljs-type\">StringBuffer</span> <span class=\"hljs-variable\">numStrBuff</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">StringBuffer</span>();<br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">5</span>;i++)&#123;<br>            numStrBuff.append(Integer.toHexString(random.nextInt(<span class=\"hljs-number\">16</span>)).toUpperCase());<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> numStrBuff.toString();<br>    &#125;<br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 返回随机字符</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">getRandomChar</span><span class=\"hljs-params\">(Object array[])</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> charArray[(<span class=\"hljs-type\">int</span>) (Math.random() * <span class=\"hljs-number\">100</span> % array.length)];<br>    &#125;<br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 获取随机的车架号</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">getRandomVin</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">beforeStr</span> <span class=\"hljs-operator\">=</span> prepareBeforeStr();<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">afterStr</span> <span class=\"hljs-operator\">=</span> prepareAfterStr();<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">vin</span> <span class=\"hljs-operator\">=</span> spellVin(beforeStr, afterStr);<br>        <span class=\"hljs-keyword\">return</span> vin;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 获取对应数量的随机车架号</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> num</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> List&lt;String&gt; <span class=\"hljs-title function_\">getVinList</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> num)</span>&#123;<br>        List&lt;String&gt; vinList = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;&gt;();<br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span><span class=\"hljs-number\">0</span>;i&lt;num;i++)&#123;<br>            vinList.add(getRandomVin());<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> vinList;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n",
            "tags": [
                "JAVA",
                "VinUtil"
            ]
        },
        {
            "id": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/%E5%B7%A5%E5%85%B7%E7%B1%BB/VerificationCodeUtil/",
            "url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/%E5%B7%A5%E5%85%B7%E7%B1%BB/VerificationCodeUtil/",
            "title": "VerificationCodeUtil",
            "date_published": "2024-01-03T13:13:21.651Z",
            "content_html": "<blockquote>\n<p>因最近系统等保三级改造中使用到了随机生成高强度密码(包含大写、小写英文字母、数字、特殊字符且不少于八位)并发送短信至客户手机，博猪基于<code>apache-common-lang3</code>二次包装了一个工具类。</p>\n</blockquote>\n<h1 id=\"Maven依赖\"><a href=\"#Maven依赖\" class=\"headerlink\" title=\"Maven依赖\"></a>Maven依赖</h1><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>  <br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.apache.commons<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>  <br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>commons-lang3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>  <br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>3.3.9<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>  <br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"JAVA工具类\"><a href=\"#JAVA工具类\" class=\"headerlink\" title=\"JAVA工具类\"></a>JAVA工具类</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> org.apache.commons.lang3.RandomStringUtils;<br><span class=\"hljs-keyword\">import</span> java.util.Collections;<br><span class=\"hljs-keyword\">import</span> java.util.List;<br><span class=\"hljs-keyword\">import</span> java.util.stream.Collectors;<br><br><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span>     VerificationCode</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span>   密码、验证码工具类</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span>        will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span>          2022/8/17 9:33</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Company</span>       北京惠科互联科技有限公司</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">VerificationCodeUtil</span> &#123;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-title function_\">VerificationCodeUtil</span><span class=\"hljs-params\">()</span>&#123;&#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 默认特殊字符</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">char</span>[] DEFAULT_SYMBOL = &#123;<span class=\"hljs-string\">&#x27;!&#x27;</span>, <span class=\"hljs-string\">&#x27;@&#x27;</span>, <span class=\"hljs-string\">&#x27;#&#x27;</span>, <span class=\"hljs-string\">&#x27;$&#x27;</span>, <span class=\"hljs-string\">&#x27;%&#x27;</span>, <span class=\"hljs-string\">&#x27;^&#x27;</span>, <span class=\"hljs-string\">&#x27;&amp;&#x27;</span>, <span class=\"hljs-string\">&#x27;*&#x27;</span>&#125;;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成指定长度的随机数</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> len           生成长度</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorNumber</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> len)</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> generatorNumber(len, <span class=\"hljs-literal\">false</span>);<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成指定长度的随机大写字母</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> len           生成长度</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorUpperCase</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> len)</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> generatorUpperCase(len, <span class=\"hljs-literal\">false</span>);<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成指定长度的随机小写字母</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> len           生成长度</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorLowerCase</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> len)</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> generatorLowerCase(len, <span class=\"hljs-literal\">false</span>);<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成指定长度的随机特殊字符</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> len               生成长度</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> shuffleFlag       二次打乱标识 true-需要二次打乱，false-默认生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorNotDefaultSymbol</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> len, <span class=\"hljs-type\">boolean</span> shuffleFlag)</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> generatorSymbol(len, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>);<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成指定长度的随机默认特殊字符</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> len                生成长度</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorDefaultSymbol</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> len)</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> generatorSymbol(len, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>);<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成指定长度的随机数</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> len           生成长度</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> shuffleFlag   二次打乱标识 true-需要二次打乱，false-默认生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorNumber</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> len, <span class=\"hljs-type\">boolean</span> shuffleFlag)</span> &#123;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">randomNumeric</span> <span class=\"hljs-operator\">=</span> RandomStringUtils.randomNumeric(len);<br>        <span class=\"hljs-keyword\">if</span> (shuffleFlag) &#123;<br>            <span class=\"hljs-keyword\">return</span> shuffleRandomStr(randomNumeric);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> randomNumeric;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成指定长度的大写字母</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> len           生成长度</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> shuffleFlag   二次打乱标识 true-需要二次打乱，false-默认生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorUpperCase</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> len, <span class=\"hljs-type\">boolean</span> shuffleFlag)</span> &#123;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">randomStr</span> <span class=\"hljs-operator\">=</span> RandomStringUtils.random(len, <span class=\"hljs-number\">65</span>, <span class=\"hljs-number\">90</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>);<br>        <span class=\"hljs-keyword\">if</span>(shuffleFlag) &#123;<br>            <span class=\"hljs-keyword\">return</span> shuffleRandomStr(randomStr);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> randomStr;<br>    &#125;<br><br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成指定长度的小写字母</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> len           生成长度</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> shuffleFlag   二次打乱标识 true-需要二次打乱，false-默认生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorLowerCase</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> len, <span class=\"hljs-type\">boolean</span> shuffleFlag)</span> &#123;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">randomStr</span> <span class=\"hljs-operator\">=</span> RandomStringUtils.random(len, <span class=\"hljs-number\">97</span>, <span class=\"hljs-number\">122</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>);<br>        <span class=\"hljs-keyword\">if</span>(shuffleFlag) &#123;<br>            <span class=\"hljs-keyword\">return</span> shuffleRandomStr(randomStr);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> randomStr;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成指定长度的特殊字符</span><br><span class=\"hljs-comment\">     *</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> len                生成长度</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> defaultSymbolFlag  是否使用默认特殊字符标识（默认即常用特殊字符键盘SHIFT+【1-0】)，true-默认使用/false-不使用默认字符即随机生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> shuffleFlag        二次打乱标识 true-需要二次打乱，false-默认生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorSymbol</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> len, <span class=\"hljs-type\">boolean</span> defaultSymbolFlag, <span class=\"hljs-type\">boolean</span> shuffleFlag)</span> &#123;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">randomStr</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-literal\">null</span>;<br>        <span class=\"hljs-keyword\">if</span> (defaultSymbolFlag) &#123;<br>            randomStr = RandomStringUtils.random(len, DEFAULT_SYMBOL);<br>        &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>            randomStr = RandomStringUtils.random(len, <span class=\"hljs-number\">33</span>, <span class=\"hljs-number\">47</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>);<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span> (shuffleFlag) &#123;<br>            <span class=\"hljs-keyword\">return</span> shuffleRandomStr(randomStr);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> randomStr;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     *  根据自定义字符串生成随机数</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> len             生成长度</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> shuffleFlag     二次打乱标识 true-需要二次打乱，false-默认生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> chars           字符串可变参数</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorCustom</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> len, <span class=\"hljs-type\">boolean</span> shuffleFlag, <span class=\"hljs-type\">char</span>... chars)</span> &#123;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">randomStr</span> <span class=\"hljs-operator\">=</span> RandomStringUtils.random(len, chars);<br>        <span class=\"hljs-keyword\">if</span> (shuffleFlag) &#123;<br>            <span class=\"hljs-keyword\">return</span> shuffleRandomStr(randomStr);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> randomStr;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成随机字符串</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> upperCount         大写字符串数量</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> lowerCount         小写字符串数量</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> numberCount        数字字符串数量</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> symbolCount        特殊字符串数量</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> defaultSymbolFlag  是否使用默认特殊字符标识（默认即常用特殊字符键盘SHIFT+【1-0】)，true-默认使用/false-不使用默认字符即随机生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> shuffleFlag        二次打乱标识 true-需要二次打乱，false-默认生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorRandomStr</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> upperCount, <span class=\"hljs-type\">int</span> lowerCount</span><br><span class=\"hljs-params\">            , <span class=\"hljs-type\">int</span> numberCount, <span class=\"hljs-type\">int</span> symbolCount, <span class=\"hljs-type\">boolean</span> defaultSymbolFlag , <span class=\"hljs-type\">boolean</span> shuffleFlag)</span> &#123;<br>        <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">zero</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-keyword\">if</span> (zero &gt;= upperCount &amp;&amp; zero &gt;= lowerCount &amp;&amp; zero &gt;= numberCount &amp;&amp; zero &gt;= symbolCount) &#123;<br>            <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">VerificationCodeException</span>(<span class=\"hljs-string\">&quot;生成密码长度不能为空！&quot;</span>);<br>        &#125;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">upperRandomStr</span> <span class=\"hljs-operator\">=</span> generatorUpperCase(upperCount);<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">lowerRandomStr</span> <span class=\"hljs-operator\">=</span> generatorLowerCase(lowerCount);<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">numberRandomStr</span> <span class=\"hljs-operator\">=</span> generatorNumber(numberCount);<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">symbolRandomStr</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&quot;&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span> (symbolCount &gt; <span class=\"hljs-number\">0</span>) &#123;<br>            symbolRandomStr = generatorSymbol(symbolCount, defaultSymbolFlag, <span class=\"hljs-literal\">false</span>);<br>        &#125;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">randomStr</span> <span class=\"hljs-operator\">=</span> upperRandomStr<br>                .concat(lowerRandomStr)<br>                .concat(numberRandomStr)<br>                .concat(symbolRandomStr);<br>        <span class=\"hljs-keyword\">if</span> (shuffleFlag) &#123;<br>            <span class=\"hljs-keyword\">return</span> shuffleRandomStr(randomStr);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> randomStr;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成随机字符串</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> partCount         每种类型数量</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> containSymbolFlag 是否包含特殊字符</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> defaultSymbolFlag 是否使用默认特殊字符标识（默认即常用特殊字符键盘SHIFT+【1-0】)，true-默认使用/false-不使用默认字符即随机生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> shuffleFlag       二次打乱标识 true-需要二次打乱，false-默认生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorRandomStr</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> partCount, <span class=\"hljs-type\">boolean</span> containSymbolFlag, <span class=\"hljs-type\">boolean</span> defaultSymbolFlag, <span class=\"hljs-type\">boolean</span> shuffleFlag)</span> &#123;<br>        <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">zero</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-keyword\">if</span> (zero &gt;= partCount) &#123;<br>            <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">VerificationCodeException</span>(<span class=\"hljs-string\">&quot;生成密码长度不能为空！&quot;</span>);<br>        &#125;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">randomStr</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&quot;&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span> (containSymbolFlag) &#123;<br>            randomStr = generatorRandomStr(partCount, partCount, partCount, partCount, defaultSymbolFlag, <span class=\"hljs-literal\">false</span>);<br>        &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>            randomStr = generatorRandomStr(partCount, partCount, partCount, <span class=\"hljs-number\">0</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>);<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span> (shuffleFlag) &#123;<br>            <span class=\"hljs-keyword\">return</span> shuffleRandomStr(randomStr);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> randomStr;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成随机字符串</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> partCount         大写、小写字母、数字数量</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> symbolCount       特殊字符数量</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> defaultSymbolFlag 是否使用默认特殊字符标识（默认即常用特殊字符键盘SHIFT+【1-0】)，true-默认使用/false-不使用默认字符即随机生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> shuffleFlag       二次打乱标识 true-需要二次打乱，false-默认生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorRandomStr</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> partCount, <span class=\"hljs-type\">int</span> symbolCount, <span class=\"hljs-type\">boolean</span> defaultSymbolFlag, <span class=\"hljs-type\">boolean</span> shuffleFlag)</span> &#123;<br>        <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">zero</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-keyword\">if</span> (zero &gt;= partCount) &#123;<br>            <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">VerificationCodeException</span>(<span class=\"hljs-string\">&quot;生成密码长度不能为空！&quot;</span>);<br>        &#125;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">randomStr</span> <span class=\"hljs-operator\">=</span> generatorRandomStr(partCount, partCount, partCount, symbolCount, defaultSymbolFlag, <span class=\"hljs-literal\">false</span>);<br>        <span class=\"hljs-keyword\">if</span> (shuffleFlag) &#123;<br>            <span class=\"hljs-keyword\">return</span> shuffleRandomStr(randomStr);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> randomStr;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成随机字符串，特殊字符使用默认特殊字符</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> partCount         大写、小写字母、数字数量</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> symbolCount       特殊字符数量</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> shuffleFlag       二次打乱标识 true-需要二次打乱，false-默认生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorRandomStr</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> partCount, <span class=\"hljs-type\">int</span> symbolCount, <span class=\"hljs-type\">boolean</span> shuffleFlag)</span> &#123;<br>        <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">zero</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-keyword\">if</span> (zero &gt;= partCount) &#123;<br>            <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">VerificationCodeException</span>(<span class=\"hljs-string\">&quot;生成密码长度不能为空！&quot;</span>);<br>        &#125;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">randomStr</span> <span class=\"hljs-operator\">=</span> generatorRandomStr(partCount, partCount, partCount, symbolCount, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>);<br>        <span class=\"hljs-keyword\">if</span> (shuffleFlag) &#123;<br>            <span class=\"hljs-keyword\">return</span> shuffleRandomStr(randomStr);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> randomStr;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成随机字符串，特殊字符使用默认特殊字符,生成后会二次打乱</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> partCount         大写、小写字母、数字数量</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> symbolCount       特殊字符数量</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorRandomStr</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> partCount, <span class=\"hljs-type\">int</span> symbolCount)</span> &#123;<br>        <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">zero</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-keyword\">if</span> (zero &gt;= partCount) &#123;<br>            <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">VerificationCodeException</span>(<span class=\"hljs-string\">&quot;生成密码长度不能为空！&quot;</span>);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> generatorRandomStr(partCount, partCount, partCount, symbolCount, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>);<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成指定长度随机字符串，且特殊字符固定，类型数量固定，如有多余则自动补足数字类型</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> len                   随机字符串长度</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> symbolCount           固定特殊字符串</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> defaultSymbolFlag     是否使用默认特殊字符</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> shuffleFlag           二次打乱标识 true-需要二次打乱，false-默认生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorDefaultRandomStr</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> len, <span class=\"hljs-type\">int</span> symbolCount, <span class=\"hljs-type\">boolean</span> defaultSymbolFlag, <span class=\"hljs-type\">boolean</span> shuffleFlag)</span> &#123;<br>        <span class=\"hljs-comment\">//生成类型数量</span><br>        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">typeNum</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">3</span>;<br>        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">excludeSymbolCount</span> <span class=\"hljs-operator\">=</span> len - symbolCount;<br>        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">count</span> <span class=\"hljs-operator\">=</span> (symbolCount &gt; <span class=\"hljs-number\">0</span>) ? excludeSymbolCount / typeNum : len / typeNum;<br>        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">numberCount</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">         * 如果是类型的倍数则平均分，如果不是则补足一个大写字母</span><br><span class=\"hljs-comment\">         */</span><br>        <span class=\"hljs-keyword\">if</span> (len % typeNum == <span class=\"hljs-number\">0</span>) &#123;<br>            numberCount = count;<br>        &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>            numberCount += count + excludeSymbolCount % typeNum;<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> generatorRandomStr(count, count, numberCount, symbolCount, defaultSymbolFlag, shuffleFlag);<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成指定长度随机字符串，且特殊字符固定一位，默认使用固定字符串，默认二次打乱，类型数量固定，如有多余则自动补足数字类型</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> len                   随机字符串长度</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorDefaultRandomStr</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> len)</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> generatorDefaultRandomStr(len, <span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>);<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成八位随机字符串，且特殊字符固定一位，默认使用固定字符串，默认二次打乱，类型数量固定，如有多余则自动补足数字类型</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorDefaultRandomStr</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> generatorDefaultRandomStr(<span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>);<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 二次打乱字符串</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> randomStr   随机字符串</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">shuffleRandomStr</span><span class=\"hljs-params\">(String randomStr)</span> &#123;<br>        List&lt;Character&gt; numberList = randomStr.chars().mapToObj(c -&gt; (<span class=\"hljs-type\">char</span>) c).collect(Collectors.toList());<br>        Collections.shuffle(numberList);<br>        <span class=\"hljs-keyword\">return</span> numberList<br>                .stream()<br>                .collect(StringBuilder::<span class=\"hljs-keyword\">new</span>, StringBuilder::append, StringBuilder::append).toString();<br>    &#125;<br><br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 异常信息</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">VerificationCodeException</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">RuntimeException</span>&#123;<br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">VerificationCodeException</span><span class=\"hljs-params\">(String message)</span> &#123;<span class=\"hljs-built_in\">super</span>(message);&#125;<br><br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">VerificationCodeException</span><span class=\"hljs-params\">(String message,Throwable throwable)</span> &#123;<br>            <span class=\"hljs-built_in\">super</span>(message, throwable);<br>        &#125;<br><br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n",
            "tags": [
                "JAVA",
                "VerificationCode"
            ]
        },
        {
            "id": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/%E5%B7%A5%E5%85%B7%E7%B1%BB/%E5%9F%BA%E4%BA%8EMongoDB%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%A2%9EID/",
            "url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/%E5%B7%A5%E5%85%B7%E7%B1%BB/%E5%9F%BA%E4%BA%8EMongoDB%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%A2%9EID/",
            "title": "基于MongoDB实现自增ID",
            "date_published": "2024-01-03T13:13:21.651Z",
            "content_html": "<blockquote>\n<p>因最近需要有个业务需要实现一个自增的流水号，其中细节值得学习，故记录下，以便反思总结。</p>\n<p>因为项目问题，故优先考虑在已存在的技术上进行实现，所以博猪优先想到的是：</p>\n<p>&#x3D;&#x3D;在MongoDB中，使用单独的集合来存放指定key对应的最大值，然后每次生成流水号时默认查询指定key对应的最大值，取出对应的主键的最大值+1，然后更新即可。博猪使用<code>AtomicInteger</code>来进行对应主键更新的原子性操作，但是在多线程测试时发现博猪对应MongoDB的数据操作有问题，造成了幻读现象，所以这个方案PASS掉了。&#x3D;&#x3D;</p>\n<p>最终方案博猪基于了Redis自增后实现的，下面直接上代码。</p>\n</blockquote>\n<h1 id=\"创建自增ID流水池\"><a href=\"#创建自增ID流水池\" class=\"headerlink\" title=\"创建自增ID流水池\"></a>创建自增ID流水池</h1><h2 id=\"定义集合\"><a href=\"#定义集合\" class=\"headerlink\" title=\"定义集合\"></a>定义集合</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Data</span><br><span class=\"hljs-meta\">@Document(collection = &quot;MAKEUP_SERIAL_NUM_POOL&quot;)</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">MakeUpSerialNumPool</span> &#123;<br>    <span class=\"hljs-meta\">@Id</span><br>    <span class=\"hljs-meta\">@JsonIgnore</span><br>    <span class=\"hljs-keyword\">private</span> ObjectId _id;<br>    <span class=\"hljs-comment\">/** key值，业务组装，保持唯一 */</span><br>    <span class=\"hljs-keyword\">private</span> String key;<br>    <span class=\"hljs-comment\">/** 当前基数 */</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">Integer</span> <span class=\"hljs-variable\">countNum</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"创建DAO\"><a href=\"#创建DAO\" class=\"headerlink\" title=\"创建DAO\"></a>创建DAO</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> MakeUpSerialNumPoolRepository</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span>   自增ID记录池</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> @2022/2/9 15:48</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Company</span> </span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">MakeUpSerialNumPoolRepository</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">MongoRepository</span>&lt;MakeUpSerialNumPool, ObjectId&gt; &#123;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"创建Service\"><a href=\"#创建Service\" class=\"headerlink\" title=\"创建Service\"></a>创建Service</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">MakeUpSerialNumPoolService</span> &#123;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 保存或更新</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> key</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    Integer <span class=\"hljs-title function_\">getSerialNum</span><span class=\"hljs-params\">(String key)</span>;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 保存或更新</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> key</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    MakeUpSerialNumPool <span class=\"hljs-title function_\">findAndModify</span><span class=\"hljs-params\">(String key)</span>;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 删除</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> key</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">findAndRemove</span><span class=\"hljs-params\">(String key)</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Service</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">MakeUpSerialNumPoolServiceImpl</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">MakeUpSerialNumPoolService</span> &#123;<br><br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">private</span> MakeUpSerialNumPoolRepository makeUpSerialNumPoolRepository;<br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">private</span> MongoTemplate mongoTemplate;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> Integer <span class=\"hljs-title function_\">getSerialNum</span><span class=\"hljs-params\">(String key)</span> &#123;<br>        <span class=\"hljs-type\">Query</span> <span class=\"hljs-variable\">query</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Query</span>(Criteria.where(<span class=\"hljs-string\">&quot;key&quot;</span>).is(key));<br>        <span class=\"hljs-type\">Update</span> <span class=\"hljs-variable\">update</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Update</span>();<br>        update.inc(<span class=\"hljs-string\">&quot;countNum&quot;</span>, <span class=\"hljs-number\">1</span>);<br>        <span class=\"hljs-type\">FindAndModifyOptions</span> <span class=\"hljs-variable\">options</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FindAndModifyOptions</span>();<br>        options.upsert(<span class=\"hljs-literal\">true</span>);<br>        options.returnNew(<span class=\"hljs-literal\">true</span>);<br>        <span class=\"hljs-type\">MakeUpSerialNumPool</span> <span class=\"hljs-variable\">pool</span> <span class=\"hljs-operator\">=</span> mongoTemplate.findAndModify(query, update, options, MakeUpSerialNumPool.class);<br>        <span class=\"hljs-keyword\">return</span> pool.getCountNum();<br>    &#125;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> MakeUpSerialNumPool <span class=\"hljs-title function_\">findAndModify</span><span class=\"hljs-params\">(String key)</span> &#123;<br>        <span class=\"hljs-type\">Query</span> <span class=\"hljs-variable\">query</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Query</span>(Criteria.where(<span class=\"hljs-string\">&quot;key&quot;</span>).is(key));<br>        <span class=\"hljs-type\">Update</span> <span class=\"hljs-variable\">update</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Update</span>();<br>        update.inc(<span class=\"hljs-string\">&quot;countNum&quot;</span>, <span class=\"hljs-number\">1</span>);<br>        <span class=\"hljs-type\">FindAndModifyOptions</span> <span class=\"hljs-variable\">options</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FindAndModifyOptions</span>();<br>        options.upsert(<span class=\"hljs-literal\">true</span>);<br>        options.returnNew(<span class=\"hljs-literal\">true</span>);<br>        <span class=\"hljs-type\">MakeUpSerialNumPool</span> <span class=\"hljs-variable\">pool</span> <span class=\"hljs-operator\">=</span> mongoTemplate.findAndModify(query, update, options, MakeUpSerialNumPool.class);<br>        <span class=\"hljs-keyword\">return</span> pool;<br>    &#125;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">findAndRemove</span><span class=\"hljs-params\">(String key)</span> &#123;<br>        <span class=\"hljs-type\">Query</span> <span class=\"hljs-variable\">query</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Query</span>(Criteria.where(<span class=\"hljs-string\">&quot;key&quot;</span>).is(key));<br>        mongoTemplate.findAndRemove(query, MakeUpSerialNumPool.class);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"封装ID自增工具类\"><a href=\"#封装ID自增工具类\" class=\"headerlink\" title=\"封装ID自增工具类\"></a>封装ID自增工具类</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * 自增主键类型</span><br><span class=\"hljs-comment\"> *  业务主键前缀（含表达式）+length为自增</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@Data</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">AutoIncSeqType</span> &#123;<br>    <span class=\"hljs-comment\">/* 前缀表达式 */</span><br>    <span class=\"hljs-keyword\">private</span> String keyPrefix;<br>    <span class=\"hljs-comment\">/* 序列长度 */</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">int</span> length;<br>    <span class=\"hljs-comment\">/* 日期格式化 */</span><br>    <span class=\"hljs-keyword\">private</span> String format;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">AutoIncSeqType</span><span class=\"hljs-params\">(String keyPrefix, <span class=\"hljs-type\">int</span> length, String format)</span> &#123;<br>        <span class=\"hljs-built_in\">this</span>.keyPrefix = keyPrefix;<br>        <span class=\"hljs-built_in\">this</span>.length = length;<br>        <span class=\"hljs-built_in\">this</span>.format = format;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Component</span><br><span class=\"hljs-meta\">@Slf4j</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">KeyGenerator</span> &#123;<br><br>    <span class=\"hljs-comment\">/*【&quot;SN:&quot;, &quot;FBDZ&#123;yyyyMM&#125;&quot;, 4, &quot;yyyyMM&quot;, RedisExpireTypeEnum.NON】*/</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">YYMM</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&quot;yyMM&quot;</span>;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">YYYYMM</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&quot;yyyyMM&quot;</span>;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">YYYYMMDD</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&quot;yyyyMMdd&quot;</span>;<br><br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">private</span> MakeUpSerialNumPoolService makeUpSerialNumPoolService;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> incrSeqType</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">getIncrSeq</span><span class=\"hljs-params\">(AutoIncSeqType incrSeqType)</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> getIncrSeq(<span class=\"hljs-string\">&quot;&quot;</span>, incrSeqType, <span class=\"hljs-string\">&quot;&quot;</span>);<br>    &#125;<br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     *</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> incrSeqType</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> orgCode</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">getIncrSeq</span><span class=\"hljs-params\">(AutoIncSeqType incrSeqType, String orgCode)</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> getIncrSeq(<span class=\"hljs-string\">&quot;&quot;</span>, incrSeqType, orgCode);<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成日期 自增序号</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> prefix 前缀，为空则不加</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> incrSeqType 业务配置</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> orgCode 经销商、机构等代码</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">getIncrSeq</span><span class=\"hljs-params\">(String prefix, AutoIncSeqType incrSeqType, String orgCode)</span> &#123;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">dateInfo</span> <span class=\"hljs-operator\">=</span> DateUtils.formatDate(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>(), incrSeqType.getFormat());<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">key</span> <span class=\"hljs-operator\">=</span> incrSeqType.getKeyPrefix().replaceAll(<span class=\"hljs-string\">&quot;\\\\&#123;&quot;</span> + incrSeqType.getFormat() + <span class=\"hljs-string\">&quot;\\\\&#125;&quot;</span>, dateInfo);<br>        key = key.replaceAll(<span class=\"hljs-string\">&quot;\\\\&#123;orgCode\\\\&#125;&quot;</span>, orgCode);<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">keyInfo</span> <span class=\"hljs-operator\">=</span> StringUtils.isNotEmpty(prefix) ? prefix + key : key;<br><br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            <span class=\"hljs-type\">Integer</span> <span class=\"hljs-variable\">incr</span> <span class=\"hljs-operator\">=</span> getIncr(keyInfo);<br>            <span class=\"hljs-keyword\">if</span>(incr == <span class=\"hljs-number\">0</span>) &#123;<br>                incr = getIncr(keyInfo);<span class=\"hljs-comment\">//从001开始</span><br>            &#125;<br>            <span class=\"hljs-keyword\">return</span> keyInfo.replace(<span class=\"hljs-string\">&quot;:&quot;</span>,<span class=\"hljs-string\">&quot;&quot;</span>) + String.format(<span class=\"hljs-string\">&quot;%0&quot;</span> + incrSeqType.getLength() +<span class=\"hljs-string\">&quot;d&quot;</span>, incr);<br>        &#125; <span class=\"hljs-keyword\">catch</span> (Exception e) &#123;<br>            e.printStackTrace();<br>            log.error(<span class=\"hljs-string\">&quot;MongoDB生成自增异常：&quot;</span>, e);<br><br>            <span class=\"hljs-comment\">/* 异常时自动生成随机序列号，E结尾*/</span><br>            <span class=\"hljs-keyword\">return</span> keyInfo + RandomUtils.getRandomNumbers(incrSeqType.getLength()) + <span class=\"hljs-string\">&quot;E&quot;</span>;<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> Integer <span class=\"hljs-title function_\">getIncr</span><span class=\"hljs-params\">(String key)</span> &#123;<br>        <span class=\"hljs-type\">MakeUpSerialNumPool</span> <span class=\"hljs-variable\">makeUpSerialNumPool</span> <span class=\"hljs-operator\">=</span> makeUpSerialNumPoolService.findAndModify(key);<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">month</span> <span class=\"hljs-operator\">=</span> key.split(<span class=\"hljs-string\">&quot;:&quot;</span>)[<span class=\"hljs-number\">1</span>];<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">currentMonth</span> <span class=\"hljs-operator\">=</span> String.valueOf(DateUtil.format(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>(), YYYYMM));<br>        <span class=\"hljs-keyword\">if</span> (makeUpSerialNumPool == <span class=\"hljs-literal\">null</span> || !month.equals(currentMonth)) &#123;<br>            makeUpSerialNumPoolService.findAndRemove(key);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> makeUpSerialNumPool.getCountNum();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">RandomUtils</span> &#123;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">char</span>[] codeSequence = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">char</span>[]&#123;<span class=\"hljs-string\">&#x27;A&#x27;</span>, <span class=\"hljs-string\">&#x27;B&#x27;</span>, <span class=\"hljs-string\">&#x27;C&#x27;</span>, <span class=\"hljs-string\">&#x27;D&#x27;</span>, <span class=\"hljs-string\">&#x27;E&#x27;</span>, <span class=\"hljs-string\">&#x27;F&#x27;</span>, <span class=\"hljs-string\">&#x27;G&#x27;</span>, <span class=\"hljs-string\">&#x27;H&#x27;</span>, <span class=\"hljs-string\">&#x27;I&#x27;</span>, <span class=\"hljs-string\">&#x27;J&#x27;</span>, <span class=\"hljs-string\">&#x27;K&#x27;</span>, <span class=\"hljs-string\">&#x27;L&#x27;</span>, <span class=\"hljs-string\">&#x27;M&#x27;</span>, <span class=\"hljs-string\">&#x27;N&#x27;</span>, <span class=\"hljs-string\">&#x27;O&#x27;</span>, <span class=\"hljs-string\">&#x27;P&#x27;</span>, <span class=\"hljs-string\">&#x27;Q&#x27;</span>, <span class=\"hljs-string\">&#x27;R&#x27;</span>, <span class=\"hljs-string\">&#x27;S&#x27;</span>, <span class=\"hljs-string\">&#x27;T&#x27;</span>, <span class=\"hljs-string\">&#x27;U&#x27;</span>, <span class=\"hljs-string\">&#x27;V&#x27;</span>, <span class=\"hljs-string\">&#x27;W&#x27;</span>, <span class=\"hljs-string\">&#x27;X&#x27;</span>, <span class=\"hljs-string\">&#x27;Y&#x27;</span>, <span class=\"hljs-string\">&#x27;Z&#x27;</span>, <span class=\"hljs-string\">&#x27;a&#x27;</span>, <span class=\"hljs-string\">&#x27;b&#x27;</span>, <span class=\"hljs-string\">&#x27;c&#x27;</span>, <span class=\"hljs-string\">&#x27;d&#x27;</span>, <span class=\"hljs-string\">&#x27;e&#x27;</span>, <span class=\"hljs-string\">&#x27;f&#x27;</span>, <span class=\"hljs-string\">&#x27;g&#x27;</span>, <span class=\"hljs-string\">&#x27;h&#x27;</span>, <span class=\"hljs-string\">&#x27;i&#x27;</span>, <span class=\"hljs-string\">&#x27;j&#x27;</span>, <span class=\"hljs-string\">&#x27;k&#x27;</span>, <span class=\"hljs-string\">&#x27;l&#x27;</span>, <span class=\"hljs-string\">&#x27;m&#x27;</span>, <span class=\"hljs-string\">&#x27;n&#x27;</span>, <span class=\"hljs-string\">&#x27;o&#x27;</span>, <span class=\"hljs-string\">&#x27;p&#x27;</span>, <span class=\"hljs-string\">&#x27;q&#x27;</span>, <span class=\"hljs-string\">&#x27;r&#x27;</span>, <span class=\"hljs-string\">&#x27;s&#x27;</span>, <span class=\"hljs-string\">&#x27;t&#x27;</span>, <span class=\"hljs-string\">&#x27;u&#x27;</span>, <span class=\"hljs-string\">&#x27;v&#x27;</span>, <span class=\"hljs-string\">&#x27;w&#x27;</span>, <span class=\"hljs-string\">&#x27;x&#x27;</span>, <span class=\"hljs-string\">&#x27;y&#x27;</span>, <span class=\"hljs-string\">&#x27;z&#x27;</span>, <span class=\"hljs-string\">&#x27;0&#x27;</span>, <span class=\"hljs-string\">&#x27;1&#x27;</span>, <span class=\"hljs-string\">&#x27;2&#x27;</span>, <span class=\"hljs-string\">&#x27;3&#x27;</span>, <span class=\"hljs-string\">&#x27;4&#x27;</span>, <span class=\"hljs-string\">&#x27;5&#x27;</span>, <span class=\"hljs-string\">&#x27;6&#x27;</span>, <span class=\"hljs-string\">&#x27;7&#x27;</span>, <span class=\"hljs-string\">&#x27;8&#x27;</span>, <span class=\"hljs-string\">&#x27;9&#x27;</span>&#125;;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">char</span>[] numSequence = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">char</span>[]&#123;<span class=\"hljs-string\">&#x27;0&#x27;</span>, <span class=\"hljs-string\">&#x27;1&#x27;</span>, <span class=\"hljs-string\">&#x27;2&#x27;</span>, <span class=\"hljs-string\">&#x27;3&#x27;</span>, <span class=\"hljs-string\">&#x27;4&#x27;</span>, <span class=\"hljs-string\">&#x27;5&#x27;</span>, <span class=\"hljs-string\">&#x27;6&#x27;</span>, <span class=\"hljs-string\">&#x27;7&#x27;</span>, <span class=\"hljs-string\">&#x27;8&#x27;</span>, <span class=\"hljs-string\">&#x27;9&#x27;</span>&#125;;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">SecureRandom</span> <span class=\"hljs-variable\">random</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">SecureRandom</span>();<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">RandomUtils</span><span class=\"hljs-params\">()</span> &#123;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">getRandomChars</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-type\">Random</span> <span class=\"hljs-variable\">random</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Random</span>();<br>        <span class=\"hljs-type\">StringBuffer</span> <span class=\"hljs-variable\">sBuffer</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">StringBuffer</span>();<br><br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">14</span>; ++i) &#123;<br>            sBuffer.append(codeSequence[random.nextInt(<span class=\"hljs-number\">62</span>)]);<br>        &#125;<br><br>        <span class=\"hljs-keyword\">return</span> sBuffer.toString();<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">getRandomChars</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> length)</span> &#123;<br>        <span class=\"hljs-type\">Random</span> <span class=\"hljs-variable\">random</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Random</span>();<br>        <span class=\"hljs-type\">StringBuffer</span> <span class=\"hljs-variable\">sBuffer</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">StringBuffer</span>();<br>        <span class=\"hljs-keyword\">if</span> (length &lt; <span class=\"hljs-number\">1</span>) &#123;<br>            length = <span class=\"hljs-number\">14</span>;<br>        &#125;<br><br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; length; ++i) &#123;<br>            sBuffer.append(codeSequence[random.nextInt(<span class=\"hljs-number\">62</span>)]);<br>        &#125;<br><br>        <span class=\"hljs-keyword\">return</span> sBuffer.toString();<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">getRandomNumbers</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> length)</span> &#123;<br>        <span class=\"hljs-type\">Random</span> <span class=\"hljs-variable\">random</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Random</span>();<br>        <span class=\"hljs-type\">StringBuffer</span> <span class=\"hljs-variable\">sBuffer</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">StringBuffer</span>();<br>        <span class=\"hljs-keyword\">if</span> (length &lt; <span class=\"hljs-number\">1</span>) &#123;<br>            length = <span class=\"hljs-number\">14</span>;<br>        &#125;<br><br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; length; ++i) &#123;<br>            sBuffer.append(numSequence[random.nextInt(<span class=\"hljs-number\">10</span>)]);<br>        &#125;<br><br>        <span class=\"hljs-keyword\">return</span> sBuffer.toString();<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generateRandomString</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> numBytes)</span> &#123;<br>        <span class=\"hljs-keyword\">if</span> (numBytes &lt; <span class=\"hljs-number\">1</span>) &#123;<br>            <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">IllegalArgumentException</span>(String.format(<span class=\"hljs-string\">&quot;numBytes argument must be a positive integer (1 or larger)&quot;</span>, (<span class=\"hljs-type\">long</span>)numBytes));<br>        &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>            <span class=\"hljs-type\">byte</span>[] bytes = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">byte</span>[numBytes];<br>            random.nextBytes(bytes);<br>            <span class=\"hljs-keyword\">return</span> Hex.encodeHexString(bytes);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"使用Demo\"><a href=\"#使用Demo\" class=\"headerlink\" title=\"使用Demo\"></a>使用Demo</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Java\"><span class=\"hljs-meta\">@Autowired</span><br><span class=\"hljs-keyword\">private</span> KeyGenerator keyGenerator;<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">key</span> <span class=\"hljs-operator\">=</span> agentCode + <span class=\"hljs-string\">&quot;:&quot;</span> + currentMonth;<br><span class=\"hljs-type\">AutoIncSeqType</span> <span class=\"hljs-variable\">autoIncSeqType</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">AutoIncSeqType</span>(key, <span class=\"hljs-number\">4</span>, dateFormat);<br><span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">incrSeq</span> <span class=\"hljs-operator\">=</span> keyGenerator.getIncrSeq(<span class=\"hljs-literal\">null</span>, autoIncSeqType, agentCode);<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"心得\"><a href=\"#心得\" class=\"headerlink\" title=\"心得\"></a>心得</h1><blockquote>\n<p>上述方法博猪本地测试了一下单次循环，5k的线程没有问题，由于博猪电脑配置较低就没有再进行深入的测试，反正使用是没有太大的问题。</p>\n<p>下面说一下博猪的心得：</p>\n<ul>\n<li><p>上面的方法其实和博猪第一的思考方式是一样的，但是博猪之前考虑的是从Java层面解决并发导致的事务问题，所以没有仔细的研究MongoDB</p>\n</li>\n<li><p>mongodb不支持事务，所以，在你的项目中应用时，要注意这点。无论什么设计，都不要要求mongodb保证数据的完整性。但是mongodb提供了许多原子操作，比如文档的保存，修改，删除等，都是原子操作。</p>\n<p>所谓原子操作就是要么这个文档保存到Mongodb，要么没有保存到Mongodb，不会出现查询到的文档没有保存完整的情况。</p>\n</li>\n</ul>\n</blockquote>\n",
            "tags": [
                "JAVA",
                "MongoDb"
            ]
        }
    ]
}