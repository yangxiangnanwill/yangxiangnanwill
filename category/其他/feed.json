{
    "version": "https://jsonfeed.org/version/1",
    "title": "Will • All posts by \"其他\" category",
    "description": "愿你一生努力，一生被爱",
    "home_page_url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io",
    "items": [
        {
            "id": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/%E5%85%B6%E4%BB%96/SOAR%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/",
            "url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/%E5%85%B6%E4%BB%96/SOAR%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/",
            "title": "SOAR基础教程",
            "date_published": "2024-01-03T13:13:21.650Z",
            "content_html": "<blockquote>\n<p>因博猪最近负责报表模块的相关的开发，虽然类似润乾、帆软这种报表工具对于大型SQL的运行做了一定的优化，但是具体优化还是需要书写者的上去了功底的，由于报表的SQL一般很复杂，再加上有一部分的因为历史原因建表的时候没有太多的关联关系，导致相关统计的时候不得不使用子查询，所以导致最后的SQL有可能会运行很久，所以博猪最近不得不的每次都在<code>EXPLIAN</code>的道路上摸索，理解和转化SQL分析的过程很枯燥很机械，这个是博猪经朋友推荐使用的，感觉对于SQL分析挺方便的，特此记录一下，原因无他，唯懒而已。</p>\n</blockquote>\n<h1 id=\"软件介绍\"><a href=\"#软件介绍\" class=\"headerlink\" title=\"软件介绍\"></a>软件介绍</h1><p>SOAR(SQL Optimizer And Rewriter)是一个对SQL进行优化和改写的自动化工具。 由小米人工智能与云平台的数据库团队开发与维护。</p>\n<h2 id=\"功能特点\"><a href=\"#功能特点\" class=\"headerlink\" title=\"功能特点\"></a>功能特点</h2><ul>\n<li>跨平台支持（支持Linux, Mac环境，Windows环境理论上也支持，不过未全面测试）</li>\n<li>目前只支持 MySQL 语法族协议的SQL优化</li>\n<li>支持基于启发式算法的语句优化</li>\n<li>支持复杂查询的多列索引优化（UPDATE, INSERT, DELETE, SELECT）</li>\n<li>支持EXPLAIN信息丰富解读</li>\n<li>支持SQL指纹、压缩和美化</li>\n<li>支持同一张表多条ALTER请求合并</li>\n<li>支持自定义规则的SQL改写</li>\n</ul>\n<h1 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h1><h2 id=\"安装基本环境\"><a href=\"#安装基本环境\" class=\"headerlink\" title=\"安装基本环境\"></a>安装基本环境</h2><p><a href=\"https://studygolang.com/dl\">下载Go</a></p>\n<p>选择windows版本下载，安装。</p>\n<p>安装完成后，cmd中输入 go version ，出现版本信息。</p>\n<p><img src=\"http://tva1.sinaimg.cn/large/0086NgqGgy1h2xcjbah2xj30b902x74h.jpg\" alt=\"image.png\"></p>\n<h2 id=\"soar下载\"><a href=\"#soar下载\" class=\"headerlink\" title=\"soar下载\"></a>soar下载</h2><blockquote>\n<p><a href=\"https://github.com/XiaoMi/soar\">GitHub地址</a></p>\n</blockquote>\n<p><a href=\"https://github.com/XiaoMi/soar/releases\">点击下载选择windows版本下载</a></p>\n<blockquote>\n<p>eg:我放到了<code>D:\\Program Files\\soar</code>目录下面，将soar.windows-amd64重命名为soar.exe</p>\n</blockquote>\n<p>添加环境变量，方便往后使用。</p>\n<p>cmd中 输入 soar -version命令，出行版本信息为安装成功。</p>\n<p><img src=\"http://tva1.sinaimg.cn/large/0086NgqGgy1h2xcrq99pej30g503mjs3.jpg\" alt=\"image.png\"></p>\n<p>soar —help 查看帮助手册</p>\n<p><img src=\"http://tva1.sinaimg.cn/large/0086NgqGgy1h2xcse7fc1j30ma0mbaht.jpg\" alt=\"image.png\"></p>\n<h1 id=\"进阶使用\"><a href=\"#进阶使用\" class=\"headerlink\" title=\"进阶使用\"></a>进阶使用</h1><h2 id=\"相关配置\"><a href=\"#相关配置\" class=\"headerlink\" title=\"相关配置\"></a>相关配置</h2><blockquote>\n<p>在<code>soar</code>软件目录下面创建<code>etc</code>文件夹，并建立<code>soar.yaml</code>文件,并复制一下内容</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-comment\"># 线上环境配置</span><br><span class=\"hljs-attr\">online-dsn:</span><br>  <span class=\"hljs-attr\">addr:</span> <span class=\"hljs-number\">127.0</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.0</span><span class=\"hljs-string\">:3306</span><br>  <span class=\"hljs-attr\">schema:</span> <span class=\"hljs-string\">soar-test</span><br>  <span class=\"hljs-attr\">user:</span> <span class=\"hljs-string\">root</span><br>  <span class=\"hljs-attr\">password:</span> <span class=\"hljs-string\">admin</span><br>  <span class=\"hljs-attr\">disable:</span> <span class=\"hljs-literal\">true</span><br><span class=\"hljs-comment\"># 测试环境配置</span><br><span class=\"hljs-attr\">test-dsn:</span><br>  <span class=\"hljs-attr\">addr:</span> <span class=\"hljs-number\">127.0</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.0</span><span class=\"hljs-string\">:3306</span><br>  <span class=\"hljs-attr\">schema:</span> <span class=\"hljs-string\">soar-test</span><br>  <span class=\"hljs-attr\">user:</span> <span class=\"hljs-string\">root</span><br>  <span class=\"hljs-attr\">password:</span> <span class=\"hljs-string\">admin</span><br>  <span class=\"hljs-attr\">disable:</span> <span class=\"hljs-literal\">true</span><br><span class=\"hljs-comment\"># 是否允许测试环境与线上环境配置相同</span><br><span class=\"hljs-attr\">allow-online-as-test:</span> <span class=\"hljs-literal\">true</span><br><span class=\"hljs-comment\"># 是否清理测试时产生的临时文件</span><br><span class=\"hljs-attr\">drop-test-temporary:</span> <span class=\"hljs-literal\">true</span><br><span class=\"hljs-comment\"># 语法检查小工具</span><br><span class=\"hljs-attr\">only-syntax-check:</span> <span class=\"hljs-literal\">false</span><br><span class=\"hljs-attr\">sampling-statistic-target:</span> <span class=\"hljs-number\">100</span><br><span class=\"hljs-attr\">sampling:</span> <span class=\"hljs-literal\">false</span><br><span class=\"hljs-comment\"># 日志级别，[0:Emergency, 1:Alert, 2:Critical, 3:Error, 4:Warning, 5:Notice, 6:Informational, 7:Debug]</span><br><span class=\"hljs-attr\">log-level:</span> <span class=\"hljs-number\">7</span><br><span class=\"hljs-attr\">log-output:</span> <span class=\"hljs-string\">etc/soar.log</span><br><span class=\"hljs-comment\"># 优化建议输出格式</span><br><span class=\"hljs-attr\">report-type:</span> <span class=\"hljs-string\">markdown</span><br><span class=\"hljs-attr\">ignore-rules:</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span><br><span class=\"hljs-comment\"># 黑名单中的 SQL 将不会给评审意见。一行一条 SQL，可以是正则也可以是指纹，填写指纹时注意问号需要加反斜线转义。</span><br><span class=\"hljs-attr\">blacklist:</span> <span class=\"hljs-string\">etc/soar.blacklist</span><br><span class=\"hljs-comment\"># 启发式算法相关配置</span><br><span class=\"hljs-attr\">max-join-table-count:</span> <span class=\"hljs-number\">5</span><br><span class=\"hljs-attr\">max-group-by-cols-count:</span> <span class=\"hljs-number\">5</span><br><span class=\"hljs-attr\">max-distinct-count:</span> <span class=\"hljs-number\">5</span><br><span class=\"hljs-attr\">max-index-cols-count:</span> <span class=\"hljs-number\">5</span><br><span class=\"hljs-attr\">max-total-rows:</span> <span class=\"hljs-number\">9999999</span><br><span class=\"hljs-attr\">spaghetti-query-length:</span> <span class=\"hljs-number\">2048</span><br><span class=\"hljs-attr\">allow-drop-index:</span> <span class=\"hljs-literal\">false</span><br><span class=\"hljs-comment\"># EXPLAIN相关配置</span><br><span class=\"hljs-attr\">explain-sql-report-type:</span> <span class=\"hljs-string\">pretty</span><br><span class=\"hljs-attr\">explain-type:</span> <span class=\"hljs-string\">extended</span><br><span class=\"hljs-attr\">explain-format:</span> <span class=\"hljs-string\">traditional</span><br><span class=\"hljs-attr\">explain-warn-select-type:</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span><br><span class=\"hljs-attr\">explain-warn-access-type:</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">ALL</span><br><span class=\"hljs-attr\">explain-max-keys:</span> <span class=\"hljs-number\">3</span><br><span class=\"hljs-attr\">explain-min-keys:</span> <span class=\"hljs-number\">0</span><br><span class=\"hljs-attr\">explain-max-rows:</span> <span class=\"hljs-number\">10000</span><br><span class=\"hljs-attr\">explain-warn-extra:</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span><br><span class=\"hljs-attr\">explain-max-filtered:</span> <span class=\"hljs-number\">100</span><br><span class=\"hljs-attr\">explain-warn-scalability:</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">O(n)</span><br><span class=\"hljs-attr\">query:</span> <span class=\"hljs-string\">&quot;&quot;</span><br><span class=\"hljs-attr\">list-heuristic-rules:</span> <span class=\"hljs-literal\">false</span><br><span class=\"hljs-attr\">list-test-sqls:</span> <span class=\"hljs-literal\">false</span><br><span class=\"hljs-attr\">verbose:</span> <span class=\"hljs-literal\">true</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">soar -query renewal_six_first_track.sql &gt; ./renewal_six_first_track.md -test-dsn=&quot;root:admin@127.0.0.0:3306/soar-test&quot; -allow-online-as-test<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"查看生成报告\"><a href=\"#查看生成报告\" class=\"headerlink\" title=\"查看生成报告\"></a>查看生成报告</h2><blockquote>\n<p>SQL代码分析报告会生成一个Markdown文件，可通过Markdown文件查看SQL性能分析情况。</p>\n</blockquote>\n<p><img src=\"http://tva1.sinaimg.cn/large/0086NgqGgy1h2xcvilni2j31eo0qu7ea.jpg\" alt=\"image.png\"></p>\n",
            "tags": [
                "SOAR",
                "其他"
            ]
        },
        {
            "id": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/%E5%85%B6%E4%BB%96/%E5%8D%9A%E5%AE%A2%E5%9B%AD%E4%BC%98%E5%8C%96/",
            "url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/%E5%85%B6%E4%BB%96/%E5%8D%9A%E5%AE%A2%E5%9B%AD%E4%BC%98%E5%8C%96/",
            "title": "博客园优化",
            "date_published": "2024-01-03T13:13:21.650Z",
            "content_html": "<h1 id=\"博客园美化\"><a href=\"#博客园美化\" class=\"headerlink\" title=\"博客园美化\"></a>博客园美化</h1><blockquote>\n<p>由于博猪最近网络比较坑爹，又不满足于CSDN这个坑爹的社区，所以博猪的瞄向了博客园，但是博客园的主题太丑了，所以这里提供一个美化的解决方案：<a href=\"https://www.yuque.com/awescnb/user/tmpomo\">awescnb</a>,由于官方文档比较完整这里不提供教程了。</p>\n</blockquote>\n<h1 id=\"博客园Markdown上传\"><a href=\"#博客园Markdown上传\" class=\"headerlink\" title=\"博客园Markdown上传\"></a>博客园Markdown上传</h1><blockquote>\n<p>首先需要电脑内置Python3的环境！！！！</p>\n<p>功能很香！！！！</p>\n</blockquote>\n<h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">git clone git@github.com:dongfanger/pycnblog.git<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>或者直接手动下载：<a href=\"https://github.com/dongfanger/pycnblog\">github</a></p>\n</blockquote>\n<h2 id=\"安装依赖库\"><a href=\"#安装依赖库\" class=\"headerlink\" title=\"安装依赖库\"></a>安装依赖库</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">pip install pyyaml<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"配置脚本\"><a href=\"#配置脚本\" class=\"headerlink\" title=\"配置脚本\"></a>配置脚本</h2><blockquote>\n<p>在config.yaml中，填写博客配置信息。</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">blog_url:</span> <span class=\"hljs-string\">https://rpc.cnblogs.com/metaweblog/testblog</span><br><span class=\"hljs-attr\">blog_id:</span> <span class=\"hljs-string\">&quot;testblog&quot;</span><br><span class=\"hljs-attr\">username:</span> <span class=\"hljs-string\">&quot;zhangsan&quot;</span><br><span class=\"hljs-attr\">password:</span> <span class=\"hljs-string\">&quot;123456&quot;</span><br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-comment\"># blog_url在博客后台&gt;设置，页面最下方的MetaWeblog访问地址。 https://rpc.cnblogs.com/metaweblog/testblog</span><br><span class=\"hljs-comment\"># blog_id就是访问地址的尾巴， testblog。</span><br><span class=\"hljs-comment\"># username是登录用户名，跟blog_id不一定是同一个。</span><br><span class=\"hljs-comment\"># 是否生成图片替换后本地文件,默认False关闭</span><br><span class=\"hljs-comment\"># 上传后是否发布，默认未发布，设置True为发布</span><br><span class=\"hljs-comment\"># 图片自定义显示格式，默认不设置</span><br><span class=\"hljs-comment\"># 如设置width和居中，&lt;center&gt;&lt;img src=&quot;&#123;&#125;&quot; style=&quot;width:100%&quot; /&gt;&lt;/center&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"运行脚本\"><a href=\"#运行脚本\" class=\"headerlink\" title=\"运行脚本\"></a>运行脚本</h2><p>打开 <code>cnblog_markdown.cmd</code>（windows里面双击此文件即可），提示<code>Please input file path:</code>把文件往里一拖，回车就完事了。</p>\n<blockquote>\n<p>最后别忘了，博客后台看一下，没问题就确认发布草稿。</p>\n</blockquote>\n",
            "tags": [
                "其他",
                "博客园",
                "博客"
            ]
        },
        {
            "id": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/%E5%85%B6%E4%BB%96/ProtoBuffer%E7%AC%94%E8%AE%B0/",
            "url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/%E5%85%B6%E4%BB%96/ProtoBuffer%E7%AC%94%E8%AE%B0/",
            "title": "ProtoBuffer笔记",
            "date_published": "2024-01-03T13:13:21.649Z",
            "content_html": "<h1 id=\"Protobuf学习\"><a href=\"#Protobuf学习\" class=\"headerlink\" title=\"Protobuf学习\"></a>Protobuf学习</h1><h2 id=\"Protobuf是什么\"><a href=\"#Protobuf是什么\" class=\"headerlink\" title=\"Protobuf是什么\"></a>Protobuf是什么</h2><p>Protobuf是一种平台无关、语言无关、可扩展且轻便高效的序列化数据结构的协议，可以用于<strong>网络通信</strong>和<strong>数据存储</strong>。</p>\n<h3 id=\"为什么要使用Protobuf\"><a href=\"#为什么要使用Protobuf\" class=\"headerlink\" title=\"为什么要使用Protobuf\"></a>为什么要使用Protobuf</h3><p><img src=\"D:/images4note/2608075-1e8b5b166e9d9fee.png\"></p>\n<p>使用方法也比较简单:</p>\n<ul>\n<li><p>定义用于消息文件.proto</p>\n</li>\n<li><p>使用protobuf的编译器编译消息文件</p>\n</li>\n<li><p>使用编译好对应语言的类文件进行消息的序列化与反序列化</p>\n<p>先来定义一个简单的消息:</p>\n<figure class=\"highlight protobuf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs protobuf\"><span class=\"hljs-keyword\">message </span><span class=\"hljs-title class_\">Person</span> &#123;<br>   <span class=\"hljs-type\">int32</span> id = <span class=\"hljs-number\">1</span>;<span class=\"hljs-comment\">//24</span><br>   <span class=\"hljs-type\">string</span> name = <span class=\"hljs-number\">2</span>;<span class=\"hljs-comment\">//wujingchao</span><br>   <span class=\"hljs-type\">string</span> email = <span class=\"hljs-number\">3</span>;<span class=\"hljs-comment\">//wujingchao92@gmail.com</span><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>实际的二进制消息为:</p>\n<p>08 18 12 0a 77 75 6a 69 6e 67 63 68 61 6f 1a 16 77 75 6a 69 6e 67 63 68 61 6f 39 32 40 67 6d 61 69 6c 2e 63 6f 6d</p>\n<p>其实Protobuffer就是把数据转换成2进制的数据，这样传输效率会大大提高！！</p>\n<p>使用步骤：</p>\n<p>先在Java的同级目录下新建一个名为proto的文件夹专门用于存放proto文件，编写proto文件后编译模块会根据proto文件内容生成java文件。</p>\n<p><img src=\"D:/images4note/2608075-1e8f6b397107fd56.png\"></p>\n</li>\n</ul>\n<p>来看一下名为Test.proto的文件内容:</p>\n<figure class=\"highlight protobuf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs protobuf\"><span class=\"hljs-comment\">//指定protobuf语法版本</span><br>syntax = <span class=\"hljs-string\">&quot;proto2&quot;</span>;<br><br><span class=\"hljs-comment\">//包名</span><br><span class=\"hljs-keyword\">option</span> java_package = <span class=\"hljs-string\">&quot;com.lhc.protobuf&quot;</span>;<br><span class=\"hljs-comment\">//源文件类名</span><br><span class=\"hljs-keyword\">option</span> java_outer_classname = <span class=\"hljs-string\">&quot;AddressBookProtos&quot;</span>;<br><br><span class=\"hljs-comment\">// class Person</span><br><span class=\"hljs-keyword\">message </span><span class=\"hljs-title class_\">Person</span> &#123;<br>  <span class=\"hljs-comment\">//required 必须设置（不能为null）</span><br>  <span class=\"hljs-keyword\">required</span> <span class=\"hljs-type\">string</span> name = <span class=\"hljs-number\">1</span>;<br>  <span class=\"hljs-comment\">//int32 对应java中的int</span><br>  <span class=\"hljs-keyword\">required</span> <span class=\"hljs-type\">int32</span> id = <span class=\"hljs-number\">2</span>;<br>  <span class=\"hljs-comment\">//optional 可以为空</span><br>  <span class=\"hljs-keyword\">optional</span> <span class=\"hljs-type\">string</span> email = <span class=\"hljs-number\">3</span>;<br><br>  <span class=\"hljs-keyword\">enum </span><span class=\"hljs-title class_\">PhoneType</span> &#123;<br>    MOBILE = <span class=\"hljs-number\">0</span>;<br>    HOME = <span class=\"hljs-number\">1</span>;<br>    WORK = <span class=\"hljs-number\">2</span>;<br>  &#125;<br><br>  <span class=\"hljs-keyword\">message </span><span class=\"hljs-title class_\">PhoneNumber</span> &#123;<br>    <span class=\"hljs-keyword\">required</span> <span class=\"hljs-type\">string</span> number = <span class=\"hljs-number\">1</span>;<br>    <span class=\"hljs-keyword\">optional</span> PhoneType type = <span class=\"hljs-number\">2</span> [default = HOME];<br>  &#125;<br>   <span class=\"hljs-comment\">//repeated 重复的 （集合）</span><br>  <span class=\"hljs-keyword\">repeated</span> PhoneNumber phones = <span class=\"hljs-number\">4</span>;<br>&#125;<br><br><span class=\"hljs-keyword\">message </span><span class=\"hljs-title class_\">AddressBook</span> &#123;<br>  <span class=\"hljs-keyword\">repeated</span> Person people = <span class=\"hljs-number\">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Protobuf应用——网络传输\"><a href=\"#Protobuf应用——网络传输\" class=\"headerlink\" title=\"Protobuf应用——网络传输\"></a>Protobuf应用——网络传输</h2><h5 id=\"http传输\"><a href=\"#http传输\" class=\"headerlink\" title=\"http传输\"></a>http传输</h5><p>通常在应用层我们使用的都是Http协议，Http的本质是一次socket请求的连接与断开。传输数据时将protobuf对象转换为byte[]传输即可</p>\n<h5 id=\"自定义TCP通信协议\"><a href=\"#自定义TCP通信协议\" class=\"headerlink\" title=\"自定义TCP通信协议\"></a>自定义TCP通信协议</h5><p>当我们自定义TCP通信协议的时候，将面临粘包与分包的问题</p>\n<p>分包：</p>\n<ul>\n<li>要发送的数据大于TCP缓冲剩余空间</li>\n<li>待发送数据大于MSS（最大报文长度）</li>\n</ul>\n<p><img src=\"D:/images4note/2608075-120dfd45169eb074.webp\" alt=\"img\"></p>\n<p>粘包：</p>\n<ul>\n<li>要发送的数据小于TCP缓冲区，将多次写入缓冲区的数据一起发送</li>\n<li>接收端的应用层没有及时读取缓冲区的数据</li>\n</ul>\n<p>自定义通信协议的两种方式</p>\n<ul>\n<li>定义数据包包头</li>\n</ul>\n<p><img src=\"D:/images4note/2608075-43774effe82958aa-1553651810415.png\" alt=\"img\"></p>\n<ul>\n<li>在数据包之间设置边界</li>\n</ul>\n<p><img src=\"D:/images4note/2608075-4ae26be105ab8167.webp\" alt=\"img\"></p>\n<p>​            大家可以参考 JT808协议 ——交通部808协议（车联网），也是采用类似的方式定义通信协议</p>\n<hr>\n<h1 id=\"小细节：\"><a href=\"#小细节：\" class=\"headerlink\" title=\"小细节：\"></a>小细节：</h1><h3 id=\"枚举enum类型：\"><a href=\"#枚举enum类型：\" class=\"headerlink\" title=\"枚举enum类型：\"></a>枚举enum类型：</h3><h4 id=\"1、不支持一个proto文件中，多个枚举中定义相同的枚举常量名。\"><a href=\"#1、不支持一个proto文件中，多个枚举中定义相同的枚举常量名。\" class=\"headerlink\" title=\"1、不支持一个proto文件中，多个枚举中定义相同的枚举常量名。\"></a>1、不支持一个proto文件中，多个枚举中定义相同的枚举常量名。</h4><figure class=\"highlight protobuf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs protobuf\"><span class=\"hljs-keyword\">enum </span><span class=\"hljs-title class_\">Enum1</span> &#123;<br>    IDLE = <span class=\"hljs-number\">0</span>;<br>    RUNNING = <span class=\"hljs-number\">1</span>;<br>&#125;<br><br><span class=\"hljs-keyword\">enum </span><span class=\"hljs-title class_\">Enum2</span> &#123;<br>    IDLE = <span class=\"hljs-number\">5</span>;<br>    RUNNING = <span class=\"hljs-number\">6</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>&#x3D;&#x3D;编译不通过，会报错！！！&#x3D;&#x3D;</p>\n<h4 id=\"2、枚举第一个常量的值必须是0\"><a href=\"#2、枚举第一个常量的值必须是0\" class=\"headerlink\" title=\"2、枚举第一个常量的值必须是0\"></a>2、枚举第一个常量的值必须是0</h4><p>eg:</p>\n<figure class=\"highlight protobuf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs protobuf\"><span class=\"hljs-keyword\">enum </span><span class=\"hljs-title class_\">BallTypeEnum</span> &#123;<br>    BALL_TYPE_UNSPECIFIED = <span class=\"hljs-number\">0</span>;<br>    BASKETBALL = <span class=\"hljs-number\">1</span>;<br>    FOOTBALL = <span class=\"hljs-number\">2</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n",
            "tags": [
                "其他",
                "ProtoBuffer"
            ]
        }
    ]
}