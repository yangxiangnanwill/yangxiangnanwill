{
    "version": "https://jsonfeed.org/version/1",
    "title": "Will • All posts by \"要有一颗大心脏\" category",
    "description": "愿你一生努力，一生被爱",
    "home_page_url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io",
    "items": [
        {
            "id": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E8%A6%81%E6%9C%89%E4%B8%80%E9%A2%97%E5%A4%A7%E5%BF%83%E8%84%8F/%E5%BC%80%E5%8F%91%E5%A5%BD%E4%B9%A0%E6%83%AF/",
            "url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E8%A6%81%E6%9C%89%E4%B8%80%E9%A2%97%E5%A4%A7%E5%BF%83%E8%84%8F/%E5%BC%80%E5%8F%91%E5%A5%BD%E4%B9%A0%E6%83%AF/",
            "title": "开发好习惯",
            "date_published": "2024-01-03T13:13:21.669Z",
            "content_html": "<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><blockquote>\n<p>写干净的代码，做风一样的男子！</p>\n</blockquote>\n<p>编程5分钟，查代码2小时!</p>\n<p>在程序员的编程生涯，免不了和BUG打交道，甚至有些程序员被BUG虐杀的苦不堪言。</p>\n<p><img src=\"https://p3-tt.byteimg.com/origin/4ada0003ada15e3b0683?from=pc\" alt=\"程序员减少代码BUG的7种方法，写干净的代码，做风一样的男子！\"></p>\n<p><strong>当有人指出程序员代码有BUG时，程序员的回答各有不同：</strong></p>\n<ul>\n<li>不可能啊，在我电脑上运行没有问题呀!</li>\n<li>我已经一星期没碰这块代码啦!</li>\n<li>没事，我改一行代码就可以了，不影响程序。</li>\n</ul>\n<div>\n<center>程序员调 Bug 的样子，非常真实~</center>\n</div>\n\n<p>​                                                                                                                         <center>↓↓↓</center></p>\n<p><img src=\"https://ss.csdn.net/p?http://mmbiz.qpic.cn/mmbiz_gif/2A8tXicCG8yka2rcVsmkqPjN4taJfwp3wUy7KTTM4IhnOjTMdC3zXRYGElM7Pia1AhvV02UlibtPKoRFc9icv40dHA/0?wx_fmt=gif&wxfrom=5&wx_lazy=1\" alt=\"0?wx_fmt=gif&amp;wxfrom=5&amp;wx_lazy=1\"></p>\n<p><img src=\"https://ss.csdn.net/p?http://mmbiz.qpic.cn/mmbiz_gif/2A8tXicCG8yka2rcVsmkqPjN4taJfwp3wxQKXe3ibNiadib0xqp2uYXribWiby2WCrXmO4q1CXAibbpugibUNvdA2yuuNQ/0?wx_fmt=gif&wxfrom=5&wx_lazy=1\" alt=\"0?wx_fmt=gif&amp;wxfrom=5&amp;wx_lazy=1\"></p>\n<p><img src=\"https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_gif/2A8tXicCG8yka2rcVsmkqPjN4taJfwp3w5fLdGxLudXOB5pdrwh2vbClrZU7KC5QysFhibrkP9spDK2kONPHTUnw/0?wx_fmt=gif\" alt=\"0?wx_fmt=gif\"></p>\n<blockquote>\n<p>调bug是火，bug是烟。一处点火，四处冒烟</p>\n<p>下面奉上我日常开发的一些总结.</p>\n</blockquote>\n<h1 id=\"如何减少代码的BUG呢-在此分享几个技巧\"><a href=\"#如何减少代码的BUG呢-在此分享几个技巧\" class=\"headerlink\" title=\"如何减少代码的BUG呢?在此分享几个技巧\"></a>如何减少代码的BUG呢?在此分享几个技巧</h1><h2 id=\"别对警告视而不见\"><a href=\"#别对警告视而不见\" class=\"headerlink\" title=\"别对警告视而不见\"></a>别对警告视而不见</h2><p>相信不少的程序员会使用IDEA，使用它敲代码，有时候会出现警告，那么这时你对警告就不能视而不见了。</p>\n<p><strong>我们的目标是，写干净的代码，做风一样的男子!</strong></p>\n<p><img src=\"https://p1-tt.byteimg.com/origin/4add00036e54d5cefc42?from=pc\" alt=\"程序员减少代码BUG的7种方法，写干净的代码，做风一样的男子！\"></p>\n<h2 id=\"编程习惯\"><a href=\"#编程习惯\" class=\"headerlink\" title=\"编程习惯\"></a>编程习惯</h2><p>种瓜得瓜种豆得豆，好的编程习惯可以大大降低BUG数量。譬如有if必须写else，即使else是个空语句 。</p>\n<h2 id=\"写代码的时间问题\"><a href=\"#写代码的时间问题\" class=\"headerlink\" title=\"写代码的时间问题\"></a>写代码的时间问题</h2><p>对于程序员而言，千万别熬夜写代码。一些程序员在晚上11点，仍然在敲代码。</p>\n<p>虽然你自己觉得头脑其实很清醒，但是第二天自测，或者QA测试的时候你有可能就会发现问题很多。</p>\n<p><strong>我们一般不提倡长期加班写代码，因为那样会导致Bug率直线上升。</strong></p>\n<p><img src=\"https://p1-tt.byteimg.com/origin/4ade00036510b0efbb55?from=pc\" alt=\"程序员减少代码BUG的7种方法，写干净的代码，做风一样的男子！\"></p>\n<h2 id=\"验证、自测\"><a href=\"#验证、自测\" class=\"headerlink\" title=\"验证、自测\"></a>验证、自测</h2><p>在提交测试前要多验证，其中包括自动化测试、手动跑用例等。</p>\n<p>有一句话说的好，千万别怕麻烦，不然你会麻烦一辈子。</p>\n<p>这也是我认为我现在坚持的比较好的一点，自测ok，然后交给业务测试</p>\n<h2 id=\"仔细的DEBUG\"><a href=\"#仔细的DEBUG\" class=\"headerlink\" title=\"仔细的DEBUG\"></a>仔细的DEBUG</h2><p>在2.4基础上建议自测是仔细的DEBUG一遍，这样能对自己的代码心里有个范围，大体知道风险点和错误是便于直接调整自己的代码。</p>\n<h2 id=\"仔细的设计\"><a href=\"#仔细的设计\" class=\"headerlink\" title=\"仔细的设计\"></a>仔细的设计</h2><p>在程序员编写代码之前，必须对代码的整个结构以及逻辑结构胸有成竹。</p>\n<h2 id=\"避免干扰\"><a href=\"#避免干扰\" class=\"headerlink\" title=\"避免干扰\"></a>避免干扰</h2><p>有部分的程序员敲代码的时候，经常会一边听音乐一边敲代码，这样效率不仅仅低，而且也更容易产生BUG。</p>\n<h2 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h2><p>写注释，写注释，写注释。重要的事情说三遍。</p>\n<p>因为前期的注释有利于后续开发的时候容易减少bug。</p>\n<p><strong>自从修改了注释模板，整个人精神多了，bug也明显少了，如图：</strong></p>\n<p><img src=\"https://gitee.com/yangxiangnanWorkSpace/uploadImages/raw/master/static/20201215145135.png\" alt=\"image-20201215145125620\"></p>\n<h2 id=\"敢于维护上古代码\"><a href=\"#敢于维护上古代码\" class=\"headerlink\" title=\"敢于维护上古代码\"></a>敢于维护上古代码</h2><p>博猪开发时间其实很少，只有一年的时间，其实上古代码对于博猪的历练很大，俗话说的好多吃BUG,身体棒棒。博猪入职之后前半年一直维护一个SSI项目，里面用的技术很杂，有的在网上找不到，包括前端和后台，其次最重要的是业务方面，更是不懂，业务一般人不是给你讲的，所以我就一遍遍的启动本地DEBUG,慢慢啃下来的。</p>\n<p>‍</p>\n",
            "tags": [
                "开发习惯",
                "思考"
            ]
        },
        {
            "id": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/01/%E8%A6%81%E6%9C%89%E4%B8%80%E9%A2%97%E5%A4%A7%E5%BF%83%E8%84%8F/%E4%BB%A5%E7%BB%88%E4%B8%BA%E5%A7%8B/",
            "url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/01/%E8%A6%81%E6%9C%89%E4%B8%80%E9%A2%97%E5%A4%A7%E5%BF%83%E8%84%8F/%E4%BB%A5%E7%BB%88%E4%B8%BA%E5%A7%8B/",
            "title": "以终为始",
            "date_published": "2024-01-01T10:30:54.019Z",
            "content_html": "<h1 id=\"“以终为始”是什么？\"><a href=\"#“以终为始”是什么？\" class=\"headerlink\" title=\"“以终为始”是什么？\"></a>“以终为始”是什么？</h1><p>意思是指，先在脑海里构思，然后进行实质创造，需要由两个层面来构成的：</p>\n<p>一是心智层面，即在脑海里构思；<br>二是实践层面，即在实际中行动。<br>当然也有个人会把他们理解为二次创造。</p>\n<p>就好像我们写文章一样，如果什么都想表达，反而什么都表达不了。</p>\n<p>忽然记得之前有个很火的广告语:”去哪里不重要，重要的是去啊”。其实之前我是很认可这种说法的，我认为行动起来很重要，但是的近半年的经历让我忽然有些转变了。</p>\n<p>举个简单的例子，我是程序员出身，那就举一个面试中经常出一个一个完整的一个业务场景：用户登录，好那开发一个用户登录的功能。<br>我相信很多人读到上面的时候脑子已经构思出大致的轮廓了，有的甚至可以进行code了，但是呢，我忽然发现我这块有短信服务，是否可以对接一下短信服务进行便捷登录呢？当然也是否可以通过微信扫码进行更为便捷的登录呢？<br>思路顺道这里是否心里有很多的mmp飞过，当然我之前也是这种思考思维，但是经过过多的踩坑然后调节后我发现了”以终为始”这个思维方式，并逐步的运用到工作和生活中。</p>\n<h2 id=\"为什么要“以终为始”\"><a href=\"#为什么要“以终为始”\" class=\"headerlink\" title=\"为什么要“以终为始”\"></a>为什么要“以终为始”</h2><p>养成“以终为始”的习惯不仅能帮提升我们的工作效率，而且能最大程度上激发我们的潜能。</p>\n<p>从结果出发来思考，你会将着眼点放在现在要做什么的事情，才能最快地达到目标，而不是仅仅局限在现有的环境和资源中，觉得茫然无措。</p>\n<p>比如，日本企业家稻盛和夫，在自己公司规模还很小的时候，就敢接手要求高到离谱的大订单。</p>\n<p>因为稻盛和夫认为要达到订单的要求，不能从现在的能力去衡量。而是应该从结果出发，去调动一切资源，去努力成长。稻盛和夫正是应用这种思维，将三家企业做到了世界500强。</p>\n<p>做事情之前，<strong>永远要先思考一下，我想做什么，我要达成什么样的目标，这样你的努力，就不会偏离你要去的终点，</strong>而且还有助于激发你的潜力。</p>\n<h1 id=\"怎么样才能做到“以终为始”？\"><a href=\"#怎么样才能做到“以终为始”？\" class=\"headerlink\" title=\"怎么样才能做到“以终为始”？\"></a>怎么样才能做到“以终为始”？</h1><p>道理简单，但做到真的很难，具体要怎么才能达到“以终为始”呢？可以从下面三个tips入手。</p>\n<h2 id=\"1、遇到事情，倒着想\"><a href=\"#1、遇到事情，倒着想\" class=\"headerlink\" title=\"1、遇到事情，倒着想\"></a>1、遇到事情，倒着想</h2><p>如果在一项工作当中，你并没有完全领会领导的最终意图，**应及时主动沟通，避免方向性的错误。<br>只有确定了目标和意义，才会不折不挠的始终向着目标前进，而这就是我们所说的以终为始。</p>\n<p><strong>2、分解目标，制定做事顺序</strong></p>\n<p>“兵马未动，粮草先行”，树立好目标后，要提前做好统筹计划，考虑可能出现的问题和困难。</p>\n<p>什么是有效的计划？业界有一个通用的SMART原则，是英文<strong>Specific、Measurable、Attainable、Relevant、Time－based</strong>这5个词的缩写，亦即“具体、可衡量、有可行性、有相关性、有时间期限”。</p>\n<p>“量化”在目标实现中是一个非常重要的因素。用一句话来概括就是：我需要在什么时间点，达成什么样的进度？</p>\n<p><strong>3、坚决执行，适时调整</strong></p>\n<p>我个人比较不理解的一句话就是“听过很多道理，却过不好这一生”。总感觉这是那些没什么执行力和自制力的人为自己找的借口。</p>\n<p>而想要提升效率最好的办法就是<strong>一件一件事去做</strong>！</p>\n<p>但是在执行过程中，不能一根筋，完全按照当时的计划按部就班地执行。因为我们前期制定计划往往不是完美无缺的。</p>\n",
            "tags": [
                "思维习惯"
            ]
        }
    ]
}