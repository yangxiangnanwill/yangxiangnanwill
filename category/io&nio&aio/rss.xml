<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Will • Posts by &#34;io&amp;nio&amp;aio&#34; category</title>
        <link>https://github.com/yangxiangnanwill/yangxiangnanwill.github.io</link>
        <description>愿你一生努力，一生被爱</description>
        <language>zh-CN</language>
        <pubDate>Wed, 03 Jan 2024 21:13:21 +0800</pubDate>
        <lastBuildDate>Wed, 03 Jan 2024 21:13:21 +0800</lastBuildDate>
        <category>开发习惯</category>
        <category>思考</category>
        <category>思维习惯</category>
        <category>感言</category>
        <category>Docker</category>
        <category>LINUX</category>
        <category>Node</category>
        <category>前端</category>
        <category>Nvm</category>
        <category>CentOS</category>
        <category>Linux</category>
        <category>Crontab</category>
        <category>Jenkins</category>
        <category>IDEA</category>
        <category>Alibaba Cloud Toolkit</category>
        <category>Archery</category>
        <category>MySql</category>
        <category>工具</category>
        <category>Maven</category>
        <category>Git</category>
        <category>JAVA</category>
        <category>shell</category>
        <category>信息安全等级保护认证</category>
        <category>系统认证</category>
        <category>读书笔记</category>
        <category>BeetlSql</category>
        <category>Beetl</category>
        <category>异常</category>
        <category>Java IO-初识IO</category>
        <category>Spring</category>
        <category>SpringCloud</category>
        <category>SpringCloud Alibaba</category>
        <category>枚举</category>
        <category>POI</category>
        <category>Spring Boot</category>
        <category>VinUtil</category>
        <category>VerificationCode</category>
        <category>SOAR</category>
        <category>其他</category>
        <category>ProtoBuffer</category>
        <category>博客园</category>
        <category>博客</category>
        <category>MongoDb</category>
        <category>Lombok工具库详解</category>
        <category>常用开发库</category>
        <category>JSON类库详解</category>
        <category>Hutool</category>
        <category>工具类</category>
        <category>Spring常用工具类</category>
        <category>异步编程</category>
        <category>线程</category>
        <category>方法论</category>
        <category>开源协议</category>
        <category>CentOS7</category>
        <category>MongoDB</category>
        <category>Redis</category>
        <category>VMware</category>
        <category>Typora</category>
        <category>PostMan</category>
        <category>Java8</category>
        <category>特性</category>
        <category>JDBC</category>
        <category>Mysql</category>
        <category>EasyExcel</category>
        <category>日志类库详解</category>
        <category>Script</category>
        <category>设计模式</category>
        <category>MyBatis</category>
        <category>Apache Common</category>
        <category>Google Guava</category>
        <item>
            <guid isPermalink="true">https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/IO&amp;NIO&amp;AIO/Java%20IO-%E5%88%9D%E8%AF%86IO/</guid>
            <title>Java IO-初识IO</title>
            <link>https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/IO&amp;NIO&amp;AIO/Java%20IO-%E5%88%9D%E8%AF%86IO/</link>
            <category>Java IO-初识IO</category>
            <pubDate>Wed, 03 Jan 2024 21:13:21 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;知识体系&#34;&gt;&lt;a href=&#34;#知识体系&#34; class=&#34;headerlink&#34; title=&#34;知识体系&#34;&gt;&lt;/a&gt;知识体系&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://s3.bmp.ovh/imgs/2023/06/23/f10285a1ab40fb85.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;IO理解分类-从传输方式上&#34;&gt;&lt;a href=&#34;#IO理解分类-从传输方式上&#34; class=&#34;headerlink&#34; title=&#34;IO理解分类 - 从传输方式上&#34;&gt;&lt;/a&gt;IO理解分类 - 从传输方式上&lt;/h1&gt;&lt;p&gt;从数据传输方式或者说是运输方式角度看，可以将 IO 类分为:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;字节流&lt;/li&gt;
&lt;li&gt;字符流&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;字节&lt;/code&gt;是个计算机看的，&lt;code&gt;字符&lt;/code&gt;才是给人看的&lt;/p&gt;
&lt;h1 id=&#34;字节流和字符流的区别&#34;&gt;&lt;a href=&#34;#字节流和字符流的区别&#34; class=&#34;headerlink&#34; title=&#34;字节流和字符流的区别&#34;&gt;&lt;/a&gt;字节流和字符流的区别&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;字节流读取单个字节，字符流读取单个字符(一个字符根据编码的不同，对应的字节也不同，如 UTF-8 编码中文汉字是 3 个字节，GBK编码中文汉字是 2 个字节。)&lt;/li&gt;
&lt;li&gt;字节流用来处理二进制文件(图片、MP3、视频文件)，字符流用来处理文本文件(可以看做是特殊的二进制文件，使用了某种编码，人可以阅读)。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;简而言之，字节是给计算机看的，字符才是给人看的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;字节转字符Input-x2F-OutputStreamReader-x2F-Writer&#34;&gt;&lt;a href=&#34;#字节转字符Input-x2F-OutputStreamReader-x2F-Writer&#34; class=&#34;headerlink&#34; title=&#34;字节转字符Input&amp;#x2F;OutputStreamReader&amp;#x2F;Writer&#34;&gt;&lt;/a&gt;字节转字符Input&amp;#x2F;OutputStreamReader&amp;#x2F;Writer&lt;/h3&gt;&lt;p&gt;编码就是把字符转换为字节，而解码是把字节重新组合成字符。&lt;/p&gt;
&lt;p&gt;如果编码和解码过程使用不同的编码方式那么就出现了乱码。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GBK 编码中，中文字符占 2 个字节，英文字符占 1 个字节；&lt;/li&gt;
&lt;li&gt;UTF-8 编码中，中文字符占 3 个字节，英文字符占 1 个字节；&lt;/li&gt;
&lt;li&gt;UTF-16be 编码中，中文字符和英文字符都占 2 个字节。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;UTF-16be 中的 be 指的是 Big Endian，也就是大端。相应地也有 UTF-16le，le 指的是 Little Endian，也就是小端。&lt;/p&gt;
&lt;p&gt;Java 使用双字节编码 UTF-16be，这不是指 Java 只支持这一种编码方式，而是说 char 这种类型使用 UTF-16be 进行编码。char 类型占 16 位，也就是两个字节，Java 使用这种双字节编码是为了让一个中文或者一个英文都能使用一个 char 来存储。&lt;/p&gt;
&lt;h1 id=&#34;设计模式-装饰器模式&#34;&gt;&lt;a href=&#34;#设计模式-装饰器模式&#34; class=&#34;headerlink&#34; title=&#34;设计模式-装饰器模式&#34;&gt;&lt;/a&gt;设计模式-装饰器模式&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;在原有Java的IO操作中使用了特别&lt;/p&gt;
&lt;/blockquote&gt;
 ]]></description>
        </item>
    </channel>
</rss>
