{
    "version": "https://jsonfeed.org/version/1",
    "title": "Will • All posts by \"lombok工具库详解\" tag",
    "description": "愿你一生努力，一生被爱",
    "home_page_url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io",
    "items": [
        {
            "id": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/%E5%B8%B8%E7%94%A8%E7%B1%BB%E5%BA%93%E8%AF%A6%E8%A7%A3/Lombok%E5%B7%A5%E5%85%B7%E5%BA%93%E8%AF%A6%E8%A7%A3/",
            "url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/%E5%B8%B8%E7%94%A8%E7%B1%BB%E5%BA%93%E8%AF%A6%E8%A7%A3/Lombok%E5%B7%A5%E5%85%B7%E5%BA%93%E8%AF%A6%E8%A7%A3/",
            "title": "Lombok工具库详解",
            "date_published": "2024-01-03T13:13:21.654Z",
            "content_html": "<blockquote>\n<p>Lombok是一款非常实用Java工具，可用来帮助开发人员消除Java的冗长代码，尤其是对于简单的Java对象（POJO）。</p>\n</blockquote>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>博猪日常最多的也就是CRUD,对于这个网上争议最多的插件来说，网上说的一些争议点没有遇到过，当然归根结底的原因基本上仅仅用到了getter&#x2F;setter方法，同时也让我的对象显得简洁而已，toString和equals没什么用到。<br>另外说一个很重要的原因就是，博猪感觉就是技术是时代的产物，既然存在，那必然也有它存在的道理。所以我并不认为网上说的都对，也不全错，做技术嘛，要有个辩论思维，不要人云亦云嘛。</p>\n<h1 id=\"工作原理\"><a href=\"#工作原理\" class=\"headerlink\" title=\"工作原理\"></a>工作原理</h1><p>Lombok 是一个开源的项目，它提供了一系列的代码生成工具，用于简化 Java 代码的开发。<br>Lombok 的工作原理是通过使用 Java 的反射机制，在编译时生成代码，从而实现自动生成 Setter 和 Getter 方法、toString、equals、hashCode 等方法。<br>具体来说，Lombok 使用了 Java 的注解来标识需要生成的代码，然后在编译时通过反射机制解析这些注解，生成相应的代码。<br>例如，使用 Lombok 的 @Getter 和 @Setter 注解可以生成 Setter 和 Getter 方法，使用 Lombok 的 @ToString 注解可以生成 toString 方法，使用 Lombok 的 @EqualsAndHashCode 注解可以生成 equals 和 hashCode 方法。<br>Lombok 还提供了一些其他的功能，例如生成构造函数、getters 和 setters 的组合、链式设置等。这些功能都可以通过使用 Lombok 的注解来实现。<br>Lombok 的工作原理是基于 Java 的反射机制，在编译时生成代码，从而简化 Java 代码的开发。</p>\n<h1 id=\"Lombok-安装\"><a href=\"#Lombok-安装\" class=\"headerlink\" title=\"Lombok 安装\"></a>Lombok 安装</h1><p>IDEA搜索Lombok插件</p>\n<p class=\"note note-info\">\n<span class=\"label label-primary\"><b>提示</b></span>\n另外需要注意的是，在使用lombok注解的时候记得要导入lombok.jar包到工程，如果使用的是Maven的工程项目的话，要在其pom.xml中添加依赖如下:\n</p>\n\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-comment\">&lt;!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.projectlombok<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>lombok<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.18.12<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">scope</span>&gt;</span>provided<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">scope</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"Lombok注解说明\"><a href=\"#Lombok注解说明\" class=\"headerlink\" title=\"Lombok注解说明\"></a>Lombok注解说明</h1><ul>\n<li><code>val</code>：用在局部变量前面，相当于将变量声明为final</li>\n<li><code>@NonNull</code>：给方法参数增加这个注解会自动在方法内对该参数进行是否为空的校验，如果为空，则抛出<code>NPE</code>（NullPointerException）</li>\n<li><code>@Cleanup</code>：自动管理资源，用在局部变量之前，在当前变量范围内即将执行完毕退出之前会自动清理资源，自动生成<code>try-finally</code>这样的代码来关闭流</li>\n<li><code>@Getter/@Setter</code>：用在属性上，再也不用自己手写<code>setter</code>和<code>getter</code>方法了，还可以指定访问范围</li>\n<li><code>@ToString</code>：用在类上，可以自动覆写<code>toString</code>方法，当然还可以加其他参数，例如<code>@ToString(exclude=”id”)</code>排除id属性，或者<code>@ToString(callSuper=true, includeFieldNames=true)</code>调用父类的<code>toString</code>方法，包含所有属性</li>\n<li><code>@EqualsAndHashCode</code>：用在类上，自动生成<code>equals</code>方法和<code>hashCode</code>方法</li>\n<li><code>@NoArgsConstructor</code>, <code>@RequiredArgsConstructor</code> and <code>@AllArgsConstructor</code>：用在类上，自动生成无参构造和使用所有参数的构造函数以及把所有+ <code>@NonNull属性作为参数的构造函数，如果指定</code>staticName &#x3D; “of”&#96;参数，同时还会生成一个返回类对象的静态工厂方法，比使用构造函数方便很多</li>\n<li><code>@Data</code>：注解在类上，相当于同时使用了<code>@ToString</code>、<code>@EqualsAndHashCode</code>、<code>@Getter</code>、<code>@Setter</code>和<code>@RequiredArgsConstrutor</code>这些注解，对于POJO类十分有用</li>\n<li><code>@Value</code>：用在类上，是<code>@Data</code>的不可变形式，相当于为属性添加final声明，只提供getter方法，而不提供setter方法</li>\n<li><code>@Builder</code>：用在类、构造器、方法上，为你提供复杂的builder APIs，让你可以像如下方式一样调用<code>Person.builder().name(&quot;Adam Savage&quot;).city(&quot;San Francisco&quot;).job(&quot;Mythbusters&quot;).job(&quot;Unchained Reaction&quot;).build()</code>;更多说明参考Builder</li>\n<li><code>@SneakyThrows</code>：自动抛受检异常，而无需显式在方法上使用throws语句</li>\n<li><code>@Synchronized</code>：用在方法上，将方法声明为同步的，并自动加锁，而锁对象是一个私有的属性<code>$lock</code>或<code>$LOCK</code>，而java中的synchronized关键字锁对象是this，锁在this或者自己的类对象上存在副作用，就是你不能阻止非受控代码去锁this或者类对象，这可能会导致竞争条件或者其它线程错误</li>\n<li><code>@Getter(lazy=true)</code>：可以替代经典的Double Check Lock样板代码</li>\n<li><code>@Log</code>：根据不同的注解生成不同类型的log对象，但是实例名称都是log，有六种可选实现类</li>\n<li><code>@CommonsLog</code> Creates log &#x3D; org.apache.commons.logging.LogFactory.getLog(LogExample.class);</li>\n<li><code>@Log</code> Creates log &#x3D; java.util.logging.Logger.getLogger(LogExample.class.getName());</li>\n<li><code>@Log4j</code> Creates log &#x3D; org.apache.log4j.Logger.getLogger(LogExample.class);</li>\n<li><code>@Log4j2</code> Creates log &#x3D; org.apache.logging.log4j.LogManager.getLogger(LogExample.class);</li>\n<li><code>@Slf4j</code> Creates log &#x3D; org.slf4j.LoggerFactory.getLogger(LogExample.class);</li>\n<li><code>@XSlf4j</code> Creates log &#x3D; org.slf4j.ext.XLoggerFactory.getXLogger(LogExample.class);</li>\n</ul>\n<h1 id=\"Lombok代码示例\"><a href=\"#Lombok代码示例\" class=\"headerlink\" title=\"Lombok代码示例\"></a>Lombok代码示例</h1><h2 id=\"val示例\"><a href=\"#val示例\" class=\"headerlink\" title=\"val示例\"></a>val示例</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> &#123;<br>    <span class=\"hljs-type\">val</span> <span class=\"hljs-variable\">sets</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">HashSet</span>&lt;String&gt;();<br>    <span class=\"hljs-type\">val</span> <span class=\"hljs-variable\">lists</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;String&gt;();<br>    <span class=\"hljs-type\">val</span> <span class=\"hljs-variable\">maps</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">HashMap</span>&lt;String, String&gt;();<br>    <span class=\"hljs-comment\">//=&gt;相当于如下</span><br>    <span class=\"hljs-keyword\">final</span> Set&lt;String&gt; sets2 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">HashSet</span>&lt;&gt;();<br>    <span class=\"hljs-keyword\">final</span> List&lt;String&gt; lists2 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;&gt;();<br>    <span class=\"hljs-keyword\">final</span> Map&lt;String, String&gt; maps2 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">HashMap</span>&lt;&gt;();<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"NonNull示例\"><a href=\"#NonNull示例\" class=\"headerlink\" title=\"@NonNull示例\"></a><code>@NonNull</code>示例</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">notNullExample</span><span class=\"hljs-params\">(<span class=\"hljs-meta\">@NonNull</span> String string)</span> &#123;<br>    string.length();<br>&#125;<br><span class=\"hljs-comment\">//=&gt;相当于</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">notNullExample</span><span class=\"hljs-params\">(String string)</span> &#123;<br>    <span class=\"hljs-keyword\">if</span> (string != <span class=\"hljs-literal\">null</span>) &#123;<br>        string.length();<br>    &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">NullPointerException</span>(<span class=\"hljs-string\">&quot;null&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Cleanup示例\"><a href=\"#Cleanup示例\" class=\"headerlink\" title=\"@Cleanup示例\"></a><code>@Cleanup</code>示例</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> &#123;<br>    <span class=\"hljs-keyword\">try</span> &#123;<br>        <span class=\"hljs-meta\">@Cleanup</span> <span class=\"hljs-type\">InputStream</span> <span class=\"hljs-variable\">inputStream</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FileInputStream</span>(args[<span class=\"hljs-number\">0</span>]);<br>    &#125; <span class=\"hljs-keyword\">catch</span> (FileNotFoundException e) &#123;<br>        e.printStackTrace();<br>    &#125;<br>    <span class=\"hljs-comment\">//=&gt;相当于</span><br>    <span class=\"hljs-type\">InputStream</span> <span class=\"hljs-variable\">inputStream</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-literal\">null</span>;<br>    <span class=\"hljs-keyword\">try</span> &#123;<br>        inputStream = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FileInputStream</span>(args[<span class=\"hljs-number\">0</span>]);<br>    &#125; <span class=\"hljs-keyword\">catch</span> (FileNotFoundException e) &#123;<br>        e.printStackTrace();<br>    &#125; <span class=\"hljs-keyword\">finally</span> &#123;<br>        <span class=\"hljs-keyword\">if</span> (inputStream != <span class=\"hljs-literal\">null</span>) &#123;<br>            <span class=\"hljs-keyword\">try</span> &#123;<br>                inputStream.close();<br>            &#125; <span class=\"hljs-keyword\">catch</span> (IOException e) &#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Getter-Setter示例\"><a href=\"#Getter-Setter示例\" class=\"headerlink\" title=\"@Getter/@Setter示例\"></a><code>@Getter/@Setter</code>示例</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Setter(AccessLevel.PUBLIC)</span><br><span class=\"hljs-meta\">@Getter(AccessLevel.PROTECTED)</span><br><span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">int</span> id;<br><span class=\"hljs-keyword\">private</span> String shape;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"ToString示例\"><a href=\"#ToString示例\" class=\"headerlink\" title=\"@ToString示例\"></a><code>@ToString</code>示例</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@ToString(exclude = &quot;id&quot;, callSuper = true, includeFieldNames = true)</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">LombokDemo</span> &#123;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">int</span> id;<br>    <span class=\"hljs-keyword\">private</span> String name;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">int</span> age;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> &#123;<br>        <span class=\"hljs-comment\">//输出LombokDemo(super=LombokDemo@48524010, name=null, age=0)</span><br>        System.out.println(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">LombokDemo</span>());<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"EqualsAndHashCode示例\"><a href=\"#EqualsAndHashCode示例\" class=\"headerlink\" title=\"@EqualsAndHashCode示例\"></a><code>@EqualsAndHashCode</code>示例</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@EqualsAndHashCode(exclude = &#123;&quot;id&quot;, &quot;shape&quot;&#125;, callSuper = false)</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">LombokDemo</span> &#123;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">int</span> id;<br>    <span class=\"hljs-keyword\">private</span> String shape;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"NoArgsConstructor-RequiredArgsConstructor-and-AllArgsConstructor示例\"><a href=\"#NoArgsConstructor-RequiredArgsConstructor-and-AllArgsConstructor示例\" class=\"headerlink\" title=\"@NoArgsConstructor, @RequiredArgsConstructor and @AllArgsConstructor示例\"></a><code>@NoArgsConstructor</code>, <code>@RequiredArgsConstructor</code> and <code>@AllArgsConstructor</code>示例</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@NoArgsConstructor</span><br><span class=\"hljs-meta\">@RequiredArgsConstructor(staticName = &quot;of&quot;)</span><br><span class=\"hljs-meta\">@AllArgsConstructor</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">LombokDemo</span> &#123;<br>    <span class=\"hljs-meta\">@NonNull</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">int</span> id;<br>    <span class=\"hljs-meta\">@NonNull</span><br>    <span class=\"hljs-keyword\">private</span> String shape;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">int</span> age;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> &#123;<br>        <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">LombokDemo</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">&quot;circle&quot;</span>);<br>        <span class=\"hljs-comment\">//使用静态工厂方法</span><br>        LombokDemo.of(<span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">&quot;circle&quot;</span>);<br>        <span class=\"hljs-comment\">//无参构造</span><br>        <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">LombokDemo</span>();<br>        <span class=\"hljs-comment\">//包含所有参数</span><br>        <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">LombokDemo</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">&quot;circle&quot;</span>, <span class=\"hljs-number\">2</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Data示例\"><a href=\"#Data示例\" class=\"headerlink\" title=\"@Data示例\"></a><code>@Data</code>示例</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> lombok.Data;<br><span class=\"hljs-meta\">@Data</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Menu</span> &#123;<br>    <span class=\"hljs-keyword\">private</span> String shopId;<br>    <span class=\"hljs-keyword\">private</span> String skuMenuId;<br>    <span class=\"hljs-keyword\">private</span> String skuName;<br>    <span class=\"hljs-keyword\">private</span> String normalizeSkuName;<br>    <span class=\"hljs-keyword\">private</span> String dishMenuId;<br>    <span class=\"hljs-keyword\">private</span> String dishName;<br>    <span class=\"hljs-keyword\">private</span> String dishNum;<br>    <span class=\"hljs-comment\">//默认阈值</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">float</span> <span class=\"hljs-variable\">thresHold</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-comment\">//新阈值</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">float</span> <span class=\"hljs-variable\">newThresHold</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-comment\">//总得分</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">float</span> <span class=\"hljs-variable\">totalScore</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Value示例\"><a href=\"#Value示例\" class=\"headerlink\" title=\"@Value示例\"></a><code>@Value</code>示例</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Value</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">LombokDemo</span> &#123;<br>    <span class=\"hljs-meta\">@NonNull</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">int</span> id;<br>    <span class=\"hljs-meta\">@NonNull</span><br>    <span class=\"hljs-keyword\">private</span> String shap;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">int</span> age;<br>    <span class=\"hljs-comment\">//相当于</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">int</span> id;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">getId</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">this</span>.id;<br>    &#125;<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Builder示例\"><a href=\"#Builder示例\" class=\"headerlink\" title=\"@Builder示例\"></a><code>@Builder</code>示例</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Builder</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">BuilderExample</span> &#123;<br>    <span class=\"hljs-keyword\">private</span> String name;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">int</span> age;<br>    <span class=\"hljs-meta\">@Singular</span><br>    <span class=\"hljs-keyword\">private</span> Set&lt;String&gt; occupations;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> &#123;<br>        <span class=\"hljs-type\">LombokDemo3</span> <span class=\"hljs-variable\">test</span> <span class=\"hljs-operator\">=</span> LombokDemo3.builder().age(<span class=\"hljs-number\">11</span>).name(<span class=\"hljs-string\">&quot;test&quot;</span>)<br>                .occupation(<span class=\"hljs-string\">&quot;1&quot;</span>)<br>                .occupation(<span class=\"hljs-string\">&quot;2&quot;</span>)<br>                .build();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>@Singular可以为集合类型的参数或字段生成一种特殊的方法, 它采用修改列表中一个元素而不是整个列表的方式，可以是增加一个元素，也可以是删除一个元素。</p>\n<p>在使用@Singular注释注释一个集合字段（使用@Builder注释类），lombok会将该构建器节点视为一个集合，并生成两个adder方法而不是setter方法。</p>\n<p>生成代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> LombokDemo3.LombokDemo3Builder <span class=\"hljs-title function_\">occupation</span><span class=\"hljs-params\">(String occupation)</span> &#123;<br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">this</span>.occupations == <span class=\"hljs-literal\">null</span>) &#123;<br>        <span class=\"hljs-built_in\">this</span>.occupations = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>();<br>    &#125;<br><br>    <span class=\"hljs-built_in\">this</span>.occupations.add(occupation);<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">this</span>;<br>&#125;<br><br><span class=\"hljs-keyword\">public</span> LombokDemo3.LombokDemo3Builder <span class=\"hljs-title function_\">occupations</span><span class=\"hljs-params\">(Collection&lt;? extends String&gt; occupations)</span> &#123;<br>    <span class=\"hljs-keyword\">if</span> (occupations == <span class=\"hljs-literal\">null</span>) &#123;<br>        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">NullPointerException</span>(<span class=\"hljs-string\">&quot;occupations cannot be null&quot;</span>);<br>    &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">this</span>.occupations == <span class=\"hljs-literal\">null</span>) &#123;<br>            <span class=\"hljs-built_in\">this</span>.occupations = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>();<br>        &#125;<br><br>        <span class=\"hljs-built_in\">this</span>.occupations.addAll(occupations);<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">this</span>;<br>    &#125;<br>&#125;<br><br><span class=\"hljs-keyword\">public</span> LombokDemo3.LombokDemo3Builder <span class=\"hljs-title function_\">clearOccupations</span><span class=\"hljs-params\">()</span> &#123;<br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">this</span>.occupations != <span class=\"hljs-literal\">null</span>) &#123;<br>        <span class=\"hljs-built_in\">this</span>.occupations.clear();<br>    &#125;<br><br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">this</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Builder-Default\"><a href=\"#Builder-Default\" class=\"headerlink\" title=\"Builder.Default\"></a>Builder.Default</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Builder</span><br><span class=\"hljs-meta\">@ToString</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">BuilderDefaultExample</span> &#123;<br><br>    <span class=\"hljs-meta\">@Builder</span>.Default<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">id</span> <span class=\"hljs-operator\">=</span> UUID.randomUUID().toString();<br>    <br>    <span class=\"hljs-keyword\">private</span> String username;<br><br>    <span class=\"hljs-meta\">@Builder</span>.Default<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">long</span> <span class=\"hljs-variable\">insertTime</span> <span class=\"hljs-operator\">=</span> System.currentTimeMillis();<br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"SneakyThrows示例\"><a href=\"#SneakyThrows示例\" class=\"headerlink\" title=\"@SneakyThrows示例\"></a><code>@SneakyThrows</code>示例</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> lombok.SneakyThrows;<br><span class=\"hljs-keyword\">import</span> java.io.FileInputStream;<br><span class=\"hljs-keyword\">import</span> java.io.FileNotFoundException;<br><span class=\"hljs-keyword\">import</span> java.io.InputStream;<br><span class=\"hljs-keyword\">import</span> java.io.UnsupportedEncodingException;<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Test</span> &#123;<br>    <span class=\"hljs-meta\">@SneakyThrows()</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">read</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-type\">InputStream</span> <span class=\"hljs-variable\">inputStream</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FileInputStream</span>(<span class=\"hljs-string\">&quot;&quot;</span>);<br>    &#125;<br>    <span class=\"hljs-meta\">@SneakyThrows</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">write</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">UnsupportedEncodingException</span>();<br>    &#125;<br>    <span class=\"hljs-comment\">//相当于</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">read</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\">throws</span> FileNotFoundException &#123;<br>        <span class=\"hljs-type\">InputStream</span> <span class=\"hljs-variable\">inputStream</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FileInputStream</span>(<span class=\"hljs-string\">&quot;&quot;</span>);<br>    &#125;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">write</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\">throws</span> UnsupportedEncodingException &#123;<br>        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">UnsupportedEncodingException</span>();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Synchronized示例\"><a href=\"#Synchronized示例\" class=\"headerlink\" title=\"@Synchronized示例\"></a><code>@Synchronized</code>示例</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">SynchronizedDemo</span> &#123;<br>    <span class=\"hljs-meta\">@Synchronized</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">hello</span><span class=\"hljs-params\">()</span> &#123;<br>        System.out.println(<span class=\"hljs-string\">&quot;world&quot;</span>);<br>    &#125;<br>    <span class=\"hljs-comment\">//相当于</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">Object</span> <span class=\"hljs-variable\">$LOCK</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Object</span>[<span class=\"hljs-number\">0</span>];<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">hello</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-keyword\">synchronized</span> ($LOCK) &#123;<br>            System.out.println(<span class=\"hljs-string\">&quot;world&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Getter-lazy-true-示例\"><a href=\"#Getter-lazy-true-示例\" class=\"headerlink\" title=\"@Getter(lazy = true)示例\"></a><code>@Getter(lazy = true)</code>示例</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">GetterLazyExample</span> &#123;<br>    <span class=\"hljs-meta\">@Getter(lazy = true)</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">double</span>[] cached = expensive();<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">double</span>[] expensive() &#123;<br>        <span class=\"hljs-type\">double</span>[] result = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">double</span>[<span class=\"hljs-number\">1000000</span>];<br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; result.length; i++) &#123;<br>            result[i] = Math.asin(i);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> result;<br>    &#125;<br>&#125;<br><br><span class=\"hljs-comment\">// 相当于如下所示: </span><br><br><span class=\"hljs-keyword\">import</span> java.util.concurrent.atomic.AtomicReference;<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">GetterLazyExample</span> &#123;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">final</span> AtomicReference&lt;java.lang.Object&gt; cached = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">AtomicReference</span>&lt;&gt;();<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">double</span>[] getCached() &#123;<br>        java.lang.<span class=\"hljs-type\">Object</span> <span class=\"hljs-variable\">value</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-built_in\">this</span>.cached.get();<br>        <span class=\"hljs-keyword\">if</span> (value == <span class=\"hljs-literal\">null</span>) &#123;<br>            <span class=\"hljs-keyword\">synchronized</span> (<span class=\"hljs-built_in\">this</span>.cached) &#123;<br>                value = <span class=\"hljs-built_in\">this</span>.cached.get();<br>                <span class=\"hljs-keyword\">if</span> (value == <span class=\"hljs-literal\">null</span>) &#123;<br>                    <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">double</span>[] actualValue = expensive();<br>                    value = actualValue == <span class=\"hljs-literal\">null</span> ? <span class=\"hljs-built_in\">this</span>.cached : actualValue;<br>                    <span class=\"hljs-built_in\">this</span>.cached.set(value);<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> (<span class=\"hljs-type\">double</span>[]) (value == <span class=\"hljs-built_in\">this</span>.cached ? <span class=\"hljs-literal\">null</span> : value);<br>    &#125;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">double</span>[] expensive() &#123;<br>        <span class=\"hljs-type\">double</span>[] result = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">double</span>[<span class=\"hljs-number\">1000000</span>];<br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; result.length; i++) &#123;<br>            result[i] = Math.asin(i);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> result;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n\n",
            "tags": [
                "Lombok工具库详解",
                "常用开发库"
            ]
        }
    ]
}