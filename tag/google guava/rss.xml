<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Will • Posts by &#34;google guava&#34; tag</title>
        <link>https://github.com/yangxiangnanwill/yangxiangnanwill.github.io</link>
        <description>愿你一生努力，一生被爱</description>
        <language>zh-CN</language>
        <pubDate>Wed, 03 Jan 2024 21:13:21 +0800</pubDate>
        <lastBuildDate>Wed, 03 Jan 2024 21:13:21 +0800</lastBuildDate>
        <category>开发习惯</category>
        <category>思考</category>
        <category>思维习惯</category>
        <category>感言</category>
        <category>Docker</category>
        <category>LINUX</category>
        <category>Node</category>
        <category>前端</category>
        <category>Nvm</category>
        <category>CentOS</category>
        <category>Linux</category>
        <category>Crontab</category>
        <category>Jenkins</category>
        <category>IDEA</category>
        <category>Alibaba Cloud Toolkit</category>
        <category>Archery</category>
        <category>MySql</category>
        <category>工具</category>
        <category>Maven</category>
        <category>Git</category>
        <category>JAVA</category>
        <category>shell</category>
        <category>信息安全等级保护认证</category>
        <category>系统认证</category>
        <category>读书笔记</category>
        <category>BeetlSql</category>
        <category>Beetl</category>
        <category>异常</category>
        <category>Java IO-初识IO</category>
        <category>Spring</category>
        <category>SpringCloud</category>
        <category>SpringCloud Alibaba</category>
        <category>枚举</category>
        <category>POI</category>
        <category>Spring Boot</category>
        <category>VinUtil</category>
        <category>VerificationCode</category>
        <category>SOAR</category>
        <category>其他</category>
        <category>ProtoBuffer</category>
        <category>博客园</category>
        <category>博客</category>
        <category>MongoDb</category>
        <category>Lombok工具库详解</category>
        <category>常用开发库</category>
        <category>JSON类库详解</category>
        <category>Hutool</category>
        <category>工具类</category>
        <category>Spring常用工具类</category>
        <category>异步编程</category>
        <category>线程</category>
        <category>方法论</category>
        <category>开源协议</category>
        <category>CentOS7</category>
        <category>MongoDB</category>
        <category>Redis</category>
        <category>VMware</category>
        <category>Typora</category>
        <category>PostMan</category>
        <category>Java8</category>
        <category>特性</category>
        <category>JDBC</category>
        <category>Mysql</category>
        <category>EasyExcel</category>
        <category>日志类库详解</category>
        <category>Script</category>
        <category>设计模式</category>
        <category>MyBatis</category>
        <category>Apache Common</category>
        <category>Google Guava</category>
        <item>
            <guid isPermalink="true">https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/%E5%B8%B8%E7%94%A8%E7%B1%BB%E5%BA%93%E8%AF%A6%E8%A7%A3/Google%20Guava/</guid>
            <title>Google Guava</title>
            <link>https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/%E5%B8%B8%E7%94%A8%E7%B1%BB%E5%BA%93%E8%AF%A6%E8%A7%A3/Google%20Guava/</link>
            <category>常用开发库</category>
            <category>工具类</category>
            <category>Google Guava</category>
            <pubDate>Wed, 03 Jan 2024 21:13:21 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;简介&#34;&gt;&lt;a href=&#34;#简介&#34; class=&#34;headerlink&#34; title=&#34;简介&#34;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;Guava工程包含了若干被Google的 Java项目广泛依赖 的核心库，例如：集合 &lt;code&gt;[collections]&lt;/code&gt; 、缓存&lt;code&gt; [caching]&lt;/code&gt; 、原生类型支持 &lt;code&gt;[primitives support]&lt;/code&gt; 、并发库&lt;code&gt; [concurrency libraries]&lt;/code&gt; 、通用注解&lt;code&gt; [common annotations]&lt;/code&gt; 、字符串处理&lt;code&gt; [string processing]&lt;/code&gt; 、&lt;code&gt;I/O&lt;/code&gt; 等等。 所有这些工具每天都在被Google的工程师应用在产品服务中。&lt;/p&gt;
&lt;p&gt;guava的优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;高效设计良好的API，被Google的开发者设计，实现和使用&lt;/li&gt;
&lt;li&gt;遵循高效的java语法实践&lt;/li&gt;
&lt;li&gt;使代码更刻度，简洁，简单&lt;/li&gt;
&lt;li&gt;节约时间，资源，提高生产力&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;推荐网址&#34;&gt;&lt;a href=&#34;#推荐网址&#34; class=&#34;headerlink&#34; title=&#34;推荐网址&#34;&gt;&lt;/a&gt;推荐网址&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/google/guava/wiki/Home&#34;&gt;Guava Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://guava.dev/releases/snapshot-jre/api/docs/&#34;&gt;Guava API Doc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/google/guava&#34;&gt;Guava Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ifeve.com/google-guava/&#34;&gt;Guava 中文教程 - ifeve.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;使用Guava&#34;&gt;&lt;a href=&#34;#使用Guava&#34; class=&#34;headerlink&#34; title=&#34;使用Guava&#34;&gt;&lt;/a&gt;使用Guava&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;注意：JDK 1.8 or higher.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs xml&#34;&gt;&lt;span class=&#34;hljs-tag&#34;&gt;&amp;lt;&lt;span class=&#34;hljs-name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-tag&#34;&gt;&amp;lt;&lt;span class=&#34;hljs-name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.google.guava&lt;span class=&#34;hljs-tag&#34;&gt;&amp;lt;/&lt;span class=&#34;hljs-name&#34;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-tag&#34;&gt;&amp;lt;&lt;span class=&#34;hljs-name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;guava&lt;span class=&#34;hljs-tag&#34;&gt;&amp;lt;/&lt;span class=&#34;hljs-name&#34;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-tag&#34;&gt;&amp;lt;&lt;span class=&#34;hljs-name&#34;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;28.2-jre&lt;span class=&#34;hljs-tag&#34;&gt;&amp;lt;/&lt;span class=&#34;hljs-name&#34;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;&amp;lt;!-- or, for Android: --&amp;gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-tag&#34;&gt;&amp;lt;&lt;span class=&#34;hljs-name&#34;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;28.2-android&lt;span class=&#34;hljs-tag&#34;&gt;&amp;lt;/&lt;span class=&#34;hljs-name&#34;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-tag&#34;&gt;&amp;lt;/&lt;span class=&#34;hljs-name&#34;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&#34;内容简介&#34;&gt;&lt;a href=&#34;#内容简介&#34; class=&#34;headerlink&#34; title=&#34;内容简介&#34;&gt;&lt;/a&gt;内容简介&lt;/h1&gt;&lt;h2 id=&#34;基本工具-Basic-utilities&#34;&gt;&lt;a href=&#34;#基本工具-Basic-utilities&#34; class=&#34;headerlink&#34; title=&#34;基本工具 [Basic utilities]&#34;&gt;&lt;/a&gt;基本工具 &lt;code&gt;[Basic utilities]&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;让使用Java语言变得更舒适&lt;/p&gt;
&lt;h3 id=&#34;Optional&#34;&gt;&lt;a href=&#34;#Optional&#34; class=&#34;headerlink&#34; title=&#34;Optional&#34;&gt;&lt;/a&gt;Optional&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt; 使用和避免null：null是模棱两可的，会引起令人困惑的错误，有些时候它让人很不舒服。很多Guava工具类用快速失败拒绝null值，而不是盲目地接受&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Optional类是Java8为了解决null值判断问题，借鉴google guava类库的Optional类而引入的一个同名Optional类，使用Optional类可以避免显式的null值判断（null的防御性检查），避免null导致的NPE（NullPointerException）。&lt;/p&gt;
&lt;p&gt;这里讲的optional 也是指jdk中的optional，其实二者类似，但是编码使用gauva的optional，阿里巴巴编程规范会提醒换成jdk自带的optional。&lt;/p&gt;
&lt;p&gt;这里强调一下Optional的用法。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;不要用isPressent判断一个对象是否为空&lt;/strong&gt;&lt;br&gt;这种用法不但没有减少null的防御性检查，而且增加了Optional包装的过程，违背了Optional设计的初衷，因此开发中要避免这种糟糕的使用&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;enum&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;TestEnum&lt;/span&gt; &amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/***&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 编号和对应的名称&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     */&lt;/span&gt;&lt;br&gt;    a(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;aaa&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;aname&amp;quot;&lt;/span&gt;),&lt;br&gt;    b(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;bbbb&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;bname&amp;quot;&lt;/span&gt;),&lt;br&gt;    c(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;cccc&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;cname&amp;quot;&lt;/span&gt;),&lt;br&gt;    ;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Getter&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;private&lt;/span&gt; String code;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Getter&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;private&lt;/span&gt; String name;&lt;br&gt;&lt;br&gt;    TestEnum(String code, String name) &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-built_in&#34;&gt;this&lt;/span&gt;.code = code;&lt;br&gt;        &lt;span class=&#34;hljs-built_in&#34;&gt;this&lt;/span&gt;.name = name;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; String &lt;span class=&#34;hljs-title function_&#34;&gt;getNameByCod&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String code)&lt;/span&gt; &amp;#123;&lt;br&gt;        Optional&amp;lt;String&amp;gt; nameOfCode = Arrays.stream(TestEnum.values())&lt;br&gt;                .filter(item -&amp;gt; StringUtils.equals(item.code, code))&lt;br&gt;                .map(TestEnum::getName)&lt;br&gt;                .findFirst();&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//不要这样使用optional 这样optional的意义：优雅的处理空指针 就不存在了&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (nameOfCode.isPresent()) &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;RuntimeException&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;不存在&amp;quot;&lt;/span&gt;);&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;// 请使用orElseThrow 和orElse&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; nameOfCode.orElseThrow(() -&amp;gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;RuntimeException&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;不存在&amp;quot;&lt;/span&gt;));&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;考虑让方法返回optional&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;《Effective Java》中对方法返回Optional的一些观点:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;容器（包括，集合，映射，数组，stream，optional）都不应该包装在Optional进行返回，返回空的容器能让客户端免于处理一个Optional&lt;/li&gt;
&lt;li&gt;如果无法返回结果，且没有返回结果客户端必须进行特殊的处理，那么就应该声明返回optional&lt;/li&gt;
&lt;li&gt;返回optional并不是一个不需要成本的操作，无论返回空，还是非空，使用optional作为返回值的方法都是需要初始化的，所以optional在看重性能的情况下使用不当是一种性能的浪费&lt;/li&gt;
&lt;li&gt;永远不要返回基本类型对于包装类型的Optional，这需要进行基本类型-&amp;gt;包装类型-&amp;gt;optional的三层包装，可以使用OptionalInt，optionallong等。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;PreConditions前置条件检查&#34;&gt;&lt;a href=&#34;#PreConditions前置条件检查&#34; class=&#34;headerlink&#34; title=&#34;PreConditions前置条件检查&#34;&gt;&lt;/a&gt;PreConditions前置条件检查&lt;/h3&gt;&lt;p&gt;前置条件: 让方法中的条件检查更简单&lt;/p&gt;
&lt;p&gt;根据参数分为三种：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;没有额外参数&lt;/td&gt;
&lt;td&gt;抛出的异常中没有错误消息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;有一个Object对象作为额外参数&lt;/td&gt;
&lt;td&gt;抛出的异常使用Object.toString() 作为错误消息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;有一个String对象作为额外参数，并且有一组任意数量的附加Object对象&lt;/td&gt;
&lt;td&gt;这个变种处理异常消息的方式有点类似printf，但考虑GWT的兼容性和效率，只支持%s指示符。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; String &lt;span class=&#34;hljs-title function_&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(Integer index, List&amp;lt;String&amp;gt;list)&lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (Objects.isNull(index))&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;RuntimeException&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;index不可以为空&amp;quot;&lt;/span&gt;);&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (CollectionUtils.isEmpty(list))&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;RuntimeException&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;list不可以为空&amp;quot;&lt;/span&gt;);&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (index&amp;lt;&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;||index&amp;gt;=list.size())&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;RuntimeException&lt;/span&gt;(String.format(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;越界无法获取，下标%S&amp;quot;&lt;/span&gt;,index));&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; list.get(index);&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; String &lt;span class=&#34;hljs-title function_&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(Integer index, List&amp;lt;String&amp;gt;list)&lt;/span&gt;&amp;#123;&lt;br&gt;    Preconditions.checkNotNull(index,&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;index不可以为空&amp;quot;&lt;/span&gt;);&lt;br&gt;    Preconditions.checkNotNull(list,&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;list不可以为空&amp;quot;&lt;/span&gt;);&lt;br&gt;    Preconditions.checkElementIndex(index,list.size(),String.format(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;越界无法获取，下标%S&amp;quot;&lt;/span&gt;,index));&lt;br&gt;    Preconditions.checkArgument(index &amp;gt;= &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;&amp;amp;&amp;amp;index&amp;lt;list.size(),&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;越界无法获取，下标%S&amp;quot;&lt;/span&gt;,index);&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; list.get(index);&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;test1 缺点：if看起来臃肿，优点：可用抛出我们系统的自定义异常便于前端反馈&lt;br&gt;test2 优点：简单直接，缺点：抛出的都是jdk中的异常，通一异常处理可能无法返回正确提示的通一结果集给前端&lt;br&gt;我们可用写一个带异常Class的工具类或者直接代理guava中的Predition 加一层try catch 使我其抛出我们系统的自定义异常。&lt;/p&gt;
&lt;h3 id=&#34;ComparisonChain和Ordering&#34;&gt;&lt;a href=&#34;#ComparisonChain和Ordering&#34; class=&#34;headerlink&#34; title=&#34;ComparisonChain和Ordering&#34;&gt;&lt;/a&gt;ComparisonChain和Ordering&lt;/h3&gt;&lt;p&gt;想象一个场景，人先根据age排序后根据height排序&lt;/p&gt;
&lt;h4 id=&#34;实现comparable&#34;&gt;&lt;a href=&#34;#实现comparable&#34; class=&#34;headerlink&#34; title=&#34;实现comparable&#34;&gt;&lt;/a&gt;实现comparable&lt;/h4&gt;&lt;p&gt;这是常规写法。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;@Data&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;@Builder&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;@NoArgsConstructor&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;@AllArgsConstructor&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;People&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;Comparable&lt;/span&gt;&amp;lt;People&amp;gt; &amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;private&lt;/span&gt; Integer age;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;private&lt;/span&gt; Integer height;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;compareTo&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(People o)&lt;/span&gt; &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (!Objects.equals(&lt;span class=&#34;hljs-built_in&#34;&gt;this&lt;/span&gt;.age, o.age)) &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;this&lt;/span&gt;.age - o.age;&lt;br&gt;        &amp;#125;&lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;this&lt;/span&gt;.height - o.height;&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String[] args)&lt;/span&gt; &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-type&#34;&gt;People&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;p1&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; People.builder().build();&lt;br&gt;        &lt;span class=&#34;hljs-type&#34;&gt;People&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;p2&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; People.builder().build();&lt;br&gt;        List&amp;lt;People&amp;gt; list = Arrays.asList(p1, p2);&lt;br&gt;        Collections.sort(list);&lt;br&gt;        System.out.println(list);&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//你或许会写得更高级一点 如下&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;compareTo&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(People o)&lt;/span&gt; &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;ageCompare&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; Ints.compare(&lt;span class=&#34;hljs-built_in&#34;&gt;this&lt;/span&gt;.age, o.age);&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (ageCompare==&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;)&amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; Ints.compare(&lt;span class=&#34;hljs-built_in&#34;&gt;this&lt;/span&gt;.height, o.height);&lt;br&gt;        &amp;#125;&lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; ageCompare;&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上述代码缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;写法繁琐  &lt;/li&gt;
&lt;li&gt;忽略了空指针， return this.age - o.age; 这一句存在空指针的情况，对null进行拆箱直接NPE（NullPoint Exception，及空指针异常）  &lt;/li&gt;
&lt;li&gt;维护复杂，再加一个存款，加逻辑复杂。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;JAVA8使用Stream进行操作&#34;&gt;&lt;a href=&#34;#JAVA8使用Stream进行操作&#34; class=&#34;headerlink&#34; title=&#34;JAVA8使用Stream进行操作&#34;&gt;&lt;/a&gt;JAVA8使用Stream进行操作&lt;/h4&gt;&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;compareTo&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(People o)&lt;/span&gt; &amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;thisAge&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; Optional.ofNullable(&lt;span class=&#34;hljs-built_in&#34;&gt;this&lt;/span&gt;.age).orElse(Integer.MAX_VALUE);&lt;br&gt;    &lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;thisHeight&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; Optional.ofNullable(&lt;span class=&#34;hljs-built_in&#34;&gt;this&lt;/span&gt;.height).orElse(Integer.MAX_VALUE);&lt;br&gt;    &lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;oAge&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; Optional.ofNullable(o.age).orElse(Integer.MAX_VALUE);&lt;br&gt;    &lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;oHeight&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; Optional.ofNullable(o.height).orElse(Integer.MAX_VALUE);&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (thisAge!=oAge)&amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; thisAge-oAge;&lt;br&gt;    &amp;#125;&lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; thisHeight - oHeight;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上述代码，规避了NPE,但是缺点依旧存在：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Stream复杂的写法，导致语法不明显，逻辑不通俗易懂。&lt;/li&gt;
&lt;li&gt;维护复杂，如果增加条件则需要变更方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;ComparisonChain&#34;&gt;&lt;a href=&#34;#ComparisonChain&#34; class=&#34;headerlink&#34; title=&#34;ComparisonChain&#34;&gt;&lt;/a&gt;ComparisonChain&lt;/h4&gt;&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;  &lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;compareTo&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(People o)&lt;/span&gt; &amp;#123;  &lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; ComparisonChain.start()  &lt;br&gt;            .compare(&lt;span class=&#34;hljs-built_in&#34;&gt;this&lt;/span&gt;.getAge(), o.getAge(), Ordering.natural().nullsFirst())  &lt;br&gt;            .compare(&lt;span class=&#34;hljs-built_in&#34;&gt;this&lt;/span&gt;.getHeight(), o.getHeight(), Ordering.natural().nullsFirst())  &lt;br&gt;            .result();  &lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优雅的处理空指针，传入比较器 Ordering.natural().nullsFirst() 让null在最前面&lt;/li&gt;
&lt;li&gt;语义化明显：先比较age 后比较 height，null在最前面&lt;/li&gt;
&lt;li&gt;更易于维护，只需要加一行&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;Ordering&#34;&gt;&lt;a href=&#34;#Ordering&#34; class=&#34;headerlink&#34; title=&#34;Ordering&#34;&gt;&lt;/a&gt;Ordering&lt;/h4&gt;&lt;p&gt;Ordering是Guava流畅风格比较器Comparator的实现，它可以用来构建复杂的比较器，以完成排序的功能。&lt;/p&gt;
&lt;p&gt;从实现上说Ordering实例就是一个特殊的Comparator实例。Ordering把很多基于Comparator的静态方法比如&lt;/p&gt;
&lt;p&gt;Collections.max包装成自己的实例方法(非静态方法)，并且提供了链式调用方法，来定制和增强现有的比较器。&lt;/p&gt;
&lt;h5 id=&#34;创建排序器&#34;&gt;&lt;a href=&#34;#创建排序器&#34; class=&#34;headerlink&#34; title=&#34;创建排序器&#34;&gt;&lt;/a&gt;创建排序器&lt;/h5&gt;&lt;p&gt;常见的排序器可以由下面的静态方法创建&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;natural()&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对可排序类型做自然排序，如数字按照大小，日期按照先后顺序&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;List&amp;lt;Integer&amp;gt; list = Lists.newArrayList(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;6&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;7&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;8&lt;/span&gt;);&lt;br&gt;    list.sort(Ordering.natural());&lt;br&gt;    System.out.println(list.toString());&lt;span class=&#34;hljs-comment&#34;&gt;//[1, 3, 5, 6, 7, 8, 9]&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;usingToString()&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;按对象的字符串形式做字典排序，即使用toString()返回的字符串按字典顺序进行排序。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;List&amp;lt;String&amp;gt; stringList = Lists.newArrayList(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;zhangsan&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;lisi&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;wangwu&amp;quot;&lt;/span&gt;);&lt;br&gt;        Collections.sort(stringList,Ordering.usingToString());&lt;br&gt;        System.out.println(stringList.toString());&lt;span class=&#34;hljs-comment&#34;&gt;//[lisi, wangwu, zhangsan]&lt;/span&gt;&lt;br&gt;        list.sort(Ordering.usingToString());&lt;br&gt;        System.out.println(list.toString());&lt;span class=&#34;hljs-comment&#34;&gt;//[1, 3, 5, 6, 7, 8, 9]&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;from()&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-type&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;zhangsan&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;User&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;张三&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;,&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;Company&lt;/span&gt;());&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;lisi&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;User&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;李四&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;30&lt;/span&gt;,&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;Company&lt;/span&gt;());&lt;br&gt;List&amp;lt;User&amp;gt; users =  Lists.newArrayList(zhangsan,lisi);&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//按照age字段进行排序&lt;/span&gt;&lt;br&gt;Ordering&amp;lt;User&amp;gt; ordering1 = Ordering.from(Comparator.comparingInt(u -&amp;gt; u.getAge()));&lt;br&gt;users.sort(ordering1);&lt;br&gt;System.out.println(users.toString());&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;链式调用方法&#34;&gt;&lt;a href=&#34;#链式调用方法&#34; class=&#34;headerlink&#34; title=&#34;链式调用方法&#34;&gt;&lt;/a&gt;链式调用方法&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;reverse()&lt;br&gt;获取语义相反的排序器&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;List&amp;lt;Integer&amp;gt; list = Lists.newArrayList(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;6&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;7&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;8&lt;/span&gt;);&lt;br&gt;list.sort(Ordering.natural().reverse());&lt;br&gt;System.out.println(list.toString());&lt;span class=&#34;hljs-comment&#34;&gt;//[9, 8, 7, 6, 5, 3, 1]&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;nullsFirst()&lt;br&gt;使用当前排序器，但额外把null值排到最前面&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;List&amp;lt;Integer&amp;gt; list1 = Arrays.asList(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;8&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;);&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//Collections.sort(list1); // 出现异常...&lt;/span&gt;&lt;br&gt;Collections.sort(list1, Ordering.natural().nullsFirst());&lt;br&gt;System.out.println(list1);&lt;span class=&#34;hljs-comment&#34;&gt;//[null, 1, 2, 3, 5, 8]&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;nullsLast()&lt;br&gt;使用当前排序器，但额外把null值排到最后面&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;List&amp;lt;Integer&amp;gt; list2 = Arrays.asList(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;8&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;);&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//Collections.sort(list1); // 出现异常...&lt;/span&gt;&lt;br&gt;Collections.sort(list1, Ordering.natural().nullsLast());&lt;br&gt;System.out.println(list1);&lt;span class=&#34;hljs-comment&#34;&gt;//[1, 2, 3, 5, 8, null]&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;compound(Comparator)&lt;br&gt;成另一个比较器，以处理当前排序器中的相等情况&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;首先按照年龄进行排序，如果年龄相同则按照薪水排序&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;Comparator&amp;lt;UserPojo&amp;gt; objectComparator = Comparator.comparingInt(u -&amp;gt; u.getAge());&lt;br&gt;        Comparator&amp;lt;UserPojo&amp;gt; objectComparator2 = Comparator.comparing(u -&amp;gt; u.getSalary());&lt;br&gt;        Ordering&amp;lt;UserPojo&amp;gt; ordering1 = Ordering.from(objectComparator).compound(objectComparator2);&lt;br&gt;        &lt;span class=&#34;hljs-type&#34;&gt;UserPojo&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;zhangsan&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;UserPojo&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;张三&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;,&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;Company&lt;/span&gt;(),&lt;span class=&#34;hljs-number&#34;&gt;1000&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-type&#34;&gt;UserPojo&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;lisi&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;UserPojo&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;李四&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;30&lt;/span&gt;,&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;Company&lt;/span&gt;(),&lt;span class=&#34;hljs-number&#34;&gt;2000&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-type&#34;&gt;UserPojo&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;wangwu&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;UserPojo&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;王五&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;30&lt;/span&gt;,&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;Company&lt;/span&gt;(),&lt;span class=&#34;hljs-number&#34;&gt;3000&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-type&#34;&gt;UserPojo&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;amao&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;UserPojo&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;杨猫&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;30&lt;/span&gt;,&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;Company&lt;/span&gt;(),&lt;span class=&#34;hljs-number&#34;&gt;4000&lt;/span&gt;);&lt;br&gt;        List&amp;lt;UserPojo&amp;gt; users =  Lists.newArrayList(zhangsan,lisi,wangwu,amao);&lt;br&gt;        users.sort(ordering1);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//[UserPojo(name=张三, age= 20,company=Company(name=null, address=null), salary=1000), UserPojo(name=李四, age= 30,company=Company(name=null, address=null), salary=2000), UserPojo(name=王五, age= 30,company=Company(name=null, address=null), salary=3000), UserPojo(name=杨猫, age= 30,company=Company(name=null, address=null), salary=4000)]&lt;/span&gt;&lt;br&gt;        System.out.println(users.toString());&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;onResultOf(Function)&lt;br&gt;把比较器的元素使用Function函数转化成一个值result，再对这个值应用Ordering的比较方法。result的排序顺序就是最后的排序顺序&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;List&amp;lt;UserPojo&amp;gt; users2 =  Lists.newArrayList(zhangsan,lisi,wangwu,amao,&lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;);&lt;br&gt;        Ordering&amp;lt;UserPojo&amp;gt; fOrdering = Ordering.natural().onResultOf(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;Function&lt;/span&gt;&amp;lt;UserPojo, Comparable&amp;gt;() &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-meta&#34;&gt;@Nullable&lt;/span&gt; Comparable &lt;span class=&#34;hljs-title function_&#34;&gt;apply&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(&lt;span class=&#34;hljs-meta&#34;&gt;@Nullable&lt;/span&gt; UserPojo userPojo)&lt;/span&gt; &amp;#123;&lt;br&gt;                &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; userPojo.getSalary();&lt;br&gt;            &amp;#125;&lt;br&gt;        &amp;#125;).nullsFirst();&lt;br&gt;        users2.sort(fOrdering);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//[null, UserPojo(name=张三, age= 20,company=Company(name=null, address=null), salary=1000), UserPojo(name=李四, age= 30,company=Company(name=null, address=null), salary=2000), UserPojo(name=王五, age= 30,company=Company(name=null, address=null), salary=3000), UserPojo(name=杨猫, age= 30,company=Company(name=null, address=null), salary=4000)]&lt;/span&gt;&lt;br&gt;        System.out.println(users2.toString());&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意链式排序器的调用顺序–从右往左的顺序，上面Ordering.natural().onResultOf().nullsFirst();&lt;br&gt;先调用apply方法获取salary值，并把salary为null的元素放到最前面，然后把剩下的进行自然排序&lt;br&gt;所以如果将nullsFirst放在onResultOf的左边则会报异常&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;运用排序器&#34;&gt;&lt;a href=&#34;#运用排序器&#34; class=&#34;headerlink&#34; title=&#34;运用排序器&#34;&gt;&lt;/a&gt;运用排序器&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;greatestOf(Iterable iterable,int k)&lt;br&gt;获取可迭代对象中最大的k个元素&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;List&amp;lt;Integer&amp;gt; result = Ordering.natural().greatestOf(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;ArrayList&lt;/span&gt;&amp;lt;&amp;gt;(Arrays.asList(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;)),&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;);&lt;br&gt;       System.out.println(result);&lt;span class=&#34;hljs-comment&#34;&gt;//[5, 4]&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;leastOf(Iterable iterable,int k)&lt;br&gt;对元素按照从小到大排序，并返回前k个元素&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;List&amp;lt;Integer&amp;gt; result1 = Ordering.natural().leastOf(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;ArrayList&lt;/span&gt;&amp;lt;&amp;gt;(Arrays.asList(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;)),&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;);&lt;br&gt;System.out.println(result1);&lt;span class=&#34;hljs-comment&#34;&gt;//[1, 2]&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;isOrdered(Iterable)&lt;br&gt;判断可迭代对象是否已按照排序器排序:允许有排序值相等的元素&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;List&amp;lt;Integer&amp;gt; list = Arrays.asList(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;8&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;);&lt;br&gt;Collections.sort(list);&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;order&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; Ordering.natural().isOrdered(list);&lt;br&gt;System.out.println(order);&lt;span class=&#34;hljs-comment&#34;&gt;//true&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sortedCopy(Iterable)&lt;br&gt;返回一个新的已经排序的列表，原来的列表顺序不会变&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;List&amp;lt;Integer&amp;gt; nums = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;ArrayList&lt;/span&gt;&amp;lt;&amp;gt;(Arrays.asList(&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;));&lt;br&gt;List&amp;lt;Integer&amp;gt; resultCopy = Ordering.natural().sortedCopy(nums);&lt;br&gt;System.out.println(resultCopy); &lt;span class=&#34;hljs-comment&#34;&gt;// [1, 3, 4]&lt;/span&gt;&lt;br&gt;System.out.println(nums); &lt;span class=&#34;hljs-comment&#34;&gt;// [4, 1, 3]&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;min(E,E,…)&lt;br&gt;返回最小值，如果有多个，则返回第一个&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-type&#34;&gt;Integer&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;min&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; Ordering.natural().min(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;);&lt;br&gt;System.out.println(min);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;max(E,E,…)&lt;br&gt;返回最大值，如果有多个，则返回第一个&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-type&#34;&gt;Integer&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;max&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; Ordering.natural().max(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;);&lt;br&gt;System.out.println(max)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;不可变集合&#34;&gt;&lt;a href=&#34;#不可变集合&#34; class=&#34;headerlink&#34; title=&#34;不可变集合&#34;&gt;&lt;/a&gt;不可变集合&lt;/h3&gt;&lt;p&gt;使用场景：&lt;/p&gt;
&lt;p&gt;如定义一系列状态比如吃饭，睡觉，过马路，需要根据这个状态判断是否可以玩手机，可以在类中定义集合包装这个三个状态，如果当前状态属于三个之一那么不可以玩手机，你可以使用基本的hashset，但是hashset的元素可以被更改，导致可能方法的判断和原本的语义出现出入&lt;/p&gt;
&lt;p&gt;优点&lt;/p&gt;
&lt;p&gt;当对象被不可信的库调用时，不可变形式是安全的；&lt;br&gt;不可变对象被多个线程调用时，不存在竞态条件问题&lt;br&gt;不可变集合不需要考虑变化，因此可以节省时间和空间。所有不可变的集合都比它们的可变 形式有更好的内存利用率（分析和测试细节）；&lt;br&gt;不可变对象因为有固定不变，可以作为常量来安全使用&lt;/p&gt;
&lt;h3 id=&#34;新集合类型&#34;&gt;&lt;a href=&#34;#新集合类型&#34; class=&#34;headerlink&#34; title=&#34;新集合类型&#34;&gt;&lt;/a&gt;新集合类型&lt;/h3&gt;&lt;h4 id=&#34;Multiset&#34;&gt;&lt;a href=&#34;#Multiset&#34; class=&#34;headerlink&#34; title=&#34;Multiset&#34;&gt;&lt;/a&gt;Multiset&lt;/h4&gt;&lt;p&gt;可以用两种方式看待Multiset：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;没有元素顺序限制的ArrayList&lt;br&gt;  当把Multiset看成普通的Collection时，它表现得就像无序的ArrayList&lt;ul&gt;
&lt;li&gt;add(E)添加单个给定元素&lt;/li&gt;
&lt;li&gt;iterator()返回一个迭代器，包含Multiset的所有元素（包括重复的元素）&lt;/li&gt;
&lt;li&gt;size()返回所有元素的总个数（包括重复的元素）&lt;/li&gt;
&lt;li&gt;Map&amp;lt;E, Integer&amp;gt;，键为元素，值为计数0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Multiset看作Map&amp;lt;E, Integer&amp;gt;时，它也提供了符合性能期望的查询操作：&lt;br&gt;  - count(Object)返回给定元素的计数。HashMultiset.count的复杂度为O(1)，TreeMultiset.count的复杂度为O(log n)。&lt;br&gt;  - entrySet()返回Set&amp;lt;Multiset.Entry&amp;gt;，和Map的entrySet类似。&lt;br&gt;  - elementSet()返回所有不重复元素的Set，和Map的keySet()类似。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;MultiSetTest&lt;/span&gt; &amp;#123;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/****&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * java 8 一下&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * &lt;span class=&#34;hljs-doctag&#34;&gt;@param&lt;/span&gt; list&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * &lt;span class=&#34;hljs-doctag&#34;&gt;@return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; Map&amp;lt;String, Integer&amp;gt; &lt;span class=&#34;hljs-title function_&#34;&gt;statisticsWordCount1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(List&amp;lt;String&amp;gt; list)&lt;/span&gt; &amp;#123;&lt;br&gt;        Map&amp;lt;String, Integer&amp;gt; countMap = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;HashMap&lt;/span&gt;&amp;lt;&amp;gt;();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (list == &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt; || list.size() == &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; countMap;&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (String s : list) &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;nowCount&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; countMap.getOrDefault(s, &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;);&lt;br&gt;            countMap.put(s, nowCount + &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;);&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; countMap;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * java 8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * &lt;span class=&#34;hljs-doctag&#34;&gt;@param&lt;/span&gt; list&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * &lt;span class=&#34;hljs-doctag&#34;&gt;@return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; Map&amp;lt;String, Integer&amp;gt; &lt;span class=&#34;hljs-title function_&#34;&gt;statisticsWordCount2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(List&amp;lt;String&amp;gt; list)&lt;/span&gt; &amp;#123;&lt;br&gt;        list = Optional.ofNullable(list).orElse(Collections.emptyList());&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; list.stream()&lt;br&gt;                .collect(Collectors.groupingBy(t -&amp;gt; t,&lt;br&gt;                        Collectors.reducing(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, num -&amp;gt; &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, Integer::sum)));&lt;br&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * guava api&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * &lt;span class=&#34;hljs-doctag&#34;&gt;@param&lt;/span&gt; list&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * &lt;span class=&#34;hljs-doctag&#34;&gt;@return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; Map&amp;lt;String, Integer&amp;gt; &lt;span class=&#34;hljs-title function_&#34;&gt;statisticsWordCount3&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(List&amp;lt;String&amp;gt; list)&lt;/span&gt; &amp;#123;&lt;br&gt;        list = Optional.ofNullable(list).orElse(Collections.emptyList());&lt;br&gt;        HashMultiset&amp;lt;String&amp;gt; multiset = HashMultiset.create(list);&lt;br&gt;        System.out.println(multiset);&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; multiset.stream()&lt;br&gt;                .collect(Collectors.toMap(item -&amp;gt; item, multiset::count, BinaryOperator.maxBy(Ordering.natural())));&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String[] args)&lt;/span&gt; &amp;#123;&lt;br&gt;        Map&amp;lt;String, Integer&amp;gt; map = statisticsWordCount3(Arrays.asList(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;c&amp;quot;&lt;/span&gt;));&lt;br&gt;        map.forEach((k, v) -&amp;gt; System.out.println(k + &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;-&amp;quot;&lt;/span&gt; + v));&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;SortedMultiset&#34;&gt;&lt;a href=&#34;#SortedMultiset&#34; class=&#34;headerlink&#34; title=&#34;SortedMultiset&#34;&gt;&lt;/a&gt;SortedMultiset&lt;/h4&gt;&lt;p&gt;Multiset 接口的变种，它支持高效地获取指定范围的子集。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;SortMultiSetTest&lt;/span&gt; &amp;#123;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 在不改变源money 元素的情况下 统计介于min和max间的钱&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * money中的null 视为0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; List&amp;lt;Float&amp;gt; &lt;span class=&#34;hljs-title function_&#34;&gt;findMoneyBetween1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(&lt;span class=&#34;hljs-type&#34;&gt;float&lt;/span&gt; min, &lt;span class=&#34;hljs-type&#34;&gt;float&lt;/span&gt; max, List&amp;lt;Float&amp;gt; money)&lt;/span&gt; &amp;#123;&lt;br&gt;        money = Optional.ofNullable(money).orElse(Collections.emptyList());&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; money.stream().map(item -&amp;gt; Optional.ofNullable(item).orElse(&lt;span class=&#34;hljs-number&#34;&gt;0F&lt;/span&gt;))&lt;br&gt;                .filter(item -&amp;gt; item &amp;gt; min &amp;amp;&amp;amp; item &amp;lt; max)&lt;br&gt;                .collect(Collectors.toList());&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * 在不改变源money 元素的情况下 统计介于min和max间的钱&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     * money中的null 视为0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;     */&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; List&amp;lt;Float&amp;gt; &lt;span class=&#34;hljs-title function_&#34;&gt;findMoneyBetween2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(&lt;span class=&#34;hljs-type&#34;&gt;float&lt;/span&gt; min, &lt;span class=&#34;hljs-type&#34;&gt;float&lt;/span&gt; max, List&amp;lt;Float&amp;gt; money)&lt;/span&gt; &amp;#123;&lt;br&gt;        money = Optional.ofNullable(money).orElse(Collections.emptyList());&lt;br&gt;        TreeMultiset&amp;lt;Float&amp;gt; treeMultiset = TreeMultiset.create(Ordering.&amp;lt;Float&amp;gt;natural().onResultOf(f1 -&amp;gt; Optional.ofNullable(f1).orElse(&lt;span class=&#34;hljs-number&#34;&gt;0F&lt;/span&gt;)));&lt;br&gt;        treeMultiset.addAll(money);&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; Lists.newLinkedList(treeMultiset.subMultiset(min, BoundType.CLOSED, max, BoundType.CLOSED));&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;Multimap&#34;&gt;&lt;a href=&#34;#Multimap&#34; class=&#34;headerlink&#34; title=&#34;Multimap&#34;&gt;&lt;/a&gt;Multimap&lt;/h4&gt;&lt;p&gt;Guava的 Multimap可以很容易地把一个键映射到多个值。换句话说，Multimap是把键映射到任意多个值的一般方式。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; Map&amp;lt;String, Collection&amp;lt;Integer&amp;gt;&amp;gt; &lt;span class=&#34;hljs-title function_&#34;&gt;mergeMap1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(Map&amp;lt;String, Integer&amp;gt; map1, Map&amp;lt;String, Integer&amp;gt; map2)&lt;/span&gt; &amp;#123;&lt;br&gt;    map1 = Optional.ofNullable(map1).orElse(Collections.emptyMap());&lt;br&gt;    map2 = Optional.ofNullable(map2).orElse(Collections.emptyMap());&lt;br&gt;    Set&amp;lt;String&amp;gt; allKey = Stream.of(map1.keySet(), map2.keySet()).flatMap(Collection::stream).collect(Collectors.toSet());&lt;br&gt;    Map&amp;lt;String, Collection&amp;lt;Integer&amp;gt;&amp;gt; resMap = Maps.newHashMap();&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; (String key : allKey) &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-type&#34;&gt;Integer&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;integer1&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; map1.get(key);&lt;br&gt;        &lt;span class=&#34;hljs-type&#34;&gt;Integer&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;integer2&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; map2.get(key);&lt;br&gt;        Set&amp;lt;Integer&amp;gt; tempSet = Sets.newHashSet();&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (Objects.nonNull(integer1)) &amp;#123;&lt;br&gt;            tempSet.add(integer1);&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (Objects.nonNull(integer2)) &amp;#123;&lt;br&gt;            tempSet.add(integer2);&lt;br&gt;        &amp;#125;&lt;br&gt;        resMap.put(key, tempSet);&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; resMap;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; Map&amp;lt;String, Collection&amp;lt;Integer&amp;gt;&amp;gt; &lt;span class=&#34;hljs-title function_&#34;&gt;mergeMap2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(Map&amp;lt;String, Integer&amp;gt; map1, Map&amp;lt;String, Integer&amp;gt; map2)&lt;/span&gt; &amp;#123;&lt;br&gt;    map1 = Optional.ofNullable(map1).orElse(Collections.emptyMap());&lt;br&gt;    map2 = Optional.ofNullable(map2).orElse(Collections.emptyMap());&lt;br&gt;    Multimap&amp;lt;String, Integer&amp;gt; multimap = HashMultimap.create();&lt;br&gt;    map1.forEach(multimap::put);&lt;br&gt;    map2.forEach(multimap::put);&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; multimap.asMap();&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;BiMap&#34;&gt;&lt;a href=&#34;#BiMap&#34; class=&#34;headerlink&#34; title=&#34;BiMap&#34;&gt;&lt;/a&gt;BiMap&lt;/h4&gt;&lt;p&gt;BiMap是特殊的Map：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以用 inverse()反转BiMap&amp;lt;K, V&amp;gt;的键值映射&lt;/li&gt;
&lt;li&gt;保证值是唯一的，因此 values()返回Set而不是普通的Collection&lt;/li&gt;
&lt;li&gt;在BiMap中，如果你想把键映射到已经存在的值，会抛出IllegalArgumentException异常。如果对特定值，你想要强制替换它的键，请使用 BiMap.forcePut(key, value)。&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;BiMapLearn&lt;/span&gt; &amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String[] args)&lt;/span&gt; &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//想象这是用户id 和用户名对应map&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//你需要根据id查询用户名。根据用户名查询id（用户名同样不可以重复）&lt;/span&gt;&lt;br&gt;        HashBiMap&amp;lt;String, String&amp;gt; userNameAndIdMap = HashBiMap.create();&lt;br&gt;        userNameAndIdMap.put(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;2017015600&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;陈兴cupk&amp;quot;&lt;/span&gt;);&lt;br&gt;        userNameAndIdMap.put(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;80309525&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;陈兴cmbnk&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;// 重复value 会抛出异常ava.lang.IllegalArgumentException:&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;// value already present: 陈兴cmbnk&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        userNameAndIdMap.put(&amp;quot;309525&amp;quot;,&amp;quot;陈兴cmbnk&amp;quot;);&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//forcePut 可以强制替换 key -value 组合&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        userNameAndIdMap.forcePut(&amp;quot;309525&amp;quot;,&amp;quot;陈兴cmbnk&amp;quot;);&lt;/span&gt;&lt;br&gt;        System.out.println(userNameAndIdMap.get(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;2017015600&amp;quot;&lt;/span&gt;));&lt;br&gt;        System.out.println(userNameAndIdMap.inverse().get(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;陈兴cmbnk&amp;quot;&lt;/span&gt;));&lt;br&gt;        System.out.println(userNameAndIdMap.get(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;80309525&amp;quot;&lt;/span&gt;));&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//set类型的key value&lt;/span&gt;&lt;br&gt;        Set&amp;lt;String&amp;gt; strings = userNameAndIdMap.keySet();&lt;br&gt;        Set&amp;lt;String&amp;gt; values = userNameAndIdMap.values();&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;Table&#34;&gt;&lt;a href=&#34;#Table&#34; class=&#34;headerlink&#34; title=&#34;Table&#34;&gt;&lt;/a&gt;Table&lt;/h4&gt;&lt;p&gt;使用场景：当你需要多个字段作为key时，你可能为这个key编写一个类，重写equals和hashMap。或者使用形同Map&amp;lt;FirstName, Map&amp;lt;LastName, Person&amp;gt;&amp;gt;的map结构，前者编码繁琐，后者使用不友好（第一个get后判空，后才能左第二次get）&lt;/p&gt;
&lt;p&gt;Guava为此提供了新集合类型Table，它有两个支持所有类型的键：”行”和”列”。Table提供多种视图，以便你从各种角度使用它：&lt;/p&gt;
&lt;p&gt;rowMap()：用Map&amp;lt;R, Map&amp;lt;C, V&amp;gt;&amp;gt;表现Table&amp;lt;R, C, V&amp;gt;。同样的， rowKeySet()返回”行”的集合Set。&lt;/p&gt;
&lt;p&gt;row ：用Map&amp;lt;C, V&amp;gt;返回给定”行”的所有列，对这个map进行的写操作也将写入Table中。&lt;/p&gt;
&lt;p&gt;类似的列访问方法：columnMap()、columnKeySet()、column。（基于列的访问会比基于的行访问稍微低效点）&lt;/p&gt;
&lt;p&gt;cellSet()：用元素类型为Table.Cell的Set表现Table&amp;lt;R, C, V&amp;gt;。Cell类似于Map.Entry，但它是用行和列两个键区分的。&lt;/p&gt;
&lt;p&gt;使用案例&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;TableLearn&lt;/span&gt; &amp;#123;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String[] args)&lt;/span&gt; &amp;#123;&lt;br&gt;        System.out.println(getNameByAgeAndNo1(&lt;span class=&#34;hljs-number&#34;&gt;17&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;201715600&amp;quot;&lt;/span&gt;));&lt;br&gt;        System.out.println(getNameByAgeAndNo2(&lt;span class=&#34;hljs-number&#34;&gt;17&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;201715600&amp;quot;&lt;/span&gt;));&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;//根据年龄和编号 获取名字，编写KeyOfAgeAndNo 重写equals hashcode&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; String &lt;span class=&#34;hljs-title function_&#34;&gt;getNameByAgeAndNo1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(&lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; age,String no)&lt;/span&gt;&amp;#123;&lt;br&gt;        HashMap&amp;lt;KeyOfAgeAndNo, String&amp;gt; memory = Maps.newHashMap();&lt;br&gt;        memory.put(KeyOfAgeAndNo.of(&lt;span class=&#34;hljs-number&#34;&gt;17&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;201715600&amp;quot;&lt;/span&gt;),&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;大一的陈兴&amp;quot;&lt;/span&gt;);&lt;br&gt;        memory.put(KeyOfAgeAndNo.of(&lt;span class=&#34;hljs-number&#34;&gt;14&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;0929&amp;quot;&lt;/span&gt;),&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;高一的陈兴&amp;quot;&lt;/span&gt;);&lt;br&gt;        memory.put(KeyOfAgeAndNo.of(&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;80303697&amp;quot;&lt;/span&gt;),&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;实习的陈兴&amp;quot;&lt;/span&gt;);&lt;br&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; Optional.ofNullable(memory.get(KeyOfAgeAndNo.of(age, no)))&lt;br&gt;                .orElseThrow(() -&amp;gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;RuntimeException&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;查无此人&amp;quot;&lt;/span&gt;));&lt;br&gt;    &amp;#125;&lt;br&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;//编写KeyOfAgeAndNo 重写equals hashcode&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;KeyOfAgeAndNo&lt;/span&gt;&amp;#123;&lt;br&gt;        Integer age;&lt;br&gt;        String no;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; KeyOfAgeAndNo &lt;span class=&#34;hljs-title function_&#34;&gt;of&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;( Integer age,String no)&lt;/span&gt;&amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-type&#34;&gt;KeyOfAgeAndNo&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;KeyOfAgeAndNo&lt;/span&gt;();&lt;br&gt;            res.age=age;&lt;br&gt;            res.no=no;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; res;&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-type&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;equals&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(Object o)&lt;/span&gt; &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;hljs-built_in&#34;&gt;this&lt;/span&gt; == o) &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (!(o &lt;span class=&#34;hljs-keyword&#34;&gt;instanceof&lt;/span&gt; KeyOfAgeAndNo)) &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;false&lt;/span&gt;;&lt;br&gt;            &lt;span class=&#34;hljs-type&#34;&gt;KeyOfAgeAndNo&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;that&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; (KeyOfAgeAndNo) o;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; Objects.equals(age, that.age) &amp;amp;&amp;amp;&lt;br&gt;                    Objects.equals(no, that.no);&lt;br&gt;        &amp;#125;&lt;br&gt;&lt;br&gt;        &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;hashCode&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; Objects.hash(age, no);&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;//使用table &lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; String &lt;span class=&#34;hljs-title function_&#34;&gt;getNameByAgeAndNo2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(&lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; age,String no)&lt;/span&gt;&amp;#123;&lt;br&gt;        HashBasedTable&amp;lt;Integer ,String,String&amp;gt;table=HashBasedTable.create();&lt;br&gt;        table.put(&lt;span class=&#34;hljs-number&#34;&gt;17&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;201715600&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;大一的陈兴&amp;quot;&lt;/span&gt;);&lt;br&gt;        table.put(&lt;span class=&#34;hljs-number&#34;&gt;14&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;0929&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;高一的陈兴&amp;quot;&lt;/span&gt;);&lt;br&gt;        table.put(&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;80303697&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;实习的陈兴&amp;quot;&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; Optional.ofNullable(table.get(age, no))&lt;br&gt;                .orElseThrow(() -&amp;gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;RuntimeException&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;查无此人&amp;quot;&lt;/span&gt;));&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;ClassToInstanceMap&#34;&gt;&lt;a href=&#34;#ClassToInstanceMap&#34; class=&#34;headerlink&#34; title=&#34;ClassToInstanceMap&#34;&gt;&lt;/a&gt;ClassToInstanceMap&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;使用场景，类型指向实例，使用普通map需要&lt;/li&gt;
&lt;li&gt;示例&lt;br&gt;  getInstanceByClass1需要进行强转因为map get方法返回object类型，不能限制key的类型&lt;br&gt;  getInstanceByClass2则没有这种需要 且可以限定key的类型&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;ClassToInstanceMapLearn&lt;/span&gt; &amp;#123;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//静态内部类实现单例 和ClassToInstanceMap 使用没有必要关系&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;SingletonHolder&lt;/span&gt; &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;final&lt;/span&gt; ClassToInstanceMapLearn INSTANCE;&lt;br&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &amp;#123;&lt;br&gt;            INSTANCE = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;ClassToInstanceMapLearn&lt;/span&gt;();&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;ClassToInstanceMapLearn&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;br&gt;        System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;ClassToInstanceMapLearn Constructor&amp;quot;&lt;/span&gt;);&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; ClassToInstanceMapLearn &lt;span class=&#34;hljs-title function_&#34;&gt;newInstance&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; SingletonHolder.INSTANCE;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;final&lt;/span&gt; Map&amp;lt;Class&amp;lt;?&amp;gt;, ? &lt;span class=&#34;hljs-built_in&#34;&gt;super&lt;/span&gt; ClassToInstanceMapLearn&amp;gt; Memory1 = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;HashMap&lt;/span&gt;&amp;lt;&amp;gt;();&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &amp;#123;&lt;br&gt;        Memory1.put(ClassToInstanceMapLearn.class, ClassToInstanceMapLearn.newInstance());&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//加入从 简单工场拿SingletonHolder实例 强转化 将抛出异常&lt;/span&gt;&lt;br&gt;        Memory1.put(SingletonHolder.class, ClassToInstanceMapLearn.newInstance());&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &amp;lt;T &lt;span class=&#34;hljs-keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;ClassToInstanceMapLearn&lt;/span&gt;&amp;gt; T &lt;span class=&#34;hljs-title function_&#34;&gt;getInstanceByClass1&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(Class&amp;lt;T&amp;gt; clazz)&lt;/span&gt; &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//需要强转需要去判断 是否是clazz的实例 错误写法&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; (T) Optional.ofNullable(Memory1.get(clazz))&lt;br&gt;                .orElseThrow(() -&amp;gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;RuntimeException&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;不存在&amp;quot;&lt;/span&gt;));&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;final&lt;/span&gt; ClassToInstanceMap&amp;lt;? &lt;span class=&#34;hljs-built_in&#34;&gt;super&lt;/span&gt; ClassToInstanceMapLearn&amp;gt; Memory2 = MutableClassToInstanceMap.create();&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &amp;#123;&lt;br&gt;        Memory2.putInstance(ClassToInstanceMapLearn.class, ClassToInstanceMapLearn.newInstance());&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//无法加入&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        Memory2.put(SingletonHolder.class, ClassToInstanceMapLearn.newInstance());&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &amp;lt;T &lt;span class=&#34;hljs-keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;ClassToInstanceMapLearn&lt;/span&gt;&amp;gt; T &lt;span class=&#34;hljs-title function_&#34;&gt;getInstanceByClass2&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(Class&amp;lt;T&amp;gt; clazz)&lt;/span&gt; &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;//不需要强转&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; Optional.ofNullable(Memory2.getInstance(clazz))&lt;br&gt;                .orElseThrow(() -&amp;gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;RuntimeException&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;不存在&amp;quot;&lt;/span&gt;));&lt;br&gt;    &amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String[] args)&lt;/span&gt; &amp;#123;&lt;br&gt;        System.out.println(getInstanceByClass1(ClassToInstanceMapLearn.class));&lt;br&gt;         System.out.println(getInstanceByClass2(ClassToInstanceMapLearn.class));&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;集合-Collections&#34;&gt;&lt;a href=&#34;#集合-Collections&#34; class=&#34;headerlink&#34; title=&#34;集合[Collections]&#34;&gt;&lt;/a&gt;集合&lt;code&gt;[Collections]&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;Guava对JDK集合的扩展，这是Guava最成熟和为人所知的部分&lt;br&gt;guava 中的集合工具常常以集合名称加s出现&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Collections2 因为java存在Collections guava加了2&lt;/li&gt;
&lt;li&gt;Lists&lt;/li&gt;
&lt;li&gt;Maps&lt;/li&gt;
&lt;li&gt;Sets&lt;br&gt;等等 上面介绍的新集合类型也存在对应的工具类&lt;br&gt;这些工具类的共性&lt;strong&gt;都存在静态工厂方法&lt;/strong&gt;&lt;br&gt;为什么要使用静态工厂方法，它相比于构造方法（这里的静态工厂方法不是指，设计模式中的工厂模式）&lt;br&gt;《Effective Java》第一条 使用静态工厂方法代替构造器，给予了解答&lt;/li&gt;
&lt;li&gt;静态工厂方法有名字&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//这一句是什么意思&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;BigInteger&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;big1&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;BigInteger&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;Random&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;));&lt;br&gt;System.out.println(big1);&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//这一句又是什么意思&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;BigInteger&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;big2&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; BigInteger.probablePrime(&lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;Random&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;));&lt;br&gt;System.out.println(big2);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;静态工厂方法，不必每次都生成一个对象&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//虽然下面两句都在放屁，但是前者的屁更臭&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;flag&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;Random&lt;/span&gt;().nextInt() % &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; == &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//每次生成一个新对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;Boolean&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;b1&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;Boolean&lt;/span&gt;(flag);&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//不会生成新对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;Boolean&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;b2&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; Boolean.valueOf(flag);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;静态工厂方法可以返回任何原返回类型的子类型，如guava中的api&lt;/li&gt;
&lt;li&gt;静态工厂的返回对象的类可也随着每次调用而变化，取决于入参类似于简单工厂模式&lt;/li&gt;
&lt;li&gt;静态工厂方法返回的对象所属的类可以在，在编写百行该静态工厂方法的类时不存在，如JDBC数据库连接&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;Collections2&#34;&gt;&lt;a href=&#34;#Collections2&#34; class=&#34;headerlink&#34; title=&#34;Collections2&#34;&gt;&lt;/a&gt;Collections2&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;过滤&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;filterLearn&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;br&gt;    List&amp;lt;Integer&amp;gt; list = Arrays.asList(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;);&lt;br&gt;    Collection&amp;lt;Integer&amp;gt; filter = Collections2.filter(list, Objects::nonNull);&lt;br&gt;    System.out.println(list);&lt;br&gt;    System.out.println(filter);&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;//返回一个继承了AbstractCollection的集合&lt;/span&gt;&lt;br&gt;    System.out.println(filter.getClass());&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;转换&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;Collections2Test&lt;/span&gt; &amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;private&lt;/span&gt; Integer nums;&lt;br&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;Collections2Test&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(Integer nums)&lt;/span&gt; &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-built_in&#34;&gt;this&lt;/span&gt;.nums = nums;&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;transformLearn&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-type&#34;&gt;Collections2Test&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;c1&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;Collections2Test&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;);&lt;br&gt;        &lt;span class=&#34;hljs-type&#34;&gt;Collections2Test&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;c2&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; ne &lt;span class=&#34;hljs-title function_&#34;&gt;Collections2Test&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;;&lt;br&gt;        &lt;span class=&#34;hljs-type&#34;&gt;Collections2Test&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;c3&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;Collections2Test&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;);&lt;br&gt;        List&amp;lt;Collections2Test&amp;gt; list = Arrays.asList(c1, c2, c3);&lt;br&gt;        Collection&amp;lt;Integer&amp;gt; transform = Collections2.transform(list,&lt;br&gt;                t -&amp;gt; Optional.ofNullable(t)&lt;br&gt;                        .orElse(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;Collections2Test&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;)).nums);&lt;br&gt;        System.out.println(transform);&lt;br&gt;        System.out.println(transform.getClass());&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;全排列&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(String[] args)&lt;/span&gt; &amp;#123;&lt;br&gt;    ArrayList&amp;lt;Integer&amp;gt; list = Lists.newArrayList(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;);&lt;br&gt;    Collection&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt; lists = Collections2.orderedPermutations(list);&lt;br&gt;    lists.forEach(System.out::println);&lt;br&gt;    Collection&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt; permutations = Collections2.permutations(list);&lt;br&gt;    System.out.println(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;====&amp;quot;&lt;/span&gt;);&lt;br&gt;    permutations.forEach(System.out::println);&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;Lists&#34;&gt;&lt;a href=&#34;#Lists&#34; class=&#34;headerlink&#34; title=&#34;Lists&#34;&gt;&lt;/a&gt;Lists&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;切割&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//获取一个字符串中的全部字符，返回不可变集合&lt;/span&gt;&lt;br&gt;ImmutableList&amp;lt;Character&amp;gt; chars = Lists.charactersOf(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;123&amp;quot;&lt;/span&gt;);&lt;br&gt;System.out.println(chars);&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//按照大小分割list&lt;/span&gt;&lt;br&gt;ArrayList&amp;lt;Integer&amp;gt; intList = Lists.newArrayList(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;6&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;7&lt;/span&gt;);&lt;br&gt;List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt; partitionList = Lists.partition(intList, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;);&lt;br&gt;System.out.println(partitionList);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;Sets&#34;&gt;&lt;a href=&#34;#Sets&#34; class=&#34;headerlink&#34; title=&#34;Sets&#34;&gt;&lt;/a&gt;Sets&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;交集&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;HashSet&amp;lt;Integer&amp;gt; set1 = Sets.newHashSet(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;);&lt;br&gt;HashSet&amp;lt;Integer&amp;gt; set2 = Sets.newHashSet(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;);&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//返回交集&lt;/span&gt;&lt;br&gt;Sets.SetView&amp;lt;Integer&amp;gt; intersection = Sets.intersection(set1, set2);&lt;br&gt;System.out.println(intersection);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;差集&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//返回set1中存在 s2中不存在的元素&lt;/span&gt;&lt;br&gt;System.out.println(Sets.difference(set1, set2));&lt;br&gt;System.out.println(Sets.difference(set2, set1));&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;并集&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//返回并集&lt;/span&gt;&lt;br&gt;Sets.SetView&amp;lt;Integer&amp;gt; union = Sets.union(set1, set2);&lt;br&gt;System.out.println(union);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;过滤&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;System.out.println(Sets.filter(union, t -&amp;gt; t % &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; == &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;));&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;Maps&#34;&gt;&lt;a href=&#34;#Maps&#34; class=&#34;headerlink&#34; title=&#34;Maps&#34;&gt;&lt;/a&gt;Maps&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;uniqueIndex 根据传入的function生成map&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;ArrayList&amp;lt;Integer&amp;gt; list1 = Lists.newArrayList(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;6&lt;/span&gt;);&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//传入function根据function生成map 要求 key 不可重复&lt;/span&gt;&lt;br&gt;ImmutableMap&amp;lt;String, Integer&amp;gt; integerImmutableMap = Maps.uniqueIndex(list1, String::valueOf);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;获取两个map的不同&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//如果你预计hashMap的大小请使用这个方法&lt;/span&gt;&lt;br&gt;HashMap&amp;lt;String, Integer&amp;gt; map1 = Maps.newHashMapWithExpectedSize(&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;);&lt;br&gt;map1.put(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;);&lt;br&gt;map1.put(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;);&lt;br&gt;map1.put(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;);&lt;br&gt;map1.put(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;);&lt;br&gt;map1.put(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;);&lt;br&gt;ArrayList&amp;lt;Integer&amp;gt; list1 = Lists.newArrayList(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;6&lt;/span&gt;);&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//传入function根据function生成map 要求 key 不可重复&lt;/span&gt;&lt;br&gt;ImmutableMap&amp;lt;String, Integer&amp;gt; integerImmutableMap = Maps.uniqueIndex(list1, String::valueOf);&lt;br&gt;MapDifference&amp;lt;String, Integer&amp;gt; difference = Maps.difference(map1, integerImmutableMap);&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//左边独有key&lt;/span&gt;&lt;br&gt;Map&amp;lt;String, Integer&amp;gt; mapLeft = difference.entriesOnlyOnLeft();&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//右边独有key&lt;/span&gt;&lt;br&gt;Map&amp;lt;String, Integer&amp;gt; mapRight = difference.entriesOnlyOnRight();&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//两个map相同key 但是不同value&lt;/span&gt;&lt;br&gt;Map&amp;lt;String, MapDifference.ValueDifference&amp;lt;Integer&amp;gt;&amp;gt; valueDifferenceMap = difference.entriesDiffering();&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//左边map的值 有边map的值&lt;/span&gt;&lt;br&gt;System.out.println(valueDifferenceMap.get(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;).rightValue());&lt;br&gt;System.out.println(valueDifferenceMap.get(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;).leftValue());&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;过滤&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//过滤map 中的Entries&lt;/span&gt;&lt;br&gt;Map&amp;lt;String, Integer&amp;gt; filterEntriesMap = Maps.filterEntries(map1, e -&amp;gt; &amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;assert&lt;/span&gt; e != &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; StringUtils.equals(e.getKey(), String.valueOf(e.getValue()));&lt;br&gt;&amp;#125;);&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//过滤key&lt;/span&gt;&lt;br&gt;Map&amp;lt;String, Integer&amp;gt; filterKeysMap = Maps.filterKeys(map1, StringUtils::isNotBlank);&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//过滤value&lt;/span&gt;&lt;br&gt;Map&amp;lt;String, Integer&amp;gt; filterValuesMap = Maps.filterValues(map1, v -&amp;gt; &amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;assert&lt;/span&gt; v != &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; v % &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt; == &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;&amp;#125;);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;根据map构造转换器&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;HashBiMap&amp;lt;String, Integer&amp;gt; biMapForConverter = HashBiMap.create(integerImmutableMap);&lt;br&gt;Converter&amp;lt;String, Integer&amp;gt; converter = Maps.asConverter(biMapForConverter);&lt;br&gt;System.out.println(converter.convert(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;));&lt;br&gt;Iterable&amp;lt;Integer&amp;gt; convertRes = converter.convertAll(Arrays.asList(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;));&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;转换&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;Map&amp;lt;String, String&amp;gt; transformEntriesMap = Maps.transformEntries(map1, (key, value) -&amp;gt; String.valueOf(map1.get(key)));&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//同样还存在&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//        Maps.transformValues()&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;字符串处理&#34;&gt;&lt;a href=&#34;#字符串处理&#34; class=&#34;headerlink&#34; title=&#34;字符串处理&#34;&gt;&lt;/a&gt;字符串处理&lt;/h2&gt;&lt;h3 id=&#34;连接器-Joiner&#34;&gt;&lt;a href=&#34;#连接器-Joiner&#34; class=&#34;headerlink&#34; title=&#34;连接器[Joiner]&#34;&gt;&lt;/a&gt;连接器&lt;code&gt;[Joiner]&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;连接任何实现了Iterable结果的类型&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;List&amp;lt;Integer&amp;gt; list = Arrays.asList(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, &lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;);&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//跳过null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;str1&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; Joiner.on(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;-&amp;quot;&lt;/span&gt;).skipNulls().join(list);&lt;br&gt;System.out.println(str1);&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//用NNNN代替空&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;str2&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; Joiner.on(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;-&amp;quot;&lt;/span&gt;).useForNull(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;NNNN&amp;quot;&lt;/span&gt;).join(list);&lt;br&gt;System.out.println(str2);&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//空指针&lt;/span&gt;&lt;br&gt;String str3= Joiner.on(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;-&amp;quot;&lt;/span&gt;).join(list);&lt;br&gt;System.out.println(str3);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;连接map&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;HashMap&amp;lt;String, String&amp;gt; map = Maps.newHashMap();&lt;br&gt;map.put(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;);&lt;br&gt;map.put(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;);&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//每一个k-v连接方式为\n  kv连接方式为-&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;str1&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; Joiner.on(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;).withKeyValueSeparator(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;-&amp;gt;&amp;quot;&lt;/span&gt;).join(map);&lt;br&gt;System.out.println(str1);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;连接实现了Appendable的任何类型&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-type&#34;&gt;StringBuilder&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;str3&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; Joiner.on(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;-&amp;quot;&lt;/span&gt;).appendTo(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;StringBuilder&lt;/span&gt;(), Arrays.asList(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;));&lt;br&gt;System.out.println(str3);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;分割器-Splitter&#34;&gt;&lt;a href=&#34;#分割器-Splitter&#34; class=&#34;headerlink&#34; title=&#34;分割器[Splitter]&#34;&gt;&lt;/a&gt;分割器&lt;code&gt;[Splitter]&lt;/code&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;分隔成list&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;String str=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;1-2  -3 - 4- - - &amp;quot;&lt;/span&gt;;&lt;br&gt;List&amp;lt;String&amp;gt; list1 = Splitter.fixedLength(&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;).splitToList(str);&lt;br&gt;System.out.println(list1);&lt;br&gt;List&amp;lt;String&amp;gt; list2 = Splitter.on(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;-&amp;quot;&lt;/span&gt;).splitToList(str);&lt;br&gt;System.out.println(list2);&lt;br&gt;List&amp;lt;String&amp;gt; list3 = Splitter.on(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;-&amp;quot;&lt;/span&gt;).trimResults().splitToList(str);&lt;br&gt;System.out.println(list3);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;分割成map&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;String str2=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;1#2-2#3-3#1&amp;quot;&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//每一组entry使用的是-分割 k和v使用的#分割&lt;/span&gt;&lt;br&gt;Map&amp;lt;String, String&amp;gt; map = Splitter.on(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;-&amp;quot;&lt;/span&gt;).withKeyValueSeparator(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;#&amp;quot;&lt;/span&gt;).split(str2);&lt;br&gt;map.forEach((k,v)-&amp;gt; System.out.println(k+&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;-&amp;gt;&amp;quot;&lt;/span&gt;+v));&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;分割成Iterable&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;Iterable&amp;lt;String&amp;gt; stringIterable = Splitter.on(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;-&amp;quot;&lt;/span&gt;).split(str);&lt;br&gt;stringIterable.iterator().forEachRemaining(System.out::println);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;字符匹配器&#34;&gt;&lt;a href=&#34;#字符匹配器&#34; class=&#34;headerlink&#34; title=&#34;字符匹配器&#34;&gt;&lt;/a&gt;字符匹配器&lt;/h3&gt;&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//删除字符&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;/1/2/3/4&amp;quot;&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;str1&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; CharMatcher.is(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;/&amp;#x27;&lt;/span&gt;).removeFrom(str);&lt;br&gt;System.out.println(str1);&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;str2&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; CharMatcher.anyOf(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;/1&amp;quot;&lt;/span&gt;).removeFrom(str);&lt;br&gt;System.out.println(str2);&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;str3&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; CharMatcher.noneOf(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;12/&amp;quot;&lt;/span&gt;).removeFrom(str);&lt;br&gt;System.out.println(str3);&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;str4&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; CharMatcher.inRange(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;9&amp;#x27;&lt;/span&gt;).removeFrom(str);&lt;br&gt;System.out.println(str4);&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//替换&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;str5&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; CharMatcher.inRange(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;9&amp;#x27;&lt;/span&gt;).replaceFrom(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;a1b2c3&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;.&amp;quot;&lt;/span&gt;);&lt;br&gt;System.out.println(str5);&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//裁剪&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;str6&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; CharMatcher.inRange(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;9&amp;#x27;&lt;/span&gt;).trimTrailingFrom(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;a1b2c3&amp;quot;&lt;/span&gt;);&lt;br&gt;System.out.println(str6);&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//比对&lt;/span&gt;&lt;br&gt;System.out.println(CharMatcher.inRange(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;9&amp;#x27;&lt;/span&gt;).matchesAllOf(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;1b2&amp;quot;&lt;/span&gt;));&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;字符集和大小写格式&#34;&gt;&lt;a href=&#34;#字符集和大小写格式&#34; class=&#34;headerlink&#34; title=&#34;字符集和大小写格式&#34;&gt;&lt;/a&gt;字符集和大小写格式&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Charsets针对所有Java平台都要保证支持的六种字符集提供了常量引用。尝试使用这些常量，而不是通过名称获取字符集实例。&lt;/li&gt;
&lt;li&gt;CaseFormat&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;缓存-Caches&#34;&gt;&lt;a href=&#34;#缓存-Caches&#34; class=&#34;headerlink&#34; title=&#34;缓存[Caches]&#34;&gt;&lt;/a&gt;缓存&lt;code&gt;[Caches]&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;Guava Cache：本地缓存实现，支持多种缓存过期策略&lt;/p&gt;
&lt;h2 id=&#34;函数式风格-Functional-idioms&#34;&gt;&lt;a href=&#34;#函数式风格-Functional-idioms&#34; class=&#34;headerlink&#34; title=&#34;函数式风格[Functional idioms]&#34;&gt;&lt;/a&gt;函数式风格&lt;code&gt;[Functional idioms]&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;Guava的函数式支持可以显著简化代码，但请谨慎使用它&lt;/p&gt;
&lt;h2 id=&#34;并发-Concurrency&#34;&gt;&lt;a href=&#34;#并发-Concurrency&#34; class=&#34;headerlink&#34; title=&#34;并发[Concurrency]&#34;&gt;&lt;/a&gt;并发&lt;code&gt;[Concurrency]&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;强大而简单的抽象，让编写正确的并发代码更简单&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ListenableFuture：完成后触发回调的Future&lt;/li&gt;
&lt;li&gt;Service框架：抽象可开启和关闭的服务，帮助你维护服务的状态逻辑&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;字符串处理-Strings&#34;&gt;&lt;a href=&#34;#字符串处理-Strings&#34; class=&#34;headerlink&#34; title=&#34;字符串处理[Strings]&#34;&gt;&lt;/a&gt;字符串处理&lt;code&gt;[Strings]&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;非常有用的字符串工具，包括分割、连接、填充等操作&lt;/p&gt;
&lt;h2 id=&#34;原生类型-Primitives&#34;&gt;&lt;a href=&#34;#原生类型-Primitives&#34; class=&#34;headerlink&#34; title=&#34;原生类型[Primitives]&#34;&gt;&lt;/a&gt;原生类型&lt;code&gt;[Primitives]&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;扩展 JDK 未提供的原生类型（如int、char）操作， 包括某些类型的无符号形式&lt;/p&gt;
&lt;h2 id=&#34;区间-Ranges&#34;&gt;&lt;a href=&#34;#区间-Ranges&#34; class=&#34;headerlink&#34; title=&#34;区间[Ranges]&#34;&gt;&lt;/a&gt;区间&lt;code&gt;[Ranges]&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;可比较类型的区间API，包括连续和离散类型&lt;/p&gt;
&lt;h2 id=&#34;I-x2F-O&#34;&gt;&lt;a href=&#34;#I-x2F-O&#34; class=&#34;headerlink&#34; title=&#34;I&amp;#x2F;O&#34;&gt;&lt;/a&gt;I&amp;#x2F;O&lt;/h2&gt;&lt;p&gt;简化I&amp;#x2F;O尤其是I&amp;#x2F;O流和文件的操作，针对Java5和6版本&lt;/p&gt;
&lt;h2 id=&#34;散列-Hash&#34;&gt;&lt;a href=&#34;#散列-Hash&#34; class=&#34;headerlink&#34; title=&#34;散列[Hash]&#34;&gt;&lt;/a&gt;散列&lt;code&gt;[Hash]&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;提供比Object.hashCode()更复杂的散列实现，并提供布鲁姆过滤器的实现&lt;/p&gt;
&lt;h2 id=&#34;事件总线-EventBus&#34;&gt;&lt;a href=&#34;#事件总线-EventBus&#34; class=&#34;headerlink&#34; title=&#34;事件总线[EventBus]&#34;&gt;&lt;/a&gt;事件总线&lt;code&gt;[EventBus]&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;发布-订阅模式的组件通信，但组件不需要显式地注册到其他组件中&lt;/p&gt;
&lt;h2 id=&#34;数学运算-Math&#34;&gt;&lt;a href=&#34;#数学运算-Math&#34; class=&#34;headerlink&#34; title=&#34;数学运算[Math]&#34;&gt;&lt;/a&gt;数学运算&lt;code&gt;[Math]&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;优化的、充分测试的数学工具类&lt;/p&gt;
&lt;h2 id=&#34;反射-Reflection&#34;&gt;&lt;a href=&#34;#反射-Reflection&#34; class=&#34;headerlink&#34; title=&#34;反射[Reflection]&#34;&gt;&lt;/a&gt;反射&lt;code&gt;[Reflection]&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;Guava 的 Java 反射机制工具类&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
