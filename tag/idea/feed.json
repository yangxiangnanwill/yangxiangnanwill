{
    "version": "https://jsonfeed.org/version/1",
    "title": "Will • All posts by \"idea\" tag",
    "description": "愿你一生努力，一生被爱",
    "home_page_url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io",
    "items": [
        {
            "id": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/%E5%B7%A5%E5%85%B7/IDEA-Stram%E8%B0%83%E8%AF%95/",
            "url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/%E5%B7%A5%E5%85%B7/IDEA-Stram%E8%B0%83%E8%AF%95/",
            "title": "IDEA-Stram调试",
            "date_published": "2024-01-03T13:13:21.664Z",
            "content_html": "<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><blockquote>\n<p>JAVA8的lambda的stream编程，给我们带来了很流畅(牛逼)的编程体验，但带来的问题也很明显：</p>\n<p>下面粘贴一张博猪一个日常的代码片段：</p>\n<p><img src=\"https://i.loli.net/2021/05/16/GMO19Rr65Uykbad.png\" alt=\"image-20210516222157802.png\"></p>\n</blockquote>\n<p>上面代码看着很简洁(zhaungbi)，但是带来的问题也很直接：</p>\n<ul>\n<li>方法可读性不好</li>\n<li>调试困难，无法知道流程周转</li>\n</ul>\n<p>下面博猪给大家介绍一个博猪日常写stream时常用的一个神器：&#x3D;&#x3D;Stream-Trance&#x3D;&#x3D;,一个IDEA自带的调试神器，这个工具可以详细看到每一步操作的关系、结果，非常方便进行调试。</p>\n<h1 id=\"Stream调试\"><a href=\"#Stream调试\" class=\"headerlink\" title=\"Stream调试\"></a>Stream调试</h1><p>下面通过一个Demo，让博猪给你演示一下神器是如何使用的。首先给大家贴一下没有注释的代码（很装逼的代码）。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">List&lt;Integer&gt; list = Arrays.asList(<span class=\"hljs-number\">45</span>,<span class=\"hljs-number\">56</span>,<span class=\"hljs-number\">23</span>,<span class=\"hljs-number\">89</span>,<span class=\"hljs-number\">34</span>,<span class=\"hljs-number\">78</span>,<span class=\"hljs-number\">56</span>);<br>Map&lt;Boolean, List&lt;Integer&gt;&gt; collect = list.stream()<br>        .filter(i -&gt; i * <span class=\"hljs-number\">2</span> &gt; <span class=\"hljs-number\">60</span>)<br>        .sorted()<br>        .map(i -&gt; i - <span class=\"hljs-number\">10</span>)<br>        .distinct()<br>        .collect(Collectors.groupingBy(i -&gt; i &gt;= <span class=\"hljs-number\">50</span>, Collectors.toList()));<br>System.out.println(collect);<br></code></pre></td></tr></table></figure>\n\n<p>下面博猪贴一下有注释的代码，顺便理一下这一块的代码的流程：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">//初始化数组</span><br>List&lt;Integer&gt; list = Arrays.asList(<span class=\"hljs-number\">45</span>, <span class=\"hljs-number\">56</span>, <span class=\"hljs-number\">23</span>, <span class=\"hljs-number\">89</span>, <span class=\"hljs-number\">34</span>, <span class=\"hljs-number\">78</span>, <span class=\"hljs-number\">56</span>);<br>Map&lt;Boolean, List&lt;Integer&gt;&gt; collect = list.stream()<br>        <span class=\"hljs-comment\">//过滤 当前数字*2后大于60的,结果：[45,56,89,34,78,56]</span><br>        .filter(i -&gt; i * <span class=\"hljs-number\">2</span> &gt; <span class=\"hljs-number\">60</span>)<br>        <span class=\"hljs-comment\">//默认排序,结果:[34,45,56,56,78,89]</span><br>        .sorted()<br>        <span class=\"hljs-comment\">//每个值-10，成一个map：结果：&#123;24,35,46,46,68,79&#125;</span><br>        .map(i -&gt; i - <span class=\"hljs-number\">10</span>)<br>        <span class=\"hljs-comment\">//去重,结果：&#123;24,35,46,68,79&#125;</span><br>        .distinct()<br>        <span class=\"hljs-comment\">//大于五十的分组，输出一个Map&lt;Boolean,Collection&gt;,结果：&#123;false=[24, 35, 46], true=[68, 79]&#125;</span><br>        .collect(Collectors.groupingBy(i -&gt; i &gt;= <span class=\"hljs-number\">50</span>, Collectors.toList()));<br>System.out.println(collect);<br></code></pre></td></tr></table></figure>\n\n<p>上面这段代码算是流程比较长的了，当然实际工作中可能遇到比这个还要复杂的，那博猪演示一下日常是怎么调试Stream流程的。</p>\n<ul>\n<li>在Stream那行打上断点。点击debug运行。</li>\n</ul>\n<p><img src=\"https://i.loli.net/2021/05/16/H9D6AIBzpVuUO1J.png\" alt=\"image-20210516224707120.png\"></p>\n<ul>\n<li>点击下方按钮</li>\n</ul>\n<p><img src=\"https://i.loli.net/2021/05/16/kCfM9RescBSY56T.png\" alt=\"image-20210516224817756.png\"></p>\n<ul>\n<li><p>然后自动进入当前 <code>Stream ​</code>跟踪调试窗口，默认Split 模式显示，上面会展示每个链式调用的选项卡，点击各个选项卡可以看对应每步的跟踪结果。如下面所示：</p>\n<ul>\n<li>初始流</li>\n</ul>\n<p><img src=\"https://i.loli.net/2021/05/16/irG98MsoLcwWK7j.png\" alt=\"image-20210516224947403.png\"></p>\n<ul>\n<li>过滤</li>\n</ul>\n<p><img src=\"https://i.loli.net/2021/05/16/pdXOtZ1eg3fEmCA.png\" alt=\"image-20210516225139631.png\"></p>\n<ul>\n<li>排序</li>\n</ul>\n<p><img src=\"https://i.loli.net/2021/05/16/KTpAJVIzayqiM7h.png\" alt=\"image-20210516225158100.png\"></p>\n<ul>\n<li>转map</li>\n</ul>\n<p><img src=\"https://i.loli.net/2021/05/16/uSknG6vzfbgQyEl.png\" alt=\"image-20210516225215527.png\"></p>\n<ul>\n<li>去重</li>\n</ul>\n<p><img src=\"https://i.loli.net/2021/05/16/sBdW1lf2NxVLUmg.png\" alt=\"image-20210516225230717.png\"></p>\n<ul>\n<li>结果</li>\n</ul>\n<p><img src=\"https://i.loli.net/2021/05/16/y6EzCFpfOjNmwo5.png\" alt=\"image-20210516225249902.png\"></p>\n</li>\n<li><p>还可以点击<code>Flat Mode</code>，查看完整的流程的运转</p>\n</li>\n</ul>\n<p><img src=\"https://i.loli.net/2021/05/16/dNqs9ZXwrbgi4De.png\" alt=\"image-20210516225407829.png\"></p>\n<h1 id=\"链式调试\"><a href=\"#链式调试\" class=\"headerlink\" title=\"链式调试\"></a>链式调试</h1><p>上方详细介绍了一下Stream的调试，但是平时也是使用一些Lambda的链式编程，那上述方法是否支持呢？</p>\n<p>比如下方代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">str</span> <span class=\"hljs-operator\">=</span> Optional.of(<span class=\"hljs-string\">&quot;will&quot;</span>)<br>        .map(s -&gt; s + <span class=\"hljs-string\">&quot; hello&quot;</span>)<br>        .map(s -&gt; s + <span class=\"hljs-string\">&quot; world!&quot;</span>).get();<br>System.out.println(str);<br></code></pre></td></tr></table></figure>\n\n<p>OK，我们按照上方进行调试，调试图如下方所示：</p>\n<p><img src=\"https://i.loli.net/2021/05/16/VKAsE5YGah8SIT2.png\" alt=\"image-20210516230237419.png\"></p>\n<p>可惜， <code>Trace Current Stream Chain ​</code>按钮是灰色状态，不能进入，因为那个按钮只能被 <code>Stream ​</code>调试所用。</p>\n<p><strong>那像这种非 Stream 链式调用怎么调试呢？</strong></p>\n<p>断点进入后，可以选中需要调试的部分链式代码片断，然后右键选中 <code>Evaluate Expression ​</code>菜单（ALT + F8）进入表达式计算窗口，点击 <code>Evaluate ​</code>按钮开始计算：</p>\n<p><img src=\"https://i.loli.net/2021/05/16/vNV6iIde2qsDzlC.png\" alt=\"image-20210516230402779.png\"></p>\n<p><img src=\"https://i.loli.net/2021/05/16/lqGKfRJrHC7XojM.png\" alt=\"image-20210516230429818.png\"></p>\n<p>计算无误，该表达式还可以自由编辑，非常强大。虽然没有像 <code>Stream ​</code>这样专属的调试面板，使用 <code>Evaluate Expression ​</code>也能达到调试链式调用的目的</p>\n",
            "tags": [
                "IDEA",
                "工具"
            ]
        },
        {
            "id": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/%E5%B7%A5%E5%85%B7/IDEA%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9B%AE%E5%BD%95/",
            "url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/%E5%B7%A5%E5%85%B7/IDEA%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9B%AE%E5%BD%95/",
            "title": "IDEA自定义目录",
            "date_published": "2024-01-03T13:13:21.664Z",
            "content_html": "<h1 id=\"自定义IntelliJ-IDEA配置和插件的存放目录\"><a href=\"#自定义IntelliJ-IDEA配置和插件的存放目录\" class=\"headerlink\" title=\"自定义IntelliJ IDEA配置和插件的存放目录\"></a>自定义IntelliJ IDEA配置和插件的存放目录</h1><blockquote>\n<p>因为个人电脑配置和个人习惯，不太习惯把配置相关的放到C盘，所以本次特地记录一下IDEA的配置和插件目录的自定义</p>\n</blockquote>\n<ul>\n<li>下载安装IDEA</li>\n<li>关闭IDEA</li>\n<li>进入IDEA的安装目录</li>\n</ul>\n<blockquote>\n<p>举个栗子：</p>\n<p>本人安装目录：<code>D:\\Program Files\\IntelliJ IDEA 2021.2.1\\bin\\</code></p>\n</blockquote>\n<ul>\n<li>打开<code>idea.properties</code>文件</li>\n<li>修改配置存储路径</li>\n</ul>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs properties\"><span class=\"hljs-comment\">#---------------------------------------------------------------------</span><br><span class=\"hljs-comment\"># Uncomment this option if you want to customize a path to the settings directory.</span><br><span class=\"hljs-comment\">#---------------------------------------------------------------------</span><br><span class=\"hljs-comment\"># idea.config.path=$&#123;user.home&#125;/.IntelliJIdea/config</span><br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<ul>\n<li>把上方注释的<code># idea.config.path=$&#123;user.home&#125;/.IntelliJIdea/config</code>复制一行</li>\n<li>放开注释</li>\n<li>更改成你自己配置的文件路径就行</li>\n</ul>\n<p>&#x3D;&#x3D;个人建议就是：按照原有配置方式，定义个全局的环境变量，后续只需配置环境变量即可&#x3D;&#x3D;</p>\n</blockquote>\n<ul>\n<li>修改插件配置路径</li>\n</ul>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs properties\"><span class=\"hljs-comment\">#---------------------------------------------------------------------</span><br><span class=\"hljs-comment\"># Uncomment this option if you want to customize a path to the caches directory.</span><br><span class=\"hljs-comment\">#---------------------------------------------------------------------</span><br><span class=\"hljs-comment\"># idea.system.path=$&#123;user.home&#125;/.IntelliJIdea/system</span><br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<ul>\n<li>把上方注释的<code># idea.system.path=$&#123;user.home&#125;/.IntelliJIdea/system</code>复制一行</li>\n<li>放开注释</li>\n<li>更改成你自己配置的文件路径就行</li>\n</ul>\n<p>&#x3D;&#x3D;个人建议就是：按照原有配置方式，定义个全局的环境变量，后续只需配置环境变量即可&#x3D;&#x3D;</p>\n</blockquote>\n<ul>\n<li>保存后，再次运行idea，所有配置和插件都将保存在指定的目录；</li>\n<li>后续再次重装系统或者重装idea只需要更改这个配置就行，相关配置还在，岂不美滋滋。</li>\n</ul>\n",
            "tags": [
                "IDEA",
                "工具"
            ]
        },
        {
            "id": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/%E5%B7%A5%E5%85%B7/IDEA%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD/",
            "url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/%E5%B7%A5%E5%85%B7/IDEA%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD/",
            "title": "IDEA常用功能",
            "date_published": "2024-01-03T13:13:21.664Z",
            "content_html": "<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><blockquote>\n<p>记录一下我IDEA常用配置，便于安装配置。</p>\n<p>快捷键摘自：<a href=\"https://blog.csdn.net/qq_38963960\">D离歌</a></p>\n</blockquote>\n<h1 id=\"常用配置\"><a href=\"#常用配置\" class=\"headerlink\" title=\"常用配置\"></a>常用配置</h1><h2 id=\"设置字体样式及大小\"><a href=\"#设置字体样式及大小\" class=\"headerlink\" title=\"设置字体样式及大小\"></a>设置字体样式及大小</h2><ul>\n<li><code>CTRL+ALT+S</code>进入设置</li>\n<li>Font</li>\n</ul>\n<blockquote>\n<p>个人常用字体：Font:<code>Courier New</code>,Size”:<code>15</code>,Line spacing:<code>1.2</code>,Fallback Font:<code>Consolas</code></p>\n</blockquote>\n<h2 id=\"取消打开项目默认配置\"><a href=\"#取消打开项目默认配置\" class=\"headerlink\" title=\"取消打开项目默认配置\"></a>取消打开项目默认配置</h2><ul>\n<li><code>CTRL+ALT+S</code>进入设置</li>\n<li>System Settings</li>\n<li>取消<code>Reopen last project on startup</code></li>\n</ul>\n<h2 id=\"鼠标更改窗口字体大小\"><a href=\"#鼠标更改窗口字体大小\" class=\"headerlink\" title=\"鼠标更改窗口字体大小\"></a>鼠标更改窗口字体大小</h2><ul>\n<li><code>CTRL+ALT+S</code>进入设置</li>\n<li><code>Editor</code></li>\n<li><code>General</code></li>\n<li>取消<code>Reopen last project on startup</code></li>\n</ul>\n<h2 id=\"方法线\"><a href=\"#方法线\" class=\"headerlink\" title=\"方法线\"></a>方法线</h2><ul>\n<li><code>CTRL+ALT+S</code>进入设置</li>\n<li><code>Editor</code></li>\n<li><code>Apperance</code></li>\n<li>勾选<code>Show method separators</code></li>\n</ul>\n<h2 id=\"提示不区分大小写\"><a href=\"#提示不区分大小写\" class=\"headerlink\" title=\"提示不区分大小写\"></a>提示不区分大小写</h2><ul>\n<li><code>CTRL+ALT+S</code>进入设置</li>\n<li><code>Editor</code></li>\n<li><code>Code Completion</code></li>\n<li>取消勾选<code>Match case</code></li>\n</ul>\n<h2 id=\"自动导入\"><a href=\"#自动导入\" class=\"headerlink\" title=\"自动导入\"></a>自动导入</h2><ul>\n<li><code>CTRL+ALT+S</code>进入设置</li>\n<li><code>Editor</code></li>\n<li><code>General</code></li>\n<li><code>Auto Import</code></li>\n<li>勾选<code>Add unambiguous imports on the fly</code></li>\n<li>勾选<code>Optimize imports on the fly (for current project)</code></li>\n</ul>\n<h2 id=\"编码\"><a href=\"#编码\" class=\"headerlink\" title=\"编码\"></a>编码</h2><ul>\n<li><code>CTRL+ALT+S</code>进入设置</li>\n<li><code>Editor</code></li>\n<li><code>File Encodings</code></li>\n<li>相关编码设置成<code>UTF-8</code></li>\n<li><code>BOM for new UTF-8 files</code>选择<code>Create UTF-8 files:</code>中的<code>with NO BOM</code></li>\n</ul>\n<h1 id=\"常用插件\"><a href=\"#常用插件\" class=\"headerlink\" title=\"常用插件\"></a>常用插件</h1><ul>\n<li>.ignore\t\t\t\t\t\t\t\t\t\t\t\t<code>（Git 忽略文件)</code></li>\n<li>Alibaba Java Coding Guidelines     <code>（阿里编码规范代码检查）</code></li>\n<li>Free MyBatis plugin                         <code>（Mybatis/Mybatis Plus 快速dao到xml工具）</code></li>\n<li>GitToolBox                                         <code>Git工具箱</code></li>\n<li>Lombok                                              <code>小辣椒工具</code></li>\n<li>Protocol Buffer Editor                     <code>Protocol Buffer 工具</code></li>\n<li>sequenceDiagram                           <code>Java方法调用时序图</code></li>\n<li>Translation                                        <code>谷歌翻译工具</code></li>\n</ul>\n<h1 id=\"常用快捷键\"><a href=\"#常用快捷键\" class=\"headerlink\" title=\"常用快捷键\"></a>常用快捷键</h1><blockquote>\n<p>对于快捷键我推荐使用默认用IDEA默认的快捷键</p>\n</blockquote>\n<h2 id=\"Ctrl\"><a href=\"#Ctrl\" class=\"headerlink\" title=\"Ctrl\"></a>Ctrl</h2><table>\n<thead>\n<tr>\n<th align=\"left\">快捷键</th>\n<th align=\"left\">介绍</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Ctrl + F</td>\n<td align=\"left\">在当前文件进行文本查找 <code>（必备）</code></td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + R</td>\n<td align=\"left\">在当前文件进行文本替换 <code>（必备）</code></td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Z</td>\n<td align=\"left\">撤销 <code>（必备）</code></td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Y</td>\n<td align=\"left\">删除光标所在行 或 删除选中的行 <code>（必备）</code></td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + X</td>\n<td align=\"left\">剪切光标所在行 或 剪切选择内容<code>（必备）</code></td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + C</td>\n<td align=\"left\">复制光标所在行 或 复制选择内容</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + D</td>\n<td align=\"left\">复制光标所在行 或 复制选择内容，并把复制内容插入光标位置下面 <code>（必备）</code></td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + W</td>\n<td align=\"left\">递进式选择代码块。可选中光标所在的单词或段落，连续按会在原有选中的基础上再扩展选中范围 <code>（必备）</code></td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + E</td>\n<td align=\"left\">显示最近打开的文件记录列表</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + N</td>\n<td align=\"left\">根据输入的 <strong>类名</strong> 查找类文件</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + G</td>\n<td align=\"left\">在当前文件跳转到指定行处</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + J</td>\n<td align=\"left\">插入自定义动态代码模板</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + P</td>\n<td align=\"left\">方法参数提示显示</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Q</td>\n<td align=\"left\">光标所在的变量 &#x2F; 类名 &#x2F; 方法名等上面（也可以在提示补充的时候按），显示文档内容</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + U</td>\n<td align=\"left\">前往当前光标所在的方法的父类的方法 &#x2F; 接口定义</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + B</td>\n<td align=\"left\">进入光标所在的方法&#x2F;变量的接口或是定义出，等效于 <code>Ctrl + 左键单击</code></td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + K</td>\n<td align=\"left\">版本控制提交项目，需要此项目有加入到版本控制才可用</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + T</td>\n<td align=\"left\">版本控制更新项目，需要此项目有加入到版本控制才可用</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + H</td>\n<td align=\"left\">显示当前类的层次结构</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + O</td>\n<td align=\"left\">选择可重写的方法</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + I</td>\n<td align=\"left\">选择可继承的方法</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + +</td>\n<td align=\"left\">展开代码</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + -</td>\n<td align=\"left\">折叠代码</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + &#x2F;</td>\n<td align=\"left\">注释光标所在行代码，会根据当前不同文件类型使用不同的注释符号 <code>（必备）</code></td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + [</td>\n<td align=\"left\">移动光标到当前所在代码的花括号开始位置</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + ]</td>\n<td align=\"left\">移动光标到当前所在代码的花括号结束位置</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + F1</td>\n<td align=\"left\">在光标所在的错误代码出显示错误信息</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + F3</td>\n<td align=\"left\">调转到所选中的词的下一个引用位置</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + F4</td>\n<td align=\"left\">关闭当前编辑文件</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + F8</td>\n<td align=\"left\">在 Debug 模式下，设置光标当前行为断点，如果当前已经是断点则去掉断点</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + F9</td>\n<td align=\"left\">执行 Make Project 操作</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + F11</td>\n<td align=\"left\">选中文件 &#x2F; 文件夹，使用助记符设定 &#x2F; 取消书签</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + F12</td>\n<td align=\"left\">弹出当前文件结构层，可以在弹出的层上直接输入，进行筛选</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Tab</td>\n<td align=\"left\">编辑窗口切换，如果在切换的过程又加按上delete，则是关闭对应选中的窗口</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Enter</td>\n<td align=\"left\">智能分隔行</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + End</td>\n<td align=\"left\">跳到文件尾</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Home</td>\n<td align=\"left\">跳到文件头</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Space</td>\n<td align=\"left\">基础代码补全，默认在 Windows 系统上被输入法占用，需要进行修改，建议修改为 <code>Ctrl + 逗号</code> <code>（必备）</code></td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Delete</td>\n<td align=\"left\">删除光标后面的单词或是中文句</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + BackSpace</td>\n<td align=\"left\">删除光标前面的单词或是中文句</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + 1,2,3…9</td>\n<td align=\"left\">定位到对应数值的书签位置</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + 左键单击</td>\n<td align=\"left\">在打开的文件标题上，弹出该文件路径</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + 光标定位</td>\n<td align=\"left\">按 Ctrl 不要松开，会显示光标所在的类信息摘要</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + 左方向键</td>\n<td align=\"left\">光标跳转到当前单词 &#x2F; 中文句的左侧开头位置</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + 右方向键</td>\n<td align=\"left\">光标跳转到当前单词 &#x2F; 中文句的右侧开头位置</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + 前方向键</td>\n<td align=\"left\">等效于鼠标滚轮向前效果</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + 后方向键</td>\n<td align=\"left\">等效于鼠标滚轮向后效果</td>\n</tr>\n</tbody></table>\n<h2 id=\"Alt\"><a href=\"#Alt\" class=\"headerlink\" title=\"Alt\"></a>Alt</h2><table>\n<thead>\n<tr>\n<th align=\"left\">快捷键</th>\n<th align=\"left\">介绍</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Alt + &#96;</td>\n<td align=\"left\">显示版本控制常用操作菜单弹出层</td>\n</tr>\n<tr>\n<td align=\"left\">Alt + Q</td>\n<td align=\"left\">弹出一个提示，显示当前类的声明 &#x2F; 上下文信息</td>\n</tr>\n<tr>\n<td align=\"left\">Alt + F1</td>\n<td align=\"left\">显示当前文件选择目标弹出层，弹出层中有很多目标可以进行选择</td>\n</tr>\n<tr>\n<td align=\"left\">Alt + F2</td>\n<td align=\"left\">对于前面页面，显示各类浏览器打开目标选择弹出层</td>\n</tr>\n<tr>\n<td align=\"left\">Alt + F3</td>\n<td align=\"left\">选中文本，逐个往下查找相同文本，并高亮显示</td>\n</tr>\n<tr>\n<td align=\"left\">Alt + F7</td>\n<td align=\"left\">查找光标所在的方法 &#x2F; 变量 &#x2F; 类被调用的地方</td>\n</tr>\n<tr>\n<td align=\"left\">Alt + F8</td>\n<td align=\"left\">在 Debug 的状态下，选中对象，弹出可输入计算表达式调试框，查看该输入内容的调试结果</td>\n</tr>\n<tr>\n<td align=\"left\">Alt + Home</td>\n<td align=\"left\">定位 &#x2F; 显示到当前文件的 <code>Navigation Bar</code></td>\n</tr>\n<tr>\n<td align=\"left\">Alt + Enter</td>\n<td align=\"left\">IntelliJ IDEA 根据光标所在问题，提供快速修复选择，光标放在的位置不同提示的结果也不同 <code>（必备）</code></td>\n</tr>\n<tr>\n<td align=\"left\">Alt + Insert</td>\n<td align=\"left\">代码自动生成，如生成对象的 set &#x2F; get 方法，构造函数，toString() 等</td>\n</tr>\n<tr>\n<td align=\"left\">Alt + 左方向键</td>\n<td align=\"left\">按左方向切换当前已打开的文件视图</td>\n</tr>\n<tr>\n<td align=\"left\">Alt + 右方向键</td>\n<td align=\"left\">按右方向切换当前已打开的文件视图</td>\n</tr>\n<tr>\n<td align=\"left\">Alt + 前方向键</td>\n<td align=\"left\">当前光标跳转到当前文件的前一个方法名位置</td>\n</tr>\n<tr>\n<td align=\"left\">Alt + 后方向键</td>\n<td align=\"left\">当前光标跳转到当前文件的后一个方法名位置</td>\n</tr>\n<tr>\n<td align=\"left\">Alt + 1,2,3…9</td>\n<td align=\"left\">显示对应数值的选项卡，其中 1 是 Project 用得最多</td>\n</tr>\n</tbody></table>\n<h2 id=\"Shift\"><a href=\"#Shift\" class=\"headerlink\" title=\"Shift\"></a>Shift</h2><table>\n<thead>\n<tr>\n<th align=\"left\">快捷键</th>\n<th align=\"left\">介绍</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Shift + F1</td>\n<td align=\"left\">如果有外部文档可以连接外部文档</td>\n</tr>\n<tr>\n<td align=\"left\">Shift + F2</td>\n<td align=\"left\">跳转到上一个高亮错误 或 警告位置</td>\n</tr>\n<tr>\n<td align=\"left\">Shift + F3</td>\n<td align=\"left\">在查找模式下，查找匹配上一个</td>\n</tr>\n<tr>\n<td align=\"left\">Shift + F4</td>\n<td align=\"left\">对当前打开的文件，使用新Windows窗口打开，旧窗口保留</td>\n</tr>\n<tr>\n<td align=\"left\">Shift + F6</td>\n<td align=\"left\">对文件 &#x2F; 文件夹 重命名</td>\n</tr>\n<tr>\n<td align=\"left\">Shift + F7</td>\n<td align=\"left\">在 Debug 模式下，智能步入。断点所在行上有多个方法调用，会弹出进入哪个方法</td>\n</tr>\n<tr>\n<td align=\"left\">Shift + F8</td>\n<td align=\"left\">在 Debug 模式下，跳出，表现出来的效果跟 <code>F9</code> 一样</td>\n</tr>\n<tr>\n<td align=\"left\">Shift + F9</td>\n<td align=\"left\">等效于点击工具栏的 <code>Debug</code> 按钮</td>\n</tr>\n<tr>\n<td align=\"left\">Shift + F10</td>\n<td align=\"left\">等效于点击工具栏的 <code>Run</code> 按钮</td>\n</tr>\n<tr>\n<td align=\"left\">Shift + F11</td>\n<td align=\"left\">弹出书签显示层</td>\n</tr>\n<tr>\n<td align=\"left\">Shift + Tab</td>\n<td align=\"left\">取消缩进</td>\n</tr>\n<tr>\n<td align=\"left\">Shift + ESC</td>\n<td align=\"left\">隐藏当前 或 最后一个激活的工具窗口</td>\n</tr>\n<tr>\n<td align=\"left\">Shift + End</td>\n<td align=\"left\">选中光标到当前行尾位置</td>\n</tr>\n<tr>\n<td align=\"left\">Shift + Home</td>\n<td align=\"left\">选中光标到当前行头位置</td>\n</tr>\n<tr>\n<td align=\"left\">Shift + Enter</td>\n<td align=\"left\">开始新一行。光标所在行下空出一行，光标定位到新行位置</td>\n</tr>\n<tr>\n<td align=\"left\">Shift + 左键单击</td>\n<td align=\"left\">在打开的文件名上按此快捷键，可以关闭当前打开文件</td>\n</tr>\n<tr>\n<td align=\"left\">Shift + 滚轮前后滚动</td>\n<td align=\"left\">当前文件的横向滚动轴滚动</td>\n</tr>\n</tbody></table>\n<h2 id=\"Ctrl-Alt\"><a href=\"#Ctrl-Alt\" class=\"headerlink\" title=\"Ctrl + Alt\"></a>Ctrl + Alt</h2><table>\n<thead>\n<tr>\n<th align=\"left\">快捷键</th>\n<th align=\"left\">介绍</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Ctrl + Alt + L</td>\n<td align=\"left\">格式化代码，可以对当前文件和整个包目录使用 <code>（必备）</code></td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Alt + O</td>\n<td align=\"left\">优化导入的类，可以对当前文件和整个包目录使用 <code>（必备）</code></td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Alt + I</td>\n<td align=\"left\">光标所在行 或 选中部分进行自动代码缩进，有点类似格式化</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Alt + T</td>\n<td align=\"left\">对选中的代码弹出环绕选项弹出层</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Alt + J</td>\n<td align=\"left\">弹出模板选择窗口，讲选定的代码加入动态模板中</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Alt + H</td>\n<td align=\"left\">调用层次</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Alt + B</td>\n<td align=\"left\">在某个调用的方法名上使用会跳到具体的实现处，可以跳过接口</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Alt + V</td>\n<td align=\"left\">快速引进变量</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Alt + Y</td>\n<td align=\"left\">同步、刷新</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Alt + S</td>\n<td align=\"left\">打开 IntelliJ IDEA 系统设置</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Alt + F7</td>\n<td align=\"left\">显示使用的地方。寻找被该类或是变量被调用的地方，用弹出框的方式找出来</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Alt + F11</td>\n<td align=\"left\">切换全屏模式</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Alt + Enter</td>\n<td align=\"left\">光标所在行上空出一行，光标定位到新行</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Alt + Home</td>\n<td align=\"left\">弹出跟当前文件有关联的文件弹出层</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Alt + Space</td>\n<td align=\"left\">类名自动完成</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Alt + 左方向键</td>\n<td align=\"left\">退回到上一个操作的地方 <code>（必备）**（注意与其他软件快捷键冲突）**</code></td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Alt + 右方向键</td>\n<td align=\"left\">前进到上一个操作的地方 <code>（必备）**（注意与其他软件快捷键冲突）**</code></td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Alt + 前方向键</td>\n<td align=\"left\">在查找模式下，跳到上个查找的文件</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Alt + 后方向键</td>\n<td align=\"left\">在查找模式下，跳到下个查找的文件</td>\n</tr>\n</tbody></table>\n<h2 id=\"Ctrl-Shift\"><a href=\"#Ctrl-Shift\" class=\"headerlink\" title=\"Ctrl + Shift\"></a>Ctrl + Shift</h2><table>\n<thead>\n<tr>\n<th align=\"left\">快捷键</th>\n<th align=\"left\">介绍</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Ctrl + Shift + F</td>\n<td align=\"left\">根据输入内容查找整个项目 或 指定目录内文件 <code>（必备）</code></td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + R</td>\n<td align=\"left\">根据输入内容替换对应内容，范围为整个项目 或 指定目录内文件 <code>（必备）</code></td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + J</td>\n<td align=\"left\">自动将下一行合并到当前行末尾 <code>（必备）</code></td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + Z</td>\n<td align=\"left\">取消撤销 <code>（必备）</code></td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + W</td>\n<td align=\"left\">递进式取消选择代码块。可选中光标所在的单词或段落，连续按会在原有选中的基础上再扩展取消选中范围 <code>（必备）</code></td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + N</td>\n<td align=\"left\">通过文件名定位 &#x2F; 打开文件 &#x2F; 目录，打开目录需要在输入的内容后面多加一个正斜杠 <code>（必备）</code></td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + U</td>\n<td align=\"left\">对选中的代码进行大 &#x2F; 小写轮流转换 <code>（必备）</code></td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + T</td>\n<td align=\"left\">对当前类生成单元测试类，如果已经存在的单元测试类则可以进行选择</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + C</td>\n<td align=\"left\">复制当前文件磁盘路径到剪贴板</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + V</td>\n<td align=\"left\">弹出缓存的最近拷贝的内容管理器弹出层</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + E</td>\n<td align=\"left\">显示最近修改的文件列表的弹出层</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + H</td>\n<td align=\"left\">显示方法层次结构</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + B</td>\n<td align=\"left\">跳转到类型声明处</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + I</td>\n<td align=\"left\">快速查看光标所在的方法 或 类的定义</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + A</td>\n<td align=\"left\">查找动作 &#x2F; 设置</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + &#x2F;</td>\n<td align=\"left\">代码块注释 <code>（必备）</code></td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + [</td>\n<td align=\"left\">选中从光标所在位置到它的顶部中括号位置</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + ]</td>\n<td align=\"left\">选中从光标所在位置到它的底部中括号位置</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + +</td>\n<td align=\"left\">展开所有代码</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + -</td>\n<td align=\"left\">折叠所有代码</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + F7</td>\n<td align=\"left\">高亮显示所有该选中文本，按Esc高亮消失</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + F8</td>\n<td align=\"left\">在 Debug 模式下，指定断点进入条件</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + F9</td>\n<td align=\"left\">编译选中的文件 &#x2F; 包 &#x2F; Module</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + F12</td>\n<td align=\"left\">编辑器最大化</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + Space</td>\n<td align=\"left\">智能代码提示</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + Enter</td>\n<td align=\"left\">自动结束代码，行末自动添加分号 <code>（必备）</code></td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + Backspace</td>\n<td align=\"left\">退回到上次修改的地方</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + 1,2,3…9</td>\n<td align=\"left\">快速添加指定数值的书签</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + 左方向键</td>\n<td align=\"left\">在代码文件上，光标跳转到当前单词 &#x2F; 中文句的左侧开头位置，同时选中该单词 &#x2F; 中文句</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + 右方向键</td>\n<td align=\"left\">在代码文件上，光标跳转到当前单词 &#x2F; 中文句的右侧开头位置，同时选中该单词 &#x2F; 中文句</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + 左方向键</td>\n<td align=\"left\">在光标焦点是在工具选项卡上，缩小选项卡区域</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + 右方向键</td>\n<td align=\"left\">在光标焦点是在工具选项卡上，扩大选项卡区域</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + 前方向键</td>\n<td align=\"left\">光标放在方法名上，将方法移动到上一个方法前面，调整方法排序</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + 后方向键</td>\n<td align=\"left\">光标放在方法名上，将方法移动到下一个方法前面，调整方法排序</td>\n</tr>\n</tbody></table>\n<h2 id=\"Alt-Shift\"><a href=\"#Alt-Shift\" class=\"headerlink\" title=\"Alt + Shift\"></a>Alt + Shift</h2><table>\n<thead>\n<tr>\n<th align=\"left\">快捷键</th>\n<th align=\"left\">介绍</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Alt + Shift + N</td>\n<td align=\"left\">选择 &#x2F; 添加 task</td>\n</tr>\n<tr>\n<td align=\"left\">Alt + Shift + F</td>\n<td align=\"left\">显示添加到收藏夹弹出层</td>\n</tr>\n<tr>\n<td align=\"left\">Alt + Shift + C</td>\n<td align=\"left\">查看最近操作项目的变化情况列表</td>\n</tr>\n<tr>\n<td align=\"left\">Alt + Shift + F</td>\n<td align=\"left\">添加到收藏夹</td>\n</tr>\n<tr>\n<td align=\"left\">Alt + Shift + I</td>\n<td align=\"left\">查看项目当前文件</td>\n</tr>\n<tr>\n<td align=\"left\">Alt + Shift + F7</td>\n<td align=\"left\">在 Debug 模式下，下一步，进入当前方法体内，如果方法体还有方法，则会进入该内嵌的方法中，依此循环进入</td>\n</tr>\n<tr>\n<td align=\"left\">Alt + Shift + F9</td>\n<td align=\"left\">弹出 <code>Debug</code> 的可选择菜单</td>\n</tr>\n<tr>\n<td align=\"left\">Alt + Shift + F10</td>\n<td align=\"left\">弹出 <code>Run</code> 的可选择菜单</td>\n</tr>\n<tr>\n<td align=\"left\">Alt + Shift + 左键双击</td>\n<td align=\"left\">选择被双击的单词 &#x2F; 中文句，按住不放，可以同时选择其他单词 &#x2F; 中文句</td>\n</tr>\n<tr>\n<td align=\"left\">Alt + Shift + 前方向键</td>\n<td align=\"left\">移动光标所在行向上移动</td>\n</tr>\n<tr>\n<td align=\"left\">Alt + Shift + 后方向键</td>\n<td align=\"left\">移动光标所在行向下移动</td>\n</tr>\n</tbody></table>\n<h2 id=\"Ctrl-Shift-Alt\"><a href=\"#Ctrl-Shift-Alt\" class=\"headerlink\" title=\"Ctrl + Shift + Alt\"></a>Ctrl + Shift + Alt</h2><table>\n<thead>\n<tr>\n<th align=\"left\">快捷键</th>\n<th align=\"left\">介绍</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Ctrl + Shift + Alt + V</td>\n<td align=\"left\">无格式黏贴</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + Alt + N</td>\n<td align=\"left\">前往指定的变量 &#x2F; 方法</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + Alt + S</td>\n<td align=\"left\">打开当前项目设置</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl + Shift + Alt + C</td>\n<td align=\"left\">复制参考信息</td>\n</tr>\n</tbody></table>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><table>\n<thead>\n<tr>\n<th align=\"left\">快捷键</th>\n<th align=\"left\">介绍</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">F2</td>\n<td align=\"left\">跳转到下一个高亮错误 或 警告位置 <code>（必备）</code></td>\n</tr>\n<tr>\n<td align=\"left\">F3</td>\n<td align=\"left\">在查找模式下，定位到下一个匹配处</td>\n</tr>\n<tr>\n<td align=\"left\">F4</td>\n<td align=\"left\">编辑源</td>\n</tr>\n<tr>\n<td align=\"left\">F7</td>\n<td align=\"left\">在 Debug 模式下，进入下一步，如果当前行断点是一个方法，则进入当前方法体内，如果该方法体还有方法，则不会进入该内嵌的方法中</td>\n</tr>\n<tr>\n<td align=\"left\">F8</td>\n<td align=\"left\">在 Debug 模式下，进入下一步，如果当前行断点是一个方法，则不进入当前方法体内</td>\n</tr>\n<tr>\n<td align=\"left\">F9</td>\n<td align=\"left\">在 Debug 模式下，恢复程序运行，但是如果该断点下面代码还有断点则停在下一个断点上</td>\n</tr>\n<tr>\n<td align=\"left\">F11</td>\n<td align=\"left\">添加书签</td>\n</tr>\n<tr>\n<td align=\"left\">F12</td>\n<td align=\"left\">回到前一个工具窗口</td>\n</tr>\n<tr>\n<td align=\"left\">Tab</td>\n<td align=\"left\">缩进</td>\n</tr>\n<tr>\n<td align=\"left\">ESC</td>\n<td align=\"left\">从工具窗口进入代码文件窗口</td>\n</tr>\n<tr>\n<td align=\"left\">连按两次Shift</td>\n<td align=\"left\">弹出 <code>Search Everywhere</code> 弹出层</td>\n</tr>\n</tbody></table>\n",
            "tags": [
                "IDEA",
                "工具"
            ]
        },
        {
            "id": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/%E5%B7%A5%E5%85%B7/Alibaba-Cloud-Toolkit/",
            "url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/%E5%B7%A5%E5%85%B7/Alibaba-Cloud-Toolkit/",
            "title": "Alibaba Cloud Toolkit",
            "date_published": "2024-01-03T13:13:21.663Z",
            "content_html": "<hr>\n<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><ul>\n<li>Alibaba Cloud Toolkit（后文简称Cloud Toolkit）可以帮助开发者更高效地<strong>部署、测试、开发和诊断应用</strong>。</li>\n<li>Cloud Toolkit与主流IDE(IDEA, Eclipse等)及阿里云其他产品<strong>无缝集成</strong>，帮助您简化应用部署到服务器。</li>\n<li>您还可以通过其内嵌的Arthas程序诊断、Terminal Shell终端和MySQL执行器等工具，简化应用开发、测试和诊断的过程。</li>\n</ul>\n<blockquote>\n<p>缘由：由于博猪最近开发新项目，牵扯到各系统的更改，再加上本次更改牵扯到基础架构相关的表结构，慎重起见，博猪迁移了一套内网环境，方便开发联调测试。</p>\n<p>本文章基于<a href=\"https://help.aliyun.com/product/29966.html\">Alibaba Cloud Toolkit官方使用教程整理</a></p>\n</blockquote>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><ol>\n<li>在IntelliJ IDEA顶部菜单栏中选择File &gt; Settings。</li>\n<li>在Settings对话框的左侧导航栏中单击Plugins。</li>\n<li>在Plugins区域单击Marketplace。</li>\n<li>在搜索栏中输入<code>Alibaba Cloud Toolkit</code>。</li>\n<li>等待下载、安装完成后，单击Restart IDE。</li>\n</ol>\n<blockquote>\n<p>基于其他方式安装Cloud Toolkit如下:</p>\n<ul>\n<li><a href=\"https://help.aliyun.com/document_detail/29970.html?spm=a2c4g.11186623.6.551.3e2266fa2nf2fD\">基于Eclipse安装Cloud Toolkit</a></li>\n<li><a href=\"https://help.aliyun.com/document_detail/154213.html?spm=a2c4g.11186623.6.552.15772d6duW8x64\">基于Visual Studio Code安装Cloud Toolkit</a></li>\n<li><a href=\"https://help.aliyun.com/document_detail/112740.html?spm=a2c4g.11186623.6.553.73803da4coYWsV\">基于PyCharm安装Cloud Toolkit</a></li>\n</ul>\n</blockquote>\n<blockquote>\n<p>注意：</p>\n<p>如果服务器是Windows, 需要我们安装OpenSSL, 安装步骤可参考<a href=\"https://www.cnblogs.com/xijun-gu/p/16476708.html\">Windows上安装配置SSH</a></p>\n</blockquote>\n<h1 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h1><h2 id=\"Alibaba-Cloud-Toolkit-部署到本地服务器\"><a href=\"#Alibaba-Cloud-Toolkit-部署到本地服务器\" class=\"headerlink\" title=\"Alibaba Cloud Toolkit 部署到本地服务器\"></a>Alibaba Cloud Toolkit 部署到本地服务器</h2><h3 id=\"选择部署服务器类别，本文主要演示部署内网服务器，所以选择第一选项\"><a href=\"#选择部署服务器类别，本文主要演示部署内网服务器，所以选择第一选项\" class=\"headerlink\" title=\"选择部署服务器类别，本文主要演示部署内网服务器，所以选择第一选项\"></a>选择部署服务器类别，本文主要演示部署内网服务器，所以选择第一选项</h3><p><img src=\"http://tva1.sinaimg.cn/large/0086NgqGly1h4uhpvqyznj30ga0a478t.jpg\" alt=\"image.png\"></p>\n<h3 id=\"添加内网服务器配置\"><a href=\"#添加内网服务器配置\" class=\"headerlink\" title=\"添加内网服务器配置\"></a>添加内网服务器配置</h3><p><img src=\"http://tva1.sinaimg.cn/large/0086NgqGly1h4uhsk8pelj30hm0fjjtz.jpg\" alt=\"image.png\"></p>\n<p><img src=\"http://tva1.sinaimg.cn/large/0086NgqGly1h4uhuo3z8zj30hm0fj773.jpg\" alt=\"image.png\"></p>\n<p><img src=\"http://tva1.sinaimg.cn/large/0086NgqGly1h4uhzs55mhj30k40f6n31.jpg\" alt=\"image.png\"></p>\n<h3 id=\"部署项目\"><a href=\"#部署项目\" class=\"headerlink\" title=\"部署项目\"></a>部署项目</h3><h4 id=\"项目增加配置\"><a href=\"#项目增加配置\" class=\"headerlink\" title=\"项目增加配置\"></a>项目增加配置</h4><p><img src=\"http://tva1.sinaimg.cn/large/0086NgqGly1h4uj1glancj30f306qgnr.jpg\" alt=\"image.png\"></p>\n<p><img src=\"http://tva1.sinaimg.cn/large/0086NgqGly1h4uj2ewr7mj308m0eu0wb.jpg\" alt=\"image.png\"></p>\n<p><img src=\"http://tva1.sinaimg.cn/large/0086NgqGly1h4ujbbe946j30t00jg7b4.jpg\" alt=\"image.png\"></p>\n<blockquote>\n<p>注意SpringCloud项目，Maven多模块打包需要单独配置打包项目。</p>\n<p><img src=\"http://tva1.sinaimg.cn/large/0086NgqGly1h4ujdpclfoj30kj0b2ad9.jpg\" alt=\"image.png\"></p>\n<p><img src=\"http://tva1.sinaimg.cn/large/0086NgqGly1h4ujep6ew7j30q105dgns.jpg\" alt=\"image.png\"></p>\n<p><img src=\"http://tva1.sinaimg.cn/large/0086NgqGly1h4ujfv4nhij30m704jjsl.jpg\" alt=\"image.png\"></p>\n<p>例如博猪本项目最终配置如下：</p>\n<p><img src=\"http://tva1.sinaimg.cn/large/0086NgqGly1h4ujgt79zzj30t00jggqf.jpg\" alt=\"image.png\"></p>\n</blockquote>\n<h4 id=\"部署脚本\"><a href=\"#部署脚本\" class=\"headerlink\" title=\"部署脚本\"></a>部署脚本</h4><blockquote>\n<p>博猪提供一个博猪常用的docker部署脚本。</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">配置镜像名称s</span><br>img=cloud-tool-test<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">配置镜像标签(版本)</span><br>tag=v1.0.0<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">配置容器名称</span><br>container=cloud-tool-test<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">判断容器是否存在，存在则删除。</span><br>if sudo docker ps -a --filter name=^/$container$ | grep -i &quot;$container&quot;; then<br>  echo &quot;容器: $container 存在，删除容器.&quot;<br>  sudo docker stop &quot;$container&quot;<br>  sudo docker rm -f &quot;$container&quot;<br>else<br>  echo &quot;容器: $container 不存在&quot; <br>fi<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">判断镜像是否存在，如存在则删除</span><br>if sudo docker images --filter=reference=&quot;$img:$tag&quot; | grep -i &quot;$img&quot;; then<br>  echo &quot;镜像: $img:$tag 镜像存在, 删除镜像重新构建.&quot;<br>  sudo docker rmi $img:$tag<br>fi<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">构建新镜像</span><br>echo &quot;构建镜像....................&quot;<br>sudo docker build -t $img:$tag .<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">启动服务，挂载外部数据信息</span><br>echo &quot;启动容器服务!&quot;<br>sudo docker run -d -p 8888:8080 --net=host --restart=always --name $container $img:$tag<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">检测服务是否启动成功</span><br>if sudo docker ps --filter name=^/$container$ | grep -i &quot;up&quot;; then<br>    echo &quot;服务启动成功....................&quot;<br>else<br>    echo &quot;服务启动失败....................&quot;<br>fi<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"部署-1\"><a href=\"#部署-1\" class=\"headerlink\" title=\"部署\"></a>部署</h4><p>选中服务器配置运行即可。</p>\n<p><img src=\"http://tva1.sinaimg.cn/large/0086NgqGly1h4ujo9olblj309w01n3ym.jpg\" alt=\"image.png\"></p>\n",
            "tags": [
                "LINUX",
                "IDEA",
                "Alibaba Cloud Toolkit"
            ]
        }
    ]
}