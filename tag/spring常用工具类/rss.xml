<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Will • Posts by &#34;spring常用工具类&#34; tag</title>
        <link>https://github.com/yangxiangnanwill/yangxiangnanwill.github.io</link>
        <description>愿你一生努力，一生被爱</description>
        <language>zh-CN</language>
        <pubDate>Wed, 03 Jan 2024 21:13:21 +0800</pubDate>
        <lastBuildDate>Wed, 03 Jan 2024 21:13:21 +0800</lastBuildDate>
        <category>开发习惯</category>
        <category>思考</category>
        <category>思维习惯</category>
        <category>感言</category>
        <category>Docker</category>
        <category>LINUX</category>
        <category>Node</category>
        <category>前端</category>
        <category>Nvm</category>
        <category>CentOS</category>
        <category>Linux</category>
        <category>Crontab</category>
        <category>Jenkins</category>
        <category>IDEA</category>
        <category>Alibaba Cloud Toolkit</category>
        <category>Archery</category>
        <category>MySql</category>
        <category>工具</category>
        <category>Maven</category>
        <category>Git</category>
        <category>JAVA</category>
        <category>shell</category>
        <category>信息安全等级保护认证</category>
        <category>系统认证</category>
        <category>读书笔记</category>
        <category>BeetlSql</category>
        <category>Beetl</category>
        <category>异常</category>
        <category>Java IO-初识IO</category>
        <category>Spring</category>
        <category>SpringCloud</category>
        <category>SpringCloud Alibaba</category>
        <category>枚举</category>
        <category>POI</category>
        <category>Spring Boot</category>
        <category>VinUtil</category>
        <category>VerificationCode</category>
        <category>SOAR</category>
        <category>其他</category>
        <category>ProtoBuffer</category>
        <category>博客园</category>
        <category>博客</category>
        <category>MongoDb</category>
        <category>Lombok工具库详解</category>
        <category>常用开发库</category>
        <category>JSON类库详解</category>
        <category>Hutool</category>
        <category>工具类</category>
        <category>Spring常用工具类</category>
        <category>异步编程</category>
        <category>线程</category>
        <category>方法论</category>
        <category>开源协议</category>
        <category>CentOS7</category>
        <category>MongoDB</category>
        <category>Redis</category>
        <category>VMware</category>
        <category>Typora</category>
        <category>PostMan</category>
        <category>Java8</category>
        <category>特性</category>
        <category>JDBC</category>
        <category>Mysql</category>
        <category>EasyExcel</category>
        <category>日志类库详解</category>
        <category>Script</category>
        <category>设计模式</category>
        <category>MyBatis</category>
        <category>Apache Common</category>
        <category>Google Guava</category>
        <item>
            <guid isPermalink="true">https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/%E5%B8%B8%E7%94%A8%E7%B1%BB%E5%BA%93%E8%AF%A6%E8%A7%A3/Spring%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E7%B1%BB/</guid>
            <title>Spring常用工具类</title>
            <link>https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/%E5%B8%B8%E7%94%A8%E7%B1%BB%E5%BA%93%E8%AF%A6%E8%A7%A3/Spring%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E7%B1%BB/</link>
            <category>常用开发库</category>
            <category>工具类</category>
            <category>Spring常用工具类</category>
            <pubDate>Wed, 03 Jan 2024 21:13:21 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;Spring作为常用的开发框架，在Spring框架应用中，排在ApacheCommon，Guava, Huool等通用库后，第二优先级可以考虑使用Spring-core-xxx.jar中的util包。&lt;br&gt;另外对于工具类，要站在高一点的角度知道有哪些，而不是只看到代码… 用的时候具体看下即可)。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;内置的resouce类型&#34;&gt;&lt;a href=&#34;#内置的resouce类型&#34; class=&#34;headerlink&#34; title=&#34;内置的resouce类型&#34;&gt;&lt;/a&gt;内置的resouce类型&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;UrlResource&lt;/li&gt;
&lt;li&gt;ClassPathResource&lt;/li&gt;
&lt;li&gt;FileSystemResource&lt;/li&gt;
&lt;li&gt;ServletContextResource&lt;/li&gt;
&lt;li&gt;InputStreamResource&lt;/li&gt;
&lt;li&gt;ByteArrayResource&lt;/li&gt;
&lt;li&gt;EncodedResource 也就是Resource加上encoding, 可以认为是有编码的资源&lt;/li&gt;
&lt;li&gt;VfsResource(在jboss里经常用到, 相应还有 工具类 VfsUtils)&lt;/li&gt;
&lt;li&gt;org.springframework.util.xml.ResourceUtils 用于处理表达资源字符串前缀描述资源的工具. 如: “classpath:”. 有 getURL, getFile, isFileURL, isJarURL, extractJarFileURL&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;工具类&#34;&gt;&lt;a href=&#34;#工具类&#34; class=&#34;headerlink&#34; title=&#34;工具类&#34;&gt;&lt;/a&gt;工具类&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;org.springframework.core.annotation.AnnotationUtils 处理注解&lt;/li&gt;
&lt;li&gt;org.springframework.core.io.support.PathMatchingResourcePatternResolver 用 于处理 ant 匹配风格,找出所有的资源, 结合上面的resource的概念一起使用,对于遍历文件很有用. 具体请详细查看javadoc&lt;/li&gt;
&lt;li&gt;org.springframework.core.io.support.PropertiesLoaderUtils 加载Properties资源工具类,和Resource结合&lt;/li&gt;
&lt;li&gt;org.springframework.core.BridgeMethodResolver 桥接方法分析器. 关于桥接方法请参考: &lt;a href=&#34;http://java.sun.com/docs/books/jls/third_edition/html/expressions.html#15.12.4.5&#34;&gt;http://java.sun.com/docs/books/jls/third_edition/html/expressions.html#15.12.4.5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;org.springframework.core.GenericTypeResolver 范型分析器, 在用于对范型方法, 参数分析.&lt;/li&gt;
&lt;li&gt;org.springframework.core.NestedExceptionUtils&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;xml工具&#34;&gt;&lt;a href=&#34;#xml工具&#34; class=&#34;headerlink&#34; title=&#34;# xml工具&#34;&gt;&lt;/a&gt;&lt;a href=&#34;#xml%E5%B7%A5%E5%85%B7&#34;&gt;#&lt;/a&gt; xml工具&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;org.springframework.util.xml.AbstractStaxContentHandler&lt;/li&gt;
&lt;li&gt;org.springframework.util.xml.AbstractStaxXMLReader&lt;/li&gt;
&lt;li&gt;org.springframework.util.xml.AbstractXMLReader&lt;/li&gt;
&lt;li&gt;org.springframework.util.xml.AbstractXMLStreamReader&lt;/li&gt;
&lt;li&gt;org.springframework.util.xml.DomUtils&lt;/li&gt;
&lt;li&gt;org.springframework.util.xml.SimpleNamespaceContext&lt;/li&gt;
&lt;li&gt;org.springframework.util.xml.SimpleSaxErrorHandler&lt;/li&gt;
&lt;li&gt;org.springframework.util.xml.SimpleTransformErrorListener&lt;/li&gt;
&lt;li&gt;org.springframework.util.xml.StaxUtils&lt;/li&gt;
&lt;li&gt;org.springframework.util.xml.TransformerUtils&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;其它工具集&#34;&gt;&lt;a href=&#34;#其它工具集&#34; class=&#34;headerlink&#34; title=&#34;# 其它工具集&#34;&gt;&lt;/a&gt;&lt;a href=&#34;#%E5%85%B6%E5%AE%83%E5%B7%A5%E5%85%B7%E9%9B%86&#34;&gt;#&lt;/a&gt; 其它工具集&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;org.springframework.util.AntPathMatcherant风格的处理&lt;/li&gt;
&lt;li&gt;org.springframework.util.AntPathStringMatcher&lt;/li&gt;
&lt;li&gt;org.springframework.util.Assert断言,在我们的参数判断时应该经常用&lt;/li&gt;
&lt;li&gt;org.springframework.util.CachingMapDecorator&lt;/li&gt;
&lt;li&gt;org.springframework.util.ClassUtils用于Class的处理&lt;/li&gt;
&lt;li&gt;org.springframework.util.CollectionUtils用于处理集合的工具&lt;/li&gt;
&lt;li&gt;org.springframework.util.CommonsLogWriter&lt;/li&gt;
&lt;li&gt;org.springframework.util.CompositeIterator&lt;/li&gt;
&lt;li&gt;org.springframework.util.ConcurrencyThrottleSupport&lt;/li&gt;
&lt;li&gt;org.springframework.util.CustomizableThreadCreator&lt;/li&gt;
&lt;li&gt;org.springframework.util.DefaultPropertiesPersister&lt;/li&gt;
&lt;li&gt;org.springframework.util.DigestUtils摘要处理, 这里有用于md5处理信息的&lt;/li&gt;
&lt;li&gt;org.springframework.util.FileCopyUtils文件的拷贝处理, 结合Resource的概念一起来处理, 真的是很方便&lt;/li&gt;
&lt;li&gt;org.springframework.util.FileSystemUtils&lt;/li&gt;
&lt;li&gt;org.springframework.util.LinkedCaseInsensitiveMap key值不区分大小写的LinkedMap&lt;/li&gt;
&lt;li&gt;org.springframework.util.LinkedMultiValueMap一个key可以存放多个值的LinkedMap&lt;/li&gt;
&lt;li&gt;org.springframework.util.Log4jConfigurer一个log4j的启动加载指定配制文件的工具类&lt;/li&gt;
&lt;li&gt;org.springframework.util.NumberUtils处理数字的工具类, 有parseNumber 可以把字符串处理成我们指定的数字格式, 还支持format格式, convertNumberToTargetClass 可以实现Number类型的转化.&lt;/li&gt;
&lt;li&gt;org.springframework.util.ObjectUtils有很多处理null object的方法. 如nullSafeHashCode, nullSafeEquals, isArray, containsElement, addObjectToArray, 等有用的方法&lt;/li&gt;
&lt;li&gt;org.springframework.util.PatternMatchUtilsspring里用于处理简单的匹配. 如 Spring’s typical “xxx”, “xxx” and “xxx” pattern styles&lt;/li&gt;
&lt;li&gt;org.springframework.util.PropertyPlaceholderHelper用于处理占位符的替换&lt;/li&gt;
&lt;li&gt;org.springframework.util.ReflectionUtils反映常用工具方法. 有 findField, setField, getField, findMethod, invokeMethod等有用的方法&lt;/li&gt;
&lt;li&gt;org.springframework.util.SerializationUtils用于java的序列化与反序列化. serialize与deserialize方法&lt;/li&gt;
&lt;li&gt;org.springframework.util.StopWatch一个很好的用于记录执行时间的工具类, 且可以用于任务分阶段的测试时间. 最后支持一个很好看的打印格式. 这个类应该经常用&lt;/li&gt;
&lt;li&gt;org.springframework.util.StringUtils&lt;/li&gt;
&lt;li&gt;org.springframework.util.SystemPropertyUtils&lt;/li&gt;
&lt;li&gt;org.springframework.util.TypeUtils用于类型相容的判断. isAssignable&lt;/li&gt;
&lt;li&gt;org.springframework.util.WeakReferenceMonitor弱引用的监控&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;和web相关的工具&#34;&gt;&lt;a href=&#34;#和web相关的工具&#34; class=&#34;headerlink&#34; title=&#34;# 和web相关的工具&#34;&gt;&lt;/a&gt;&lt;a href=&#34;#%E5%92%8Cweb%E7%9B%B8%E5%85%B3%E7%9A%84%E5%B7%A5%E5%85%B7&#34;&gt;#&lt;/a&gt; 和web相关的工具&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;org.springframework.web.util.CookieGenerator&lt;/li&gt;
&lt;li&gt;org.springframework.web.util.HtmlCharacterEntityDecoder&lt;/li&gt;
&lt;li&gt;org.springframework.web.util.HtmlCharacterEntityReferences&lt;/li&gt;
&lt;li&gt;org.springframework.web.util.HtmlUtils&lt;/li&gt;
&lt;li&gt;org.springframework.web.util.HttpUrlTemplate&lt;ul&gt;
&lt;li&gt;这个类用于用字符串模板构建url, 它会自动处理url里的汉字及其它相关的编码. 在读取别人提供的url资源时, 应该经常用&lt;/li&gt;
&lt;li&gt;String url &amp;#x3D; “&lt;a href=&#34;http://localhost/myapp/%7Bname%7D/%7Bid%7D&#34;&gt;http://localhost/myapp/{name}/{id}&lt;/a&gt;“;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;org.springframework.web.util.JavaScriptUtils&lt;/li&gt;
&lt;li&gt;org.springframework.web.util.Log4jConfigListener&lt;ul&gt;
&lt;li&gt;用listener的方式来配制log4j在web环境下的初始化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;org.springframework.web.util.UriTemplate&lt;/li&gt;
&lt;li&gt;org.springframework.web.util.UriUtils处理uri里特殊字符的编码&lt;/li&gt;
&lt;li&gt;org.springframework.web.util.WebUtils&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
    </channel>
</rss>
