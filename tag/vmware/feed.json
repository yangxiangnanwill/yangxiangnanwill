{
    "version": "https://jsonfeed.org/version/1",
    "title": "Will • All posts by \"vmware\" tag",
    "description": "愿你一生努力，一生被爱",
    "home_page_url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io",
    "items": [
        {
            "id": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/Linux/VMware/VMware-%E5%A4%8D%E5%88%B6%E8%99%9A%E6%8B%9F%E6%9C%BA&%E5%85%8B%E9%9A%86%E8%99%9A%E6%8B%9F%E6%9C%BA/",
            "url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/Linux/VMware/VMware-%E5%A4%8D%E5%88%B6%E8%99%9A%E6%8B%9F%E6%9C%BA&%E5%85%8B%E9%9A%86%E8%99%9A%E6%8B%9F%E6%9C%BA/",
            "title": "VMware-复制虚拟机&克隆虚拟机",
            "date_published": "2024-01-03T13:13:21.661Z",
            "content_html": "<blockquote>\n<p>关于虚拟机提示选择“我已移动该虚拟机”或“我已复制该虚拟机”</p>\n</blockquote>\n<ul>\n<li>我已移动该虚拟机<blockquote>\n<p>表示打开后，虚拟机的网卡的mac地址不变，如果复制的是本地的虚拟机，复制前的虚拟机和复制后的虚拟机同时开机会造成网络冲突。</p>\n</blockquote>\n</li>\n<li>我已复制该虚拟机<blockquote>\n<p>表示打开复制后的虚拟机的网卡的物理地址是新生成的，这样怎么开机都不会有网卡问题，所以VMware本身也是建议不知道的就选这个选项。</p>\n</blockquote>\n</li>\n</ul>\n<h1 id=\"复制虚拟机\"><a href=\"#复制虚拟机\" class=\"headerlink\" title=\"复制虚拟机\"></a>复制虚拟机</h1><p>VMware 上创建的虚拟机是可以重复使用的，安装好的虚拟机可以直接复制或者剪切到其它任意电脑上，然后使用 VMware 打开使用，两者的虚拟机设置以及登录密码都完全一样。</p>\n<p>比如在某台电脑 A 上创建了 CentOS 7.2 的虚拟机（其它系统虚拟机如 windows、Red hat 也是同理），某一天在电脑 B 上也需要使用虚拟机，此时在电脑 B 上只需要安装 VMware 软件，然后从电脑 A 复制创建好的虚拟机文件目录到电脑 B，然后打开启动虚拟机即可。虚拟机的配置，如内存大小，处理器，磁盘大小等等，电脑 B 都会与电脑 A 中的保持一致，连登陆密码都是一致。</p>\n<p>这样的情况其实挺多的，比如从自己的旧电脑复制到新电脑上，或者从家里的笔记本复制到公司的台式机等等，如下动图所示，就是将旧电脑上创建好了的 CentOS 虚拟机整个目录复制到了新电脑上，然后运行 VMware 打开即可运行。</p>\n<p>注意：</p>\n<ul>\n<li>虽然虚拟机系统可以复制或者剪切重复使用，但是虚拟机系统内部安装的软件（比如 Java、mysql、docker等等）可能需要重新安装，造成原因如下：<ul>\n<li>新旧电脑的环境不一致</li>\n<li>因为旧电脑上使用的是 VMware 12，而新电脑使用的是 VMware 15</li>\n<li>直接复制的系统里面的程序本身真的需要重新安装。</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"克隆虚拟机\"><a href=\"#克隆虚拟机\" class=\"headerlink\" title=\"克隆虚拟机\"></a>克隆虚拟机</h1><p>平时开发的时候需要做集群，比如 Redis 集群、Kafka 集群、微服务集群等等，为了更贴实际，就需要多台虚拟机，使用一个 VMware 开启多个 虚拟机系统，此时固然可以重新创建虚拟机、或者复制虚拟机，但是都没有克隆虚拟机来的快。</p>\n<p>克隆虚拟机只需简单几步，就能克隆一个一模一样的系统，虚拟机配置、登陆账户及密码等等完全一样、更重要的是连原系统安装的程序在新克隆的系统中都能继续使用。</p>\n<h2 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h2><p><font color=\"#c00000\">无法为已经开启或者挂起的虚拟机克隆，所以克隆前需要关闭虚拟机。</font></p>\n<h2 id=\"克隆步骤\"><a href=\"#克隆步骤\" class=\"headerlink\" title=\"克隆步骤\"></a>克隆步骤</h2><p>右键要克隆的虚拟机、选择管理 ——&gt; 克隆，进入克隆虚拟机向导，然后根据向导即可轻松创建。</p>\n<ul>\n<li>克隆源<ul>\n<li>虚拟机中的当前状态</li>\n<li>现有快照(仅限关闭的虚拟机)</li>\n</ul>\n</li>\n<li>克隆类型<ul>\n<li>创建链接克隆</li>\n<li>创建完整克隆</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"克隆后修改事项\"><a href=\"#克隆后修改事项\" class=\"headerlink\" title=\"克隆后修改事项\"></a>克隆后修改事项</h2><p>克隆后并不是直接能用，而是需要进行一些调试。 因为刚刚克隆完之后，克隆机和母机MAC地址一样，我们需要重新配置和删除网卡信息</p>\n<h3 id=\"修改MAC地址\"><a href=\"#修改MAC地址\" class=\"headerlink\" title=\"修改MAC地址\"></a>修改MAC地址</h3><p>通过虚拟机设置进行修改，点击生成即可<br>虚拟机设置-&gt;网络适配器-&gt;高级-&gt;MAC地址-&gt;生成</p>\n<h3 id=\"修改主机名\"><a href=\"#修改主机名\" class=\"headerlink\" title=\"修改主机名\"></a>修改主机名</h3><p>出于程序开发的需要，需要区别各个服务器的名称，所以修改新系统的主机名称，它默认是：localhost.localdomain</p>\n<table>\n<thead>\n<tr>\n<th>hostname</th>\n<th>查看系统主机名称</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>hostnamectl set-hostname xxx</td>\n<td>修改系统主机名称<br/>1、主机名称中的特殊字符或空白字符都将会被移除，大写字母会自动转化成小写<br/>2、执行命令之后，会自动修改 &#x2F;etc&#x2F;hostname 文件<br/>3、执行命令之后，会立即生效，且重启系统也会生效</td>\n</tr>\n<tr>\n<td>cat &#x2F;etc&#x2F;hostname</td>\n<td>查看 &#x2F;etc&#x2F;hostname 文件内容，里面配置的就是系统主机名称</td>\n</tr>\n</tbody></table>\n<h3 id=\"IP-地址修改\"><a href=\"#IP-地址修改\" class=\"headerlink\" title=\"IP 地址修改\"></a>IP 地址修改</h3><blockquote>\n<p>如果是静态地址的话需要手动修改一下ip地址，如果是DHCP动态分配则无需配置。</p>\n</blockquote>\n<h4 id=\"查看网络信息\"><a href=\"#查看网络信息\" class=\"headerlink\" title=\"查看网络信息\"></a>查看网络信息</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">ifconfig<br></code></pre></td></tr></table></figure>\n\n<p>假如是静态  ip，则可以手动修改 &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F; 目录下的网卡文件，如 ifcfg-ens33（ifcfg-是前缀，ens33是网卡名称），网卡名称可以使用 ifconfig 命令查看。静态 ip 时，BOOTPROTO&#x3D;”static”，还会多一行 IPADDR&#x3D;x.x.x.x，修改此 IPADDR 即可修改 ip 地址。</p>\n<p><font color=\"#c00000\">特别提醒：如果克隆出来的新系统的网卡文件名称仍然和原系统的网卡名称一致，则需要手动修改文件名称为新系统的网卡名称，同时也要修改网卡文件内的 NAME、DEVICE 属性和新系统网卡名称一致。</font></p>\n<h4 id=\"重启网络\"><a href=\"#重启网络\" class=\"headerlink\" title=\"重启网络\"></a>重启网络</h4><p>使用 nmcli c reload（centos 8） 命令或 service network restart (centos 7)命令重启虚拟网卡，查看本机 ip 如果不是设置的则重启虚拟机</p>\n<h3 id=\"删除网卡信息\"><a href=\"#删除网卡信息\" class=\"headerlink\" title=\"删除网卡信息\"></a>删除网卡信息</h3><p>如果上述配置完了还有问题，就把网卡信息文件删掉重启，当然你也可以在配置的时候就直接删掉网卡信息，他在重启的时候会自动生成。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">rm</span> -rf /etc/udev/rules.d/70-persistent-ipoib.rules <br></code></pre></td></tr></table></figure>\n\n<h3 id=\"重启虚拟机\"><a href=\"#重启虚拟机\" class=\"headerlink\" title=\"重启虚拟机\"></a>重启虚拟机</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">init 6<br></code></pre></td></tr></table></figure>\n\n<p>此时就可以正常应用已经克隆好的虚拟机了。</p>\n",
            "tags": [
                "LINUX",
                "VMware"
            ]
        },
        {
            "id": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/Linux/VMware/VMware-%E5%AE%89%E8%A3%85%E8%99%9A%E6%8B%9F%E6%9C%BA/",
            "url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/Linux/VMware/VMware-%E5%AE%89%E8%A3%85%E8%99%9A%E6%8B%9F%E6%9C%BA/",
            "title": "VMware-安装虚拟机",
            "date_published": "2024-01-03T13:13:21.661Z",
            "content_html": "<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><p>在安装vmware前，需要确认是否开启虚拟化<br>任务管理器-&gt;性能-&gt;虚拟化<br>如果没有开启则需要开启相关配置</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"创建虚拟机，选择安装类型\"><a href=\"#创建虚拟机，选择安装类型\" class=\"headerlink\" title=\"创建虚拟机，选择安装类型\"></a>创建虚拟机，选择安装类型</h2><p>创建虚拟机时，需要选择虚拟机安装类型。<br>这里默认安装自定义安装。</p>\n<p>典型安装与自定义安装的差别：通常设计人员使用自定义安装（高级）。</p>\n<ol>\n<li>典型安装：<br>这种安装方式将默认选项用于所有安装设置，包括安装位置、虚拟网络配置等。<br>这通常是新用户使用的方法，因为它省去了诸如配置选项之类的繁琐步骤，使得安装非常简便快捷。</li>\n<li>自定义安装：<br>这种安装方式允许您自己选择要安装的组件和默认选项。<br>通过自定义安装，您可以选择特定的安装位置、禁用不需要的组件、自定义虚拟网络配置等。<br>自定义安装通常是高级用户使用的方法，因为它提供了更大的灵活性和控制权。</li>\n</ol>\n<h2 id=\"虚拟机硬件兼容性\"><a href=\"#虚拟机硬件兼容性\" class=\"headerlink\" title=\"虚拟机硬件兼容性\"></a>虚拟机硬件兼容性</h2><p>虚拟机硬件兼容性是一个重要的选项，它决定了虚拟机能够在哪些版本的VMware产品上运行在选择虚拟机硬件兼容性选项时，需要考虑主机系统的版本以及目标环境的版本，以确保虚拟机可以在目标环境中正常运行。同时，不同的硬件兼容性选项可能会影响虚拟机所支持的特性和性能，因此需要根据实际需求进行选。<br>​ 例如：<br>​ Workstation 16.x：该选项表示虚拟机仅能在VMware Workstation 16或更高版本上运行<br>​ Workstation 15.x：该选项表示虚拟机可以在VMware Workstation 15或更高版本上运行<br>​ Workstation 14.x：该选项表示虚拟机可以在VMware Workstation 14或更高版本上运行。<br>​ 这个选项意义比如：<br>​ 在a机器上创建的虚拟机 在未来可能要移入到b机器<br>​ 如果a机器是Workstation 16.x<br>​ 但是b机器是Workstation 15.x 会存在兼容性问题<br>​ 如果是相反的操作<br>​ 如果a机器是Workstation 15.x<br>​ b机器是Workstation 16.x<br>​ a机器上创建的虚拟机移入到b机器，则可以使用，因为16.x是兼容15.x的</p>\n<h2 id=\"安装镜像文件\"><a href=\"#安装镜像文件\" class=\"headerlink\" title=\"安装镜像文件\"></a>安装镜像文件</h2><p>这一步选择稍后安装操作系统。</p>\n<p>安装方式分为三种安装方式 ：<br>​ 第一种是通过电脑外，光盘驱动安装 (使用很少)<br>​ 第二种是通过电脑内，下载的镜像文件 (常用)<br>​ 第三种是先创建空虚拟机，稍后再安装系统 (常用)</p>\n<h2 id=\"选择版本\"><a href=\"#选择版本\" class=\"headerlink\" title=\"选择版本\"></a>选择版本</h2><p>操作系统选择Linux,CentOS8版本</p>\n<h2 id=\"命名虚拟机以及安装路径\"><a href=\"#命名虚拟机以及安装路径\" class=\"headerlink\" title=\"命名虚拟机以及安装路径\"></a>命名虚拟机以及安装路径</h2><p>给虚拟机一个合适的名称即可</p>\n<h2 id=\"处理器配置选择\"><a href=\"#处理器配置选择\" class=\"headerlink\" title=\"处理器配置选择\"></a>处理器配置选择</h2><p>处理器数量：<br>​ 可以根据虚拟机的需求选择使用的物理CPU核心数。但是，需要确认主机系统的CPU是否支持所需的核心数，否则可能会导致虚拟机无法启动或性能不佳。<br>查看主机CPU可以选择任务管理-&gt;资源监视器<br>cpu内核总数是cpu&#x3D;n+1<br>再选择虚拟机的cpu核心数（注意：你需要同时开启的虚拟机内核数相加不能超过你电脑cpu内核总数）</p>\n<h2 id=\"虚拟机内存配置选择\"><a href=\"#虚拟机内存配置选择\" class=\"headerlink\" title=\"虚拟机内存配置选择\"></a>虚拟机内存配置选择</h2><p>虚拟机内存配置的合适数值取决于许多因素，例如虚拟机运行的操作系统、应用程序的类型和数量、主机系统的硬件配置等。一般来说，以下是一些关于虚拟机内存配置的推荐：</p>\n<p>对于桌面虚拟机（例如Windows 10），最低配置为2GB，推荐4GB或更高。<br>对于服务器虚拟机（例如Windows Server、Linux服务器），至少需要4GB，推荐8GB及以上。<br>可以在虚拟机中，根据实际需求增加内存。</p>\n<h2 id=\"虚拟机网络配置选择\"><a href=\"#虚拟机网络配置选择\" class=\"headerlink\" title=\"虚拟机网络配置选择\"></a>虚拟机网络配置选择</h2><p>以下是VMware虚拟网络中的三种常见网络连接方式：</p>\n<table>\n<thead>\n<tr>\n<th>网络模式</th>\n<th>网络模式含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>桥接（Bridged）</td>\n<td>将虚拟机网络透明地连接到物理网络中，并且虚拟机可获得与物理网络相同的IP地址段。<br/>这种连接方式可以让虚拟机直接访问物理网络上的其他设备，同时也能让物理网络上的其他设备访问到虚拟机。<br/>在桥接模式下，你需要手工为虚拟系统配置IP地址、子网掩码，而且还要和宿主机器处于同一网段，这样虚拟系统才能和宿主机器进行通信。<br/>同时，由于这个虚拟系统是局域网中的一个独立的主机系统，那么就可以手工配置它的TCP&#x2F;IP配置信息，以实现通过局域网的网关或路由器访问互联网</td>\n</tr>\n<tr>\n<td>NAT（Network Address Translation）</td>\n<td>在主机和虚拟机之间建立一个私有网络，并通过虚拟网络适配器对连接进行管理。虚拟机使用虚拟网络适配器向外部发送请求，而请求的源IP地址被转换为主机的IP地址。<br/>这种连接方式可以提供一定的安全性，防止虚拟机受到来自外部的攻击，并且允许虚拟机访问Internet。</td>\n</tr>\n<tr>\n<td>仅主机（Host-Only）</td>\n<td>创建一个独立的虚拟网络，只包含主机和虚拟机，而不与任何物理网络连接。<br/>这种连接方式可以提供一定的安全性，因为虚拟机无法从Internet或局域网中访问其他设备，但是不允许虚拟机之间直接通信。</td>\n</tr>\n</tbody></table>\n<p>桥接模式的细则理解：</p>\n<ul>\n<li>桥接模式可以让虚拟机透明地连接到物理网络中，并且虚拟机可获得与物理网络相同的IP地址段。在桥接模式下，VMware虚拟网络适配器会创建一个虚拟交换机（Virtual Switch），这个虚拟交换机类似于物理网络交换机，用于将虚拟机和物理网络之间进行通信。虚拟机和主机之间的通信并非直接发生，而是通过虚拟交换机（Virtual Switch）进行传递。虚拟交换机类似于物理网络交换机，用于将虚拟机和物理网络之间进行通信。当虚拟机向主机发送数据包时，数据包会先通过虚拟交换机，然后再传递给主机系统；反之，当主机向虚拟机发送数据包时，数据包也会经过虚拟交换机转发给虚拟机。</li>\n<li>当虚拟机使用桥接模式连接网络时，它们就像物理计算机一样被分配了一个唯一的MAC地址和IP地址。这使得虚拟机能够直接访问物理网络上的其他设备，同时也能让物理网络上的其他设备访问到虚拟机。因此，在桥接模式下，虚拟机可以像物理计算机一样访问网络资源、共享文件等。<br>3、需要注意的是，使用桥接模式需要根据实际需求进行设置，并确保主机系统的网络适配器正确配置。如果网络适配器未正确配置，可能导致虚拟机无法访问网络或访问速度缓慢。同时，为避免安全问题，建议对虚拟机启用防火墙或其他安全功能。</li>\n</ul>\n<p>NAT模式的细则理解：</p>\n<ul>\n<li>NAT模式（Network Address Translation）在主机和虚拟机之间建立一个私有网络，通过虚拟网络适配器对连接进行管理，使得虚拟机可以使用主机的Internet连接。具体来说，在NAT模式下，VMware会创建一个虚拟DHCP服务器，并为虚拟机分配一个虚拟IP地址，同时将本地主机的IP地址作为NAT路由器的出口IP地址</li>\n<li>当虚拟机使用NAT模式连接到Internet时，虚拟机的所有网络通信都是通过主机系统进行转发和管理的。虚拟机的访问请求先被发送到虚拟DHCP服务器，然后经由主机进行NAT转换，返回数据则也会经过主机的NAT转换后再传递给虚拟机。这种连接方式可以提供一定的安全性，防止虚拟机受到来自外部的攻击，并且允许虚拟机访问Internet。</li>\n<li>需要注意的是，使用NAT模式需要根据实际需求进行设置，并确保主机系统的网络适配器正确配置。如果网络适配器未正确配置，可能导致虚拟机无法访问网络或访问速度缓慢。同时，建议对虚拟机启用防火墙或其他安全功能，以保护虚拟机免受来自外部的攻击。</li>\n</ul>\n<p>仅主机模式的细则理解：</p>\n<ul>\n<li>仅主机模式（Host-Only）创建一个独立的虚拟网络，只包含主机和虚拟机，而不与任何物理网络连接。在这种模式下，虚拟机只能与主机进行通信，而无法直接访问Internet或局域网上的其他设备。为了实现这种连接方式，VMware会创建一个虚拟网络适配器，并将其配置为与主机系统共享。</li>\n<li>当虚拟机使用仅主机模式连接网络时，它们就像被放置在一个私有网络中，可以相互通信、共享资源等，但是无法从Internet或局域网中访问其他设备。这种连接方式可以提供一定的安全性，因为虚拟机无法从Internet或局域网中访问其他设备，同时也不会受到来自外部的攻击。</li>\n<li>需要注意的是，在仅主机模式下，虚拟机之间可以直接通信，但不能与主机所在的物理网络（例如家庭或企业网络）通信。如果需要让虚拟机与物理网络通信，可以考虑使用桥接或NAT模式。同时，在使用仅主机模式时，建议对虚拟机启用防火墙或其他安全功能，以保护虚拟机免受来自虚拟机之间的攻击。</li>\n</ul>\n<h2 id=\"I-x2F-O控制器配置选择\"><a href=\"#I-x2F-O控制器配置选择\" class=\"headerlink\" title=\"I&#x2F;O控制器配置选择\"></a>I&#x2F;O控制器配置选择</h2><table>\n<thead>\n<tr>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>BusLogic</td>\n<td>是第一个被支持的SCSI控制器类型，适用于早期的Windows操作系统和其他一些老旧的操作系统。在性能方面，BusLogic相对较慢，因为它使用CPU软件仿真来处理I&#x2F;O请求。</td>\n</tr>\n<tr>\n<td>LSI Logic</td>\n<td>是一种较新的SCSI控制器类型，适用于大多数现代操作系统和应用程序。与BusLogic相比，LSI Logic使用更先进的技术来处理I&#x2F;O请求，具有更好的性能和可靠性。(推荐)</td>\n</tr>\n<tr>\n<td>LSI Logic SAS</td>\n<td>是一种基于SAS架构的SCSI控制器，适用于需要高速存储和高并发I&#x2F;O的应用场景。与LSI Logic相比，LSI Logic SAS提供了更高的带宽和更低的延迟。(推荐) Paravirtualized SCSI：是一种特殊类型的SCSI控制器，使用虚拟化技术来提高性能和效率。它可以通过直接访问物理设备来避免CPU软件仿真，提供更低的延迟和更高的吞吐量。</td>\n</tr>\n</tbody></table>\n<h2 id=\"磁盘类型选择\"><a href=\"#磁盘类型选择\" class=\"headerlink\" title=\"磁盘类型选择\"></a>磁盘类型选择</h2><p>在VMware虚拟机中，IDE磁盘类型、SCSI磁盘类型、SATA磁盘类型和NVMe磁盘类型都有各自的特点和适用场景。以下是它们的主要特点和适用场景：</p>\n<p>IDE磁盘类型：适用于较早的操作系统和应用程序，如MS-DOS和Windows 95&#x2F;98等。它可以连接两个IDE硬盘或CD&#x2F;DVD-ROM设备，但不支持热插拔功能，且性能相对较差。</p>\n<p>SCSI磁盘类型：适用于大多数现代操作系统和应用程序，特别是需要高性能存储的应用场景。它支持多达15个SCSI设备，包括硬盘、CD&#x2F;DVD-ROM、磁带机等，并提供了更好的性能和可靠性。</p>\n<p>SATA磁盘类型：适用于较新的Windows、Linux和其他操作系统，特别是桌面和笔记本电脑的虚拟机。它可以连接多个SATA硬盘和CD&#x2F;DVD-ROM设备，并提供了较好的性能和扩展性。与IDE相比，SATA磁盘类型支持更高的数据传输速率和更大的存储容量。</p>\n<p>NVMe磁盘类型：适用于需要极高性能存储的应用场景，如大规模数据分析和高性能计算等。它可以连接多个NVMe硬盘，并提供了较低的延迟和更高的带宽。与SCSI和SATA相比，NVMe具有更高的I&#x2F;O吞吐量和更低的访问延迟。</p>\n<p>IDE磁盘类型适用于较早的系统和应用程序，而SCSI、SATA和NVMe则适用于现代的操作系统和应用程序。在选择磁盘类型时，应该根据实际需求进行权衡，考虑到性能、兼容性和扩展性等因素。需要注意的是，在更改磁盘类型时，可能需要重新安装操作系统或驱动程序，以确保虚拟机可以正常工作。</p>\n<h2 id=\"磁盘选择\"><a href=\"#磁盘选择\" class=\"headerlink\" title=\"磁盘选择\"></a>磁盘选择</h2><p>在VMware虚拟机中，创建新的虚拟磁盘、使用现有的虚拟磁盘和使用物理磁盘都有各自的优缺点和适用场景。以下是它们的主要区别：<br>​ 创建新的虚拟磁盘：这种方法可以为虚拟机分配一个新的虚拟磁盘，并将其格式化为所需的文件系统。创建新的虚拟磁盘通常比较简单，且不会影响其他虚拟机或主机系统。</p>\n<p>​ 使用现有的虚拟磁盘：这种方法可以利用已经存在的虚拟磁盘，避免重复创建和占用存储空间。如果虚拟机需要多个磁盘，使用现有的虚拟磁盘也可以提高磁盘管理的效率和便捷性。</p>\n<p>​ 使用物理磁盘：这种方法可以将物理磁盘直接映射到虚拟机中，使得虚拟机可以直接读写物理磁盘上的数据。使用物理磁盘可以获得更好的性能和可靠性，但需要注意保护物理磁盘的数据安全性。</p>\n<p>​ 需要注意的是，在使用以上任何一种方法时，都需要考虑到存储空间、性能和安全等方面的问题，并根据实际需求进行权衡选择。同时，在使用物理磁盘时，需要特别小心，以避免对宿主机上的数据造成损坏或泄露。</p>\n<h2 id=\"磁盘容量选择\"><a href=\"#磁盘容量选择\" class=\"headerlink\" title=\"磁盘容量选择\"></a>磁盘容量选择</h2><p>如无特殊需求，大小和分配类型根据红框选择即可，如有特殊需求可自行调配。</p>\n<h2 id=\"磁盘存储路径\"><a href=\"#磁盘存储路径\" class=\"headerlink\" title=\"磁盘存储路径\"></a>磁盘存储路径</h2><p>依据自己真实情况进行选择配置。</p>\n<h2 id=\"创建虚拟机\"><a href=\"#创建虚拟机\" class=\"headerlink\" title=\"创建虚拟机\"></a>创建虚拟机</h2><p>可自定义配置虚拟机硬件配置信息，如博猪会把USB驱动、声卡等非必要的硬件配置信息，配置完成后，点击完成即可。</p>\n<h1 id=\"初始配置\"><a href=\"#初始配置\" class=\"headerlink\" title=\"初始配置\"></a>初始配置</h1><h2 id=\"虚拟网卡区别\"><a href=\"#虚拟网卡区别\" class=\"headerlink\" title=\"虚拟网卡区别\"></a>虚拟网卡区别</h2><h3 id=\"VMnet1-和-VMnet8区别：\"><a href=\"#VMnet1-和-VMnet8区别：\" class=\"headerlink\" title=\"VMnet1 和 VMnet8区别：\"></a>VMnet1 和 VMnet8区别：</h3><p>vmnet1和vmnet8是两个虚拟网卡，主要作用是让虚拟机可以通过我们的宿主机的网线上网。</p>\n<p><font color=\"#c00000\">注意：如果有“！”，说明不能用。</font></p>\n<blockquote>\n<h2 id=\"vmnet1是为host-only方式服务的，vmnet8是为NAT方式服务的。设置私有网络（Host-Only）时，用来和主机通信，禁用以后就无法正常使用Host-Only模式了；设置网络地址翻译（NAT）时，和主机通讯使用，如果禁用，那么虚拟机在NAT模式下依然可以通过主机网卡访问外网，但不能通过内部网络和主机直接通信。而使用桥接网络时，则不需要这两个网卡了。\"><a href=\"#vmnet1是为host-only方式服务的，vmnet8是为NAT方式服务的。设置私有网络（Host-Only）时，用来和主机通信，禁用以后就无法正常使用Host-Only模式了；设置网络地址翻译（NAT）时，和主机通讯使用，如果禁用，那么虚拟机在NAT模式下依然可以通过主机网卡访问外网，但不能通过内部网络和主机直接通信。而使用桥接网络时，则不需要这两个网卡了。\" class=\"headerlink\" title=\"vmnet1是为host-only方式服务的，vmnet8是为NAT方式服务的。设置私有网络（Host Only）时，用来和主机通信，禁用以后就无法正常使用Host-Only模式了；设置网络地址翻译（NAT）时，和主机通讯使用，如果禁用，那么虚拟机在NAT模式下依然可以通过主机网卡访问外网，但不能通过内部网络和主机直接通信。而使用桥接网络时，则不需要这两个网卡了。\"></a>vmnet1是为host-only方式服务的，vmnet8是为NAT方式服务的。<br>设置私有网络（Host Only）时，用来和主机通信，禁用以后就无法正常使用Host-Only模式了；<br>设置网络地址翻译（NAT）时，和主机通讯使用，如果禁用，那么虚拟机在NAT模式下依然可以通过主机网卡访问外网，但不能通过内部网络和主机直接通信。<br>而使用桥接网络时，则不需要这两个网卡了。</h2><p>使用Host-Only模式的guest系统与主机通信需要VMnet1网卡的支持；<br>通过NAT方式上网的guest系统与主机通信需要VMnet8网卡的支持；<br>使用桥接模式上网需要网络中存在DHCP服务器，且提供服务。</p>\n</blockquote>\n<p>再来区分一下应用场景：</p>\n<ul>\n<li>VMnet1<br>使用Host-Only模式的guest系统与主机通信需要VMnet1网卡的支持</li>\n<li>VMnet8<br>使用NAT网络模式，在宿主机安装多台虚拟机，和宿主组成一个小局域网，宿主机，虚拟机之间都可以互相通信，虚拟机也可访问外网，例如 搭建 hadoop 集群，分布式服务</li>\n<li>VMNet0<br>使用桥接模式，安装VM后，在VM里建立虚拟机 默认 就是该模式。<br>如果你只是需要一台虚拟机可以和宿主互通，并可以访问外网，此模式即可。</li>\n</ul>\n<blockquote>\n<p>安装虚拟机系统后不需要调整网络，物理网络中的 “路由” 所包含的DHCP服务器会自动识别该虚拟机并为其分配IP地址；<br>如果没有路由，可以自己手动在系统分配，原则是和宿主机在同一网段并指向相同的网关即可通信。</p>\n</blockquote>\n<h2 id=\"配置虚拟机网络配置\"><a href=\"#配置虚拟机网络配置\" class=\"headerlink\" title=\"配置虚拟机网络配置\"></a>配置虚拟机网络配置</h2><p><font color=\"#c00000\">网络模式默认配置为NAT模式</font></p>\n<p>既然要网络模式要设置为NAT模式，即对应VMware中的<code>VMware Network Adapter VMnet8</code>网卡设备，这个是虚拟网卡。</p>\n<p>VMware-&gt;编辑-&gt;选择VMnet8<br>配置子网地址、子网掩码、网关信息，如果需要动态分配IP地址的话则需要配置DHCP信息。</p>\n<h2 id=\"编辑网卡配置文件\"><a href=\"#编辑网卡配置文件\" class=\"headerlink\" title=\"编辑网卡配置文件\"></a>编辑网卡配置文件</h2><p>编辑网卡配置文件，进入 &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts 目录，网卡名称可能不同，查看 ip (使用 ifconfig 或 ip addr 命令)，可以找到网卡名，进入网卡名对应的文件。<br>一般虚拟机网卡信息为：<code>ifcfg-ens160</code>,如果存在多个网卡配置信息，可以使用<code>ifconfig</code>查询虚拟机网卡信息，找到对应网段的信息配置。<br>这里就以<code>ifcfg-ens160</code>为例。</p>\n<p><code>vim ifcfg-ens160</code> 修改配置文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">TYPE=Ethernet<br>PROXY_METHOD=none<br>BROWSER_ONLY=no<br><span class=\"hljs-comment\"># 这里默认为DHCP,即动态分配，现在修改为静态地址</span><br>BOOTPROTO=static<br>DEFROUTE=<span class=\"hljs-built_in\">yes</span><br>IPV4_FAILURE_FATAL=no<br>IPV6INIT=<span class=\"hljs-built_in\">yes</span><br>IPV6_AUTOCONF=<span class=\"hljs-built_in\">yes</span><br>IPV6_DEFROUTE=<span class=\"hljs-built_in\">yes</span><br>IPV6_FAILURE_FATAL=no<br>NAME=ens160<br>UUID=79179731-c3c5-4ba8-8b78-b54af474f1b7<br>DEVICE=ens160<br><span class=\"hljs-comment\"># 开机自启动</span><br>ONBOOT=<span class=\"hljs-built_in\">yes</span><br><span class=\"hljs-comment\"># 静态IP地址</span><br>IPADDR=192.168.122.128<br><span class=\"hljs-comment\"># 静态IP掩码信息</span><br>NETMASK=255.255.255.0<br><span class=\"hljs-comment\"># 静态IP网关</span><br>GATEWAY=192.168.122.2<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"重启网卡配置信息\"><a href=\"#重启网卡配置信息\" class=\"headerlink\" title=\"重启网卡配置信息\"></a>重启网卡配置信息</h2><p>使用 <code>nmcli c reload</code>（centos 8） 命令或 <code>service network restart</code> (centos 7)命令重启虚拟网卡，查看本机 ip 如果不是设置的则重启虚拟机</p>\n<h1 id=\"桌面调整设置\"><a href=\"#桌面调整设置\" class=\"headerlink\" title=\"桌面调整设置\"></a>桌面调整设置</h1><p>centos中的6种运行级别如下：</p>\n<ul>\n<li>0：关机 runlevel0 poweroff.target</li>\n<li>1：单用户 runlevel1 rescue.target</li>\n<li>2：多用户无网络 runlevel2 multi-user.target</li>\n<li>3：多用户有网络 runlevel3 multi-user.target</li>\n<li>4：保留 runlevel4 multi-user.target</li>\n<li>5：图形界面 runlevel5 graphical.target</li>\n<li>6：关机并重启 runlevel6 reboot.target</li>\n</ul>\n<h2 id=\"1-centos7以下的版本\"><a href=\"#1-centos7以下的版本\" class=\"headerlink\" title=\"1. centos7以下的版本\"></a>1. centos7以下的版本</h2><p>通过有以下方式进行设置默认启动方式<br><code>vim /etc/inittab</code><br>找到id:5:initdefault,将 5 修改为3即可</p>\n<h2 id=\"2-centos7-含-以上的版本\"><a href=\"#2-centos7-含-以上的版本\" class=\"headerlink\" title=\"2. centos7(含)以上的版本\"></a>2. centos7(含)以上的版本</h2><ul>\n<li><p>设置成默认命令模式启动<br>  <code>systemctl set-default multi-user.target 或者 systemctl set-default runlevel3</code><br>  等同于<br>  <code>rm /etc/systemd/system/default.target &amp;&amp; ln -sf /lib/systemd/system/multi-user.target /etc/systemd/system/default.target</code></p>\n</li>\n<li><p>设置成默认图形模式启动<br>  <code>systemctl set-default graphical.target 或者 systemctl set-default runlevel5</code><br>  等同于<br>  <code>rm /etc/systemd/system/default.target &amp;&amp; ln -sf /lib/systemd/system/graphical.target /etc/systemd/system/default.target</code></p>\n</li>\n</ul>\n<p>可以看到他们的关系：  </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">ls</span> -l /etc/systemd/system/default.target<br><span class=\"hljs-built_in\">ls</span> -l /lib/systemd/system/runlevel*<br></code></pre></td></tr></table></figure>\n<h2 id=\"3-手动启动某个模式\"><a href=\"#3-手动启动某个模式\" class=\"headerlink\" title=\"3. 手动启动某个模式\"></a>3. 手动启动某个模式</h2><p><code>init 3 //运行命令行模式</code><br><code>init 5 //运行图形模式</code></p>\n<h2 id=\"4-安装图像界面\"><a href=\"#4-安装图像界面\" class=\"headerlink\" title=\"4. 安装图像界面\"></a>4. 安装图像界面</h2><p><code>dnf groupinstall &quot;GNOME Desktop&quot; &quot;Graphical Administration Tools&quot;</code><br>centos8以下版本，把dnf改为yum</p>\n",
            "tags": [
                "VMware"
            ]
        }
    ]
}