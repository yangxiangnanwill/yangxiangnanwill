{
    "version": "https://jsonfeed.org/version/1",
    "title": "Will • All posts by \"verificationcode\" tag",
    "description": "愿你一生努力，一生被爱",
    "home_page_url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io",
    "items": [
        {
            "id": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/%E5%B7%A5%E5%85%B7%E7%B1%BB/VerificationCodeUtil/",
            "url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/%E5%B7%A5%E5%85%B7%E7%B1%BB/VerificationCodeUtil/",
            "title": "VerificationCodeUtil",
            "date_published": "2024-01-03T13:13:21.651Z",
            "content_html": "<blockquote>\n<p>因最近系统等保三级改造中使用到了随机生成高强度密码(包含大写、小写英文字母、数字、特殊字符且不少于八位)并发送短信至客户手机，博猪基于<code>apache-common-lang3</code>二次包装了一个工具类。</p>\n</blockquote>\n<h1 id=\"Maven依赖\"><a href=\"#Maven依赖\" class=\"headerlink\" title=\"Maven依赖\"></a>Maven依赖</h1><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>  <br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.apache.commons<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>  <br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>commons-lang3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>  <br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>3.3.9<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>  <br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"JAVA工具类\"><a href=\"#JAVA工具类\" class=\"headerlink\" title=\"JAVA工具类\"></a>JAVA工具类</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> org.apache.commons.lang3.RandomStringUtils;<br><span class=\"hljs-keyword\">import</span> java.util.Collections;<br><span class=\"hljs-keyword\">import</span> java.util.List;<br><span class=\"hljs-keyword\">import</span> java.util.stream.Collectors;<br><br><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span>     VerificationCode</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span>   密码、验证码工具类</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span>        will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span>          2022/8/17 9:33</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Company</span>       北京惠科互联科技有限公司</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">VerificationCodeUtil</span> &#123;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-title function_\">VerificationCodeUtil</span><span class=\"hljs-params\">()</span>&#123;&#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 默认特殊字符</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">char</span>[] DEFAULT_SYMBOL = &#123;<span class=\"hljs-string\">&#x27;!&#x27;</span>, <span class=\"hljs-string\">&#x27;@&#x27;</span>, <span class=\"hljs-string\">&#x27;#&#x27;</span>, <span class=\"hljs-string\">&#x27;$&#x27;</span>, <span class=\"hljs-string\">&#x27;%&#x27;</span>, <span class=\"hljs-string\">&#x27;^&#x27;</span>, <span class=\"hljs-string\">&#x27;&amp;&#x27;</span>, <span class=\"hljs-string\">&#x27;*&#x27;</span>&#125;;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成指定长度的随机数</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> len           生成长度</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorNumber</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> len)</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> generatorNumber(len, <span class=\"hljs-literal\">false</span>);<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成指定长度的随机大写字母</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> len           生成长度</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorUpperCase</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> len)</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> generatorUpperCase(len, <span class=\"hljs-literal\">false</span>);<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成指定长度的随机小写字母</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> len           生成长度</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorLowerCase</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> len)</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> generatorLowerCase(len, <span class=\"hljs-literal\">false</span>);<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成指定长度的随机特殊字符</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> len               生成长度</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> shuffleFlag       二次打乱标识 true-需要二次打乱，false-默认生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorNotDefaultSymbol</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> len, <span class=\"hljs-type\">boolean</span> shuffleFlag)</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> generatorSymbol(len, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>);<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成指定长度的随机默认特殊字符</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> len                生成长度</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorDefaultSymbol</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> len)</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> generatorSymbol(len, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>);<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成指定长度的随机数</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> len           生成长度</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> shuffleFlag   二次打乱标识 true-需要二次打乱，false-默认生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorNumber</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> len, <span class=\"hljs-type\">boolean</span> shuffleFlag)</span> &#123;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">randomNumeric</span> <span class=\"hljs-operator\">=</span> RandomStringUtils.randomNumeric(len);<br>        <span class=\"hljs-keyword\">if</span> (shuffleFlag) &#123;<br>            <span class=\"hljs-keyword\">return</span> shuffleRandomStr(randomNumeric);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> randomNumeric;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成指定长度的大写字母</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> len           生成长度</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> shuffleFlag   二次打乱标识 true-需要二次打乱，false-默认生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorUpperCase</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> len, <span class=\"hljs-type\">boolean</span> shuffleFlag)</span> &#123;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">randomStr</span> <span class=\"hljs-operator\">=</span> RandomStringUtils.random(len, <span class=\"hljs-number\">65</span>, <span class=\"hljs-number\">90</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>);<br>        <span class=\"hljs-keyword\">if</span>(shuffleFlag) &#123;<br>            <span class=\"hljs-keyword\">return</span> shuffleRandomStr(randomStr);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> randomStr;<br>    &#125;<br><br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成指定长度的小写字母</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> len           生成长度</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> shuffleFlag   二次打乱标识 true-需要二次打乱，false-默认生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorLowerCase</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> len, <span class=\"hljs-type\">boolean</span> shuffleFlag)</span> &#123;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">randomStr</span> <span class=\"hljs-operator\">=</span> RandomStringUtils.random(len, <span class=\"hljs-number\">97</span>, <span class=\"hljs-number\">122</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>);<br>        <span class=\"hljs-keyword\">if</span>(shuffleFlag) &#123;<br>            <span class=\"hljs-keyword\">return</span> shuffleRandomStr(randomStr);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> randomStr;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成指定长度的特殊字符</span><br><span class=\"hljs-comment\">     *</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> len                生成长度</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> defaultSymbolFlag  是否使用默认特殊字符标识（默认即常用特殊字符键盘SHIFT+【1-0】)，true-默认使用/false-不使用默认字符即随机生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> shuffleFlag        二次打乱标识 true-需要二次打乱，false-默认生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorSymbol</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> len, <span class=\"hljs-type\">boolean</span> defaultSymbolFlag, <span class=\"hljs-type\">boolean</span> shuffleFlag)</span> &#123;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">randomStr</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-literal\">null</span>;<br>        <span class=\"hljs-keyword\">if</span> (defaultSymbolFlag) &#123;<br>            randomStr = RandomStringUtils.random(len, DEFAULT_SYMBOL);<br>        &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>            randomStr = RandomStringUtils.random(len, <span class=\"hljs-number\">33</span>, <span class=\"hljs-number\">47</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>);<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span> (shuffleFlag) &#123;<br>            <span class=\"hljs-keyword\">return</span> shuffleRandomStr(randomStr);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> randomStr;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     *  根据自定义字符串生成随机数</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> len             生成长度</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> shuffleFlag     二次打乱标识 true-需要二次打乱，false-默认生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> chars           字符串可变参数</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorCustom</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> len, <span class=\"hljs-type\">boolean</span> shuffleFlag, <span class=\"hljs-type\">char</span>... chars)</span> &#123;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">randomStr</span> <span class=\"hljs-operator\">=</span> RandomStringUtils.random(len, chars);<br>        <span class=\"hljs-keyword\">if</span> (shuffleFlag) &#123;<br>            <span class=\"hljs-keyword\">return</span> shuffleRandomStr(randomStr);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> randomStr;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成随机字符串</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> upperCount         大写字符串数量</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> lowerCount         小写字符串数量</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> numberCount        数字字符串数量</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> symbolCount        特殊字符串数量</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> defaultSymbolFlag  是否使用默认特殊字符标识（默认即常用特殊字符键盘SHIFT+【1-0】)，true-默认使用/false-不使用默认字符即随机生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> shuffleFlag        二次打乱标识 true-需要二次打乱，false-默认生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorRandomStr</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> upperCount, <span class=\"hljs-type\">int</span> lowerCount</span><br><span class=\"hljs-params\">            , <span class=\"hljs-type\">int</span> numberCount, <span class=\"hljs-type\">int</span> symbolCount, <span class=\"hljs-type\">boolean</span> defaultSymbolFlag , <span class=\"hljs-type\">boolean</span> shuffleFlag)</span> &#123;<br>        <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">zero</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-keyword\">if</span> (zero &gt;= upperCount &amp;&amp; zero &gt;= lowerCount &amp;&amp; zero &gt;= numberCount &amp;&amp; zero &gt;= symbolCount) &#123;<br>            <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">VerificationCodeException</span>(<span class=\"hljs-string\">&quot;生成密码长度不能为空！&quot;</span>);<br>        &#125;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">upperRandomStr</span> <span class=\"hljs-operator\">=</span> generatorUpperCase(upperCount);<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">lowerRandomStr</span> <span class=\"hljs-operator\">=</span> generatorLowerCase(lowerCount);<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">numberRandomStr</span> <span class=\"hljs-operator\">=</span> generatorNumber(numberCount);<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">symbolRandomStr</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&quot;&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span> (symbolCount &gt; <span class=\"hljs-number\">0</span>) &#123;<br>            symbolRandomStr = generatorSymbol(symbolCount, defaultSymbolFlag, <span class=\"hljs-literal\">false</span>);<br>        &#125;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">randomStr</span> <span class=\"hljs-operator\">=</span> upperRandomStr<br>                .concat(lowerRandomStr)<br>                .concat(numberRandomStr)<br>                .concat(symbolRandomStr);<br>        <span class=\"hljs-keyword\">if</span> (shuffleFlag) &#123;<br>            <span class=\"hljs-keyword\">return</span> shuffleRandomStr(randomStr);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> randomStr;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成随机字符串</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> partCount         每种类型数量</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> containSymbolFlag 是否包含特殊字符</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> defaultSymbolFlag 是否使用默认特殊字符标识（默认即常用特殊字符键盘SHIFT+【1-0】)，true-默认使用/false-不使用默认字符即随机生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> shuffleFlag       二次打乱标识 true-需要二次打乱，false-默认生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorRandomStr</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> partCount, <span class=\"hljs-type\">boolean</span> containSymbolFlag, <span class=\"hljs-type\">boolean</span> defaultSymbolFlag, <span class=\"hljs-type\">boolean</span> shuffleFlag)</span> &#123;<br>        <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">zero</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-keyword\">if</span> (zero &gt;= partCount) &#123;<br>            <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">VerificationCodeException</span>(<span class=\"hljs-string\">&quot;生成密码长度不能为空！&quot;</span>);<br>        &#125;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">randomStr</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&quot;&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span> (containSymbolFlag) &#123;<br>            randomStr = generatorRandomStr(partCount, partCount, partCount, partCount, defaultSymbolFlag, <span class=\"hljs-literal\">false</span>);<br>        &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>            randomStr = generatorRandomStr(partCount, partCount, partCount, <span class=\"hljs-number\">0</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>);<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span> (shuffleFlag) &#123;<br>            <span class=\"hljs-keyword\">return</span> shuffleRandomStr(randomStr);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> randomStr;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成随机字符串</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> partCount         大写、小写字母、数字数量</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> symbolCount       特殊字符数量</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> defaultSymbolFlag 是否使用默认特殊字符标识（默认即常用特殊字符键盘SHIFT+【1-0】)，true-默认使用/false-不使用默认字符即随机生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> shuffleFlag       二次打乱标识 true-需要二次打乱，false-默认生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorRandomStr</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> partCount, <span class=\"hljs-type\">int</span> symbolCount, <span class=\"hljs-type\">boolean</span> defaultSymbolFlag, <span class=\"hljs-type\">boolean</span> shuffleFlag)</span> &#123;<br>        <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">zero</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-keyword\">if</span> (zero &gt;= partCount) &#123;<br>            <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">VerificationCodeException</span>(<span class=\"hljs-string\">&quot;生成密码长度不能为空！&quot;</span>);<br>        &#125;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">randomStr</span> <span class=\"hljs-operator\">=</span> generatorRandomStr(partCount, partCount, partCount, symbolCount, defaultSymbolFlag, <span class=\"hljs-literal\">false</span>);<br>        <span class=\"hljs-keyword\">if</span> (shuffleFlag) &#123;<br>            <span class=\"hljs-keyword\">return</span> shuffleRandomStr(randomStr);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> randomStr;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成随机字符串，特殊字符使用默认特殊字符</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> partCount         大写、小写字母、数字数量</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> symbolCount       特殊字符数量</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> shuffleFlag       二次打乱标识 true-需要二次打乱，false-默认生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorRandomStr</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> partCount, <span class=\"hljs-type\">int</span> symbolCount, <span class=\"hljs-type\">boolean</span> shuffleFlag)</span> &#123;<br>        <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">zero</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-keyword\">if</span> (zero &gt;= partCount) &#123;<br>            <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">VerificationCodeException</span>(<span class=\"hljs-string\">&quot;生成密码长度不能为空！&quot;</span>);<br>        &#125;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">randomStr</span> <span class=\"hljs-operator\">=</span> generatorRandomStr(partCount, partCount, partCount, symbolCount, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>);<br>        <span class=\"hljs-keyword\">if</span> (shuffleFlag) &#123;<br>            <span class=\"hljs-keyword\">return</span> shuffleRandomStr(randomStr);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> randomStr;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成随机字符串，特殊字符使用默认特殊字符,生成后会二次打乱</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> partCount         大写、小写字母、数字数量</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> symbolCount       特殊字符数量</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorRandomStr</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> partCount, <span class=\"hljs-type\">int</span> symbolCount)</span> &#123;<br>        <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">zero</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-keyword\">if</span> (zero &gt;= partCount) &#123;<br>            <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">VerificationCodeException</span>(<span class=\"hljs-string\">&quot;生成密码长度不能为空！&quot;</span>);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> generatorRandomStr(partCount, partCount, partCount, symbolCount, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>);<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成指定长度随机字符串，且特殊字符固定，类型数量固定，如有多余则自动补足数字类型</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> len                   随机字符串长度</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> symbolCount           固定特殊字符串</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> defaultSymbolFlag     是否使用默认特殊字符</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> shuffleFlag           二次打乱标识 true-需要二次打乱，false-默认生成</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorDefaultRandomStr</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> len, <span class=\"hljs-type\">int</span> symbolCount, <span class=\"hljs-type\">boolean</span> defaultSymbolFlag, <span class=\"hljs-type\">boolean</span> shuffleFlag)</span> &#123;<br>        <span class=\"hljs-comment\">//生成类型数量</span><br>        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">typeNum</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">3</span>;<br>        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">excludeSymbolCount</span> <span class=\"hljs-operator\">=</span> len - symbolCount;<br>        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">count</span> <span class=\"hljs-operator\">=</span> (symbolCount &gt; <span class=\"hljs-number\">0</span>) ? excludeSymbolCount / typeNum : len / typeNum;<br>        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">numberCount</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">         * 如果是类型的倍数则平均分，如果不是则补足一个大写字母</span><br><span class=\"hljs-comment\">         */</span><br>        <span class=\"hljs-keyword\">if</span> (len % typeNum == <span class=\"hljs-number\">0</span>) &#123;<br>            numberCount = count;<br>        &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>            numberCount += count + excludeSymbolCount % typeNum;<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> generatorRandomStr(count, count, numberCount, symbolCount, defaultSymbolFlag, shuffleFlag);<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成指定长度随机字符串，且特殊字符固定一位，默认使用固定字符串，默认二次打乱，类型数量固定，如有多余则自动补足数字类型</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> len                   随机字符串长度</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorDefaultRandomStr</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> len)</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> generatorDefaultRandomStr(len, <span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>);<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 生成八位随机字符串，且特殊字符固定一位，默认使用固定字符串，默认二次打乱，类型数量固定，如有多余则自动补足数字类型</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">generatorDefaultRandomStr</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> generatorDefaultRandomStr(<span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>);<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 二次打乱字符串</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> randomStr   随机字符串</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">shuffleRandomStr</span><span class=\"hljs-params\">(String randomStr)</span> &#123;<br>        List&lt;Character&gt; numberList = randomStr.chars().mapToObj(c -&gt; (<span class=\"hljs-type\">char</span>) c).collect(Collectors.toList());<br>        Collections.shuffle(numberList);<br>        <span class=\"hljs-keyword\">return</span> numberList<br>                .stream()<br>                .collect(StringBuilder::<span class=\"hljs-keyword\">new</span>, StringBuilder::append, StringBuilder::append).toString();<br>    &#125;<br><br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 异常信息</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">VerificationCodeException</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">RuntimeException</span>&#123;<br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">VerificationCodeException</span><span class=\"hljs-params\">(String message)</span> &#123;<span class=\"hljs-built_in\">super</span>(message);&#125;<br><br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">VerificationCodeException</span><span class=\"hljs-params\">(String message,Throwable throwable)</span> &#123;<br>            <span class=\"hljs-built_in\">super</span>(message, throwable);<br>        &#125;<br><br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n",
            "tags": [
                "JAVA",
                "VerificationCode"
            ]
        }
    ]
}