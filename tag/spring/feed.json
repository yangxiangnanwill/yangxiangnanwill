{
    "version": "https://jsonfeed.org/version/1",
    "title": "Will • All posts by \"spring\" tag",
    "description": "愿你一生努力，一生被爱",
    "home_page_url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io",
    "items": [
        {
            "id": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/Spring/SpringBoot%E7%88%AC%E8%99%AB/",
            "url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/Spring/SpringBoot%E7%88%AC%E8%99%AB/",
            "title": "SpringBoot爬虫",
            "date_published": "2024-01-03T13:13:21.649Z",
            "content_html": "<h1 id=\"SpringBoot爬虫\"><a href=\"#SpringBoot爬虫\" class=\"headerlink\" title=\"SpringBoot爬虫\"></a>SpringBoot爬虫</h1><h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><blockquote>\n<p>此文章只是为了学习http请求、jsoup、SpringBoot集成等技术，不是故意爬取数据，文章仅仅记录学习过程！</p>\n</blockquote>\n<h1 id=\"什么是爬虫\"><a href=\"#什么是爬虫\" class=\"headerlink\" title=\"什么是爬虫\"></a>什么是爬虫</h1><h2 id=\"爬虫简介\"><a href=\"#爬虫简介\" class=\"headerlink\" title=\"爬虫简介\"></a>爬虫简介</h2><blockquote>\n<p>网络爬虫（又被称为网页<a href=\"https://baike.baidu.com/item/%E8%9C%98%E8%9B%9B/8135707\">蜘蛛</a>，网络机器人，在<a href=\"https://baike.baidu.com/item/FOAF\">FOAF</a>社区中间，更经常的称为网页追逐者），是一种按照一定的规则，自动地抓取<a href=\"https://baike.baidu.com/item/%E4%B8%87%E7%BB%B4%E7%BD%91/215515\">万维网</a>信息的程序或者脚本。</p>\n<p>　　简单来说就是通过编写脚本模拟浏览器发起请求获取数据。</p>\n</blockquote>\n<h2 id=\"爬虫分类\"><a href=\"#爬虫分类\" class=\"headerlink\" title=\"爬虫分类\"></a>爬虫分类</h2><ul>\n<li>通用网络爬虫（General Purpose Web Crawler）：爬取一整张页面源码数据. 抓取系统(爬虫)</li>\n<li>聚焦网络爬虫（Focused Web Crawler）：爬取的是一张页面中局部的数据(数据解析)</li>\n<li>增量式网络爬虫（Incremental Web Crawler）：用于监测网站数据更新的情况,从而爬取网站中最新更新出来的数据</li>\n<li>深层网络爬虫（Deep Web Crawler）:Web 页面按存在方式可以分为表层网页（Surface Web）和深层网页（Deep Web，也称 Invisible Web Pages 或 Hidden Web）。 表层网页是指传统搜索引擎可以索引的页面，以超链接可以到达的静态网页为主构成的 Web 页面。Deep Web 是那些大部分内容不能通过静态链接获取的、隐藏在搜索表单后的，只有用户提交一些关键词才能获得的 Web 页面。</li>\n</ul>\n<h2 id=\"反爬机制与反反爬策略\"><a href=\"#反爬机制与反反爬策略\" class=\"headerlink\" title=\"反爬机制与反反爬策略\"></a>反爬机制与反反爬策略</h2><p>爬虫：使用任何技术手段，批量获取网站信息的一种方式。</p>\n<p>反爬虫：使用任何技术手段，阻止别人批量获取自己网站信息的一种方式。</p>\n<p>反爬方式：</p>\n<ul>\n<li><code>robots.txt协议</code></li>\n<li><code>UA（User-Agent用户访问网站时候的浏览器标识）限制</code></li>\n<li>UA反爬随机请求头</li>\n<li>ip限制（限制ip访问频率和次数进行反爬）————-构造自己的 IP 代理池，然后每次访问时随机选择代理</li>\n<li>Ajax动态加载——-使用审查元素分析”请求“对应的链接:在url请求的response中进行局部搜索当前内容，如果没有就点击左边任意请求，进行ctrl+f全局搜索，找到对应的请求(抓包工具推荐:fiddler)</li>\n<li>验证码反爬虫或者模拟登陆</li>\n<li>cookie限制</li>\n</ul>\n<h1 id=\"爬虫案例学习\"><a href=\"#爬虫案例学习\" class=\"headerlink\" title=\"爬虫案例学习\"></a>爬虫案例学习</h1><h2 id=\"案例需求\"><a href=\"#案例需求\" class=\"headerlink\" title=\"案例需求\"></a>案例需求</h2><blockquote>\n<p>前面介绍了几种爬虫的分类，这里我们使用聚焦网络爬虫，抓取汽车之家上的汽车评测数据。<a href=\"https://www.autohome.com.cn/bestauto/\">https://www.autohome.com.cn/bestauto/</a></p>\n<p>我们需要抓取汽车之家上面所有的汽车评测数据</p>\n<p><img src=\"https://i.loli.net/2021/05/09/gU3m18fBsMroERz.png\" alt=\"image.png\"></p>\n</blockquote>\n<p>在页面上我们分析，需要抓取以下部分的数据:</p>\n<ul>\n<li>车型信息</li>\n<li>评测信息</li>\n</ul>\n<blockquote>\n<p>排名是动态生成的，我们这里不做抓取，可以后期单独处理排名</p>\n</blockquote>\n<ul>\n<li>编辑点评</li>\n<li>评测图片</li>\n</ul>\n<blockquote>\n<p>有5张图片，页面显示的是小图，我们需要打开超链接获取大图的url地址，再单独下载图片</p>\n</blockquote>\n<h2 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h2><h3 id=\"使用技术\"><a href=\"#使用技术\" class=\"headerlink\" title=\"使用技术\"></a>使用技术</h3><ul>\n<li>JDK1.8+</li>\n<li>SpringBoot2.X</li>\n<li>MyBatisPlus</li>\n<li>SpringMVC</li>\n<li>HttpClient</li>\n<li>Jsoup</li>\n<li>Quartz</li>\n</ul>\n<h3 id=\"搭建工程\"><a href=\"#搭建工程\" class=\"headerlink\" title=\"搭建工程\"></a>搭建工程</h3><h4 id=\"设置依赖\"><a href=\"#设置依赖\" class=\"headerlink\" title=\"设置依赖\"></a>设置依赖</h4><ul>\n<li>新建MAVEN项目</li>\n<li>设置父工程</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">parent</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.1.3.RELEASE<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">parent</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>设置项目依赖</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">properties</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">project.build.sourceEncoding</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">project.reporting.outputEncoding</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">java.version</span>&gt;</span>1.8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">java.version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">mybatisplus.version</span>&gt;</span>3.3.2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">mybatisplus.version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">alibaba.boot.druid</span>&gt;</span>1.1.22<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">alibaba.boot.druid</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">properties</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencies</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">scope</span>&gt;</span>test<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">scope</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.baomidou<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>$&#123;mybatisplus.version&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">exclusions</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">exclusion</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.baomidou<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>mybatis-plus-generator<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">exclusion</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">exclusions</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>mysql<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">scope</span>&gt;</span>runtime<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">scope</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.alibaba<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>druid-spring-boot-starter<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>$&#123;alibaba.boot.druid&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-comment\">&lt;!-- 工具类 --&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.apache.commons<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>commons-lang3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>3.3.2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>commons-io<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>commons-io<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.6<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-comment\">&lt;!-- quartz依赖 --&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter-quartz<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-comment\">&lt;!-- HttpClient --&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.apache.httpcomponents<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>httpclient<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-comment\">&lt;!-- jsoup --&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.jsoup<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>jsoup<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.10.3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-comment\">&lt;!--lombok插件 --&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.projectlombok<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>lombok<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.18.6<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">optional</span>&gt;</span>true<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">optional</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencies</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"设置配置\"><a href=\"#设置配置\" class=\"headerlink\" title=\"设置配置\"></a>设置配置</h4><blockquote>\n<p>配置路径：src&#x2F;main&#x2F;resources</p>\n</blockquote>\n<ul>\n<li>创建<code>application.yml</code></li>\n</ul>\n<blockquote>\n<p>配置总体环境，方便切换环境</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">spring:</span><br>  <span class=\"hljs-attr\">profiles:</span><br>    <span class=\"hljs-attr\">active:</span> <span class=\"hljs-string\">dev</span><br>  <span class=\"hljs-attr\">application:</span><br>    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">spider-autohome</span><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>创建测试环境配置<code>application-dev.yml</code></li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">server:</span><br>  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">8080</span><br>  <span class=\"hljs-attr\">tomcat:</span><br>    <span class=\"hljs-attr\">max-swallow-size:</span> <span class=\"hljs-string\">100MB</span><br><br><span class=\"hljs-comment\">#配置数据源</span><br><span class=\"hljs-attr\">spring:</span><br>  <span class=\"hljs-attr\">datasource:</span><br>    <span class=\"hljs-attr\">druid:</span><br>      <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">com.alibaba.druid.pool.DruidDataSource</span><br>      <span class=\"hljs-attr\">driverClassName:</span> <span class=\"hljs-string\">com.mysql.cj.jdbc.Driver</span><br>      <span class=\"hljs-attr\">url:</span> <span class=\"hljs-string\">jdbc:mysql://192.168.56.120:3306/spider-autohome?serverTimezone=Asia/Shanghai&amp;characterEncoding=utf8&amp;useSSL=false</span><br>      <span class=\"hljs-attr\">username:</span> <span class=\"hljs-string\">root</span><br>      <span class=\"hljs-attr\">password:</span> <span class=\"hljs-number\">123456</span><br>      <span class=\"hljs-comment\"># 初始化连接大小</span><br>      <span class=\"hljs-attr\">initial-size:</span> <span class=\"hljs-number\">5</span><br>      <span class=\"hljs-comment\"># 最小空闲连接数</span><br>      <span class=\"hljs-attr\">min-idle:</span> <span class=\"hljs-number\">5</span><br>      <span class=\"hljs-attr\">max-active:</span> <span class=\"hljs-number\">30</span><br>      <span class=\"hljs-attr\">max-wait:</span> <span class=\"hljs-number\">60000</span><br>      <span class=\"hljs-comment\"># 可关闭的空闲连接间隔时间</span><br>      <span class=\"hljs-attr\">time-between-eviction-runs-millis:</span> <span class=\"hljs-number\">60000</span><br>      <span class=\"hljs-comment\"># 配置连接在池中的最小生存时间</span><br>      <span class=\"hljs-attr\">min-evictable-idle-time-millis:</span> <span class=\"hljs-number\">300000</span><br>      <span class=\"hljs-attr\">validation-query:</span> <span class=\"hljs-string\">select</span> <span class=\"hljs-string\">&#x27;1&#x27;</span> <span class=\"hljs-string\">from</span> <span class=\"hljs-string\">dual</span><br>      <span class=\"hljs-attr\">test-while-idle:</span> <span class=\"hljs-literal\">true</span><br>      <span class=\"hljs-attr\">test-on-borrow:</span> <span class=\"hljs-literal\">false</span><br>      <span class=\"hljs-attr\">test-on-return:</span> <span class=\"hljs-literal\">false</span><br>      <span class=\"hljs-comment\"># 打开PSCache，并且指定每个连接上PSCache的大小</span><br>      <span class=\"hljs-attr\">pool-prepared-statements:</span> <span class=\"hljs-literal\">true</span><br>      <span class=\"hljs-attr\">max-open-prepared-statements:</span> <span class=\"hljs-number\">50</span><br>      <span class=\"hljs-attr\">max-pool-prepared-statement-per-connection-size:</span> <span class=\"hljs-number\">20</span><br>      <span class=\"hljs-comment\"># 配置监控统计拦截的filters</span><br>      <span class=\"hljs-attr\">filters:</span> <span class=\"hljs-string\">stat</span><br>      <span class=\"hljs-attr\">stat-view-servlet:</span><br>        <span class=\"hljs-attr\">url-pattern:</span> <span class=\"hljs-string\">/druid/*</span><br>        <span class=\"hljs-attr\">reset-enable:</span> <span class=\"hljs-literal\">false</span><br>        <span class=\"hljs-attr\">login-username:</span> <span class=\"hljs-string\">admin</span><br>        <span class=\"hljs-attr\">login-password:</span> <span class=\"hljs-number\">123456</span><br>      <span class=\"hljs-attr\">web-stat-filter:</span><br>        <span class=\"hljs-attr\">url-pattern:</span> <span class=\"hljs-string\">/*</span><br>        <span class=\"hljs-attr\">exclusions:</span> <span class=\"hljs-string\">&quot;*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*&quot;</span><br>  <span class=\"hljs-attr\">servlet:</span><br>    <span class=\"hljs-attr\">multipart:</span><br>      <span class=\"hljs-attr\">max-file-size:</span> <span class=\"hljs-string\">50MB</span><br>      <span class=\"hljs-attr\">max-request-size:</span> <span class=\"hljs-string\">50MB</span><br><br><span class=\"hljs-comment\"># 配置mybatis-plus日志打印</span><br><span class=\"hljs-attr\">mybatis-plus:</span><br>  <span class=\"hljs-attr\">configuration:</span><br>    <span class=\"hljs-attr\">log-impl:</span> <span class=\"hljs-string\">org.apache.ibatis.logging.stdout.StdOutImpl</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"SpringBoot入门\"><a href=\"#SpringBoot入门\" class=\"headerlink\" title=\"SpringBoot入门\"></a>SpringBoot入门</h2><blockquote>\n<p>这里先实现入门程序，用以熟悉SpringBoot的使用。</p>\n<p>需求：浏览器访问，获取数据库时间</p>\n</blockquote>\n<h3 id=\"创建启动引导类\"><a href=\"#创建启动引导类\" class=\"headerlink\" title=\"创建启动引导类\"></a>创建启动引导类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@SpringBootApplication</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">SpiderAutoHomeApplication</span> &#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> &#123;<br>        SpringApplication.run(SpiderAutoHomeApplication.class,args);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"编写测试DAO\"><a href=\"#编写测试DAO\" class=\"headerlink\" title=\"编写测试DAO\"></a>编写测试DAO</h3><ul>\n<li>创建dao文件夹，创建<code>TestDao</code>接口文件</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Mapper</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">TestDao</span> &#123;<br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 查询当前时间</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-meta\">@Select(&quot;SELECT NOW()&quot;)</span><br>    <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">queryNowDate</span><span class=\"hljs-params\">()</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"编写测试SERVICE\"><a href=\"#编写测试SERVICE\" class=\"headerlink\" title=\"编写测试SERVICE\"></a>编写测试SERVICE</h3><ul>\n<li>创建service文件夹，创建<code>TestService</code>文件</li>\n</ul>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">TestService</span> &#123;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 查询当前时间</span><br><span class=\"hljs-comment\">     * @return</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">queryNowDate</span>()</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"编写测试SERVICE实现\"><a href=\"#编写测试SERVICE实现\" class=\"headerlink\" title=\"编写测试SERVICE实现\"></a>编写测试SERVICE实现</h3><ul>\n<li>在service文件夹下创建impl文件夹，创建<code>TestServiceImpl</code>文件</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Service</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TestServiceImpl</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">TestService</span> &#123;<br><br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">private</span> TestDao testDao;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">queryNowDate</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> testDao.queryNowDate();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"编写请求CONTROLLER\"><a href=\"#编写请求CONTROLLER\" class=\"headerlink\" title=\"编写请求CONTROLLER\"></a>编写请求CONTROLLER</h3><ul>\n<li>创建controller文件夹，创建<code>TestController</code>文件</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@RestController</span><br><span class=\"hljs-meta\">@RequestMapping(&quot;/test&quot;)</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TestController</span> &#123;<br><br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">private</span> TestService testService;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 查询当前时间</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-meta\">@GetMapping(value = &quot;/queryNowDate&quot;)</span><br>    <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">queryNowDate</span><span class=\"hljs-params\">()</span>&#123;<br>        <span class=\"hljs-keyword\">return</span> testService.queryNowDate();<br>    &#125;<br><br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动测试\"><a href=\"#启动测试\" class=\"headerlink\" title=\"启动测试\"></a>启动测试</h3><ul>\n<li>启动application启动类</li>\n<li>在浏览器输入请求测试地址：<code>http://localhost:8080/test/queryNowDate</code></li>\n<li>查看返回结果:<code>2021-05-09 09:31:42</code></li>\n</ul>\n<h2 id=\"开发分析\"><a href=\"#开发分析\" class=\"headerlink\" title=\"开发分析\"></a>开发分析</h2><h3 id=\"流程分析\"><a href=\"#流程分析\" class=\"headerlink\" title=\"流程分析\"></a>流程分析</h3><blockquote>\n<p>分析发现，评测页的url是:</p>\n<p><code>https://www.autohome.com.cn/bestauto/1</code></p>\n<p>最后一个参数是页码数，我们只需要按顺序从第一页开始，把所有的页面都抓取下来就可以了</p>\n</blockquote>\n<h4 id=\"抓取页面的流程如下\"><a href=\"#抓取页面的流程如下\" class=\"headerlink\" title=\"抓取页面的流程如下\"></a>抓取页面的流程如下</h4><p><img src=\"https://ftp.bmp.ovh/imgs/2021/05/9a5699ef90a52691.jpg\"></p>\n<h4 id=\"抓取评测数据步骤\"><a href=\"#抓取评测数据步骤\" class=\"headerlink\" title=\"抓取评测数据步骤\"></a>抓取评测数据步骤</h4><ul>\n<li>根据url抓取html页面</li>\n<li>对html页面进行解析，获取该页面所有的评测数据</li>\n<li>遍历所有的评测数据</li>\n<li>判断遍历的评测数据是否已保存，</li>\n<li>如果已保存再次遍历下一条评测数据</li>\n<li>如果未保存执行下一步</li>\n<li>保存评测数据到数据库中</li>\n</ul>\n<h3 id=\"数据库表设计\"><a href=\"#数据库表设计\" class=\"headerlink\" title=\"数据库表设计\"></a>数据库表设计</h3><blockquote>\n<p>根据以上需求，设计数据库表。sql如下：</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TABLE</span> `car_test` (<br>  `id` <span class=\"hljs-type\">bigint</span>(<span class=\"hljs-number\">10</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span> AUTO_INCREMENT COMMENT <span class=\"hljs-string\">&#x27;主键id&#x27;</span>,<br>  `title` <span class=\"hljs-type\">varchar</span>(<span class=\"hljs-number\">100</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span> COMMENT <span class=\"hljs-string\">&#x27;评测车辆的名字&#x27;</span>,<br>  `test_speed` <span class=\"hljs-type\">int</span>(<span class=\"hljs-number\">150</span>) <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-keyword\">NULL</span> COMMENT <span class=\"hljs-string\">&#x27;评测项目-加速(0-100公里/小时),单位毫秒&#x27;</span>,<br>  `test_brake` <span class=\"hljs-type\">int</span>(<span class=\"hljs-number\">150</span>) <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-keyword\">NULL</span> COMMENT <span class=\"hljs-string\">&#x27;评测项目-刹车(100-0公里/小时),单位毫米&#x27;</span>,<br>  `test_oil` <span class=\"hljs-type\">int</span>(<span class=\"hljs-number\">150</span>) <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-keyword\">NULL</span> COMMENT <span class=\"hljs-string\">&#x27;评测项目-实测油耗(升/100公里)，单位毫升&#x27;</span>,<br>  `editor_name1` <span class=\"hljs-type\">varchar</span>(<span class=\"hljs-number\">10</span>) <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-keyword\">NULL</span> COMMENT <span class=\"hljs-string\">&#x27;评测编辑1&#x27;</span>,<br>  `editor_remark1` <span class=\"hljs-type\">varchar</span>(<span class=\"hljs-number\">1000</span>) <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-keyword\">NULL</span> COMMENT <span class=\"hljs-string\">&#x27;点评内容1&#x27;</span>,<br>  `editor_name2` <span class=\"hljs-type\">varchar</span>(<span class=\"hljs-number\">10</span>) <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-keyword\">NULL</span> COMMENT <span class=\"hljs-string\">&#x27;评测编辑2&#x27;</span>,<br>  `editor_remark2` <span class=\"hljs-type\">varchar</span>(<span class=\"hljs-number\">1000</span>) <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-keyword\">NULL</span> COMMENT <span class=\"hljs-string\">&#x27;点评内容2&#x27;</span>,<br>  `editor_name3` <span class=\"hljs-type\">varchar</span>(<span class=\"hljs-number\">10</span>) <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-keyword\">NULL</span> COMMENT <span class=\"hljs-string\">&#x27;评测编辑3&#x27;</span>,<br>  `editor_remark3` <span class=\"hljs-type\">varchar</span>(<span class=\"hljs-number\">1000</span>) <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-keyword\">NULL</span> COMMENT <span class=\"hljs-string\">&#x27;点评内容3&#x27;</span>,<br>  `image` <span class=\"hljs-type\">varchar</span>(<span class=\"hljs-number\">1000</span>) <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-keyword\">NULL</span> COMMENT <span class=\"hljs-string\">&#x27;评测图片，5张图片名，中间用,分隔&#x27;</span>,<br>  `created` datetime <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-keyword\">NULL</span> COMMENT <span class=\"hljs-string\">&#x27;创建时间&#x27;</span>,<br>  `updated` datetime <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-keyword\">NULL</span> COMMENT <span class=\"hljs-string\">&#x27;更新时间&#x27;</span>,<br>  <span class=\"hljs-keyword\">PRIMARY</span> KEY (`id`)<br>) ENGINE<span class=\"hljs-operator\">=</span>InnoDB AUTO_INCREMENT<span class=\"hljs-operator\">=</span><span class=\"hljs-number\">7</span> <span class=\"hljs-keyword\">DEFAULT</span> CHARSET<span class=\"hljs-operator\">=</span>utf8 COMMENT<span class=\"hljs-operator\">=</span><span class=\"hljs-string\">&#x27;汽车之家评测表&#x27;</span>;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"开发准备\"><a href=\"#开发准备\" class=\"headerlink\" title=\"开发准备\"></a>开发准备</h3><h4 id=\"编写实体ENTITY\"><a href=\"#编写实体ENTITY\" class=\"headerlink\" title=\"编写实体ENTITY\"></a>编写实体ENTITY</h4><ul>\n<li>创建module【这个依据个人喜好】文件夹，创建<code>CarTest</code>实体对象和数据库表进行映射</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Data</span><br><span class=\"hljs-meta\">@TableName(value = &quot;car_test&quot;)</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">CarTest</span> &#123;<br>    <span class=\"hljs-meta\">@TableId(type = IdType.AUTO)</span><br>    <span class=\"hljs-keyword\">private</span> Long id;<br>    <span class=\"hljs-keyword\">private</span> String title;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">int</span> testSpeed;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">int</span> testBrake;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">int</span> testOil;<br>    <span class=\"hljs-keyword\">private</span> String editorName1;<br>    <span class=\"hljs-keyword\">private</span> String editorRemark1;<br>    <span class=\"hljs-keyword\">private</span> String editorName2;<br>    <span class=\"hljs-keyword\">private</span> String editorRemark2;<br>    <span class=\"hljs-keyword\">private</span> String editorName3;<br>    <span class=\"hljs-keyword\">private</span> String editorRemark3;<br>    <span class=\"hljs-keyword\">private</span> String image;<br>    <span class=\"hljs-keyword\">private</span> Date created;<br>    <span class=\"hljs-keyword\">private</span> Date updated;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"编写DAO\"><a href=\"#编写DAO\" class=\"headerlink\" title=\"编写DAO\"></a>编写DAO</h4><ul>\n<li>在dao文件夹下面创建<code>CarTestDao</code></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Mapper</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">CarTestDao</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">BaseMapper</span>&lt;CarTest&gt; &#123;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"编写SERVICE\"><a href=\"#编写SERVICE\" class=\"headerlink\" title=\"编写SERVICE\"></a>编写SERVICE</h4><ul>\n<li>在service文件夹下面创建<code>CarTestService</code></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">CarTestService</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">IService</span>&lt;CarTest&gt; &#123;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 分页查询标题</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> page          当前页</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> pageSize      分页大小</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> Page&lt;CarTest&gt; <span class=\"hljs-title function_\">queryTitleByPage</span><span class=\"hljs-params\">(<span class=\"hljs-type\">long</span> page, <span class=\"hljs-type\">long</span> pageSize)</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"编写SERVICE实现\"><a href=\"#编写SERVICE实现\" class=\"headerlink\" title=\"编写SERVICE实现\"></a>编写SERVICE实现</h4><ul>\n<li>service文件夹下impl文件夹新建<code>CarTestServiceImpl</code></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Service</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">CarTestServiceImpl</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">ServiceImpl</span>&lt;CarTestDao,CarTest&gt; <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">CarTestService</span> &#123;<br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> Page&lt;CarTest&gt; <span class=\"hljs-title function_\">queryTitleByPage</span><span class=\"hljs-params\">(<span class=\"hljs-type\">long</span> page, <span class=\"hljs-type\">long</span> pageSize)</span> &#123;<br>        Page&lt;CarTest&gt; queryPage = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Page</span>&lt;&gt;(page, pageSize);<br>        QueryWrapper&lt;CarTest&gt; queryWrapper = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">QueryWrapper</span>&lt;&gt;();<br>        queryWrapper.select(<span class=\"hljs-string\">&quot;title&quot;</span>);<br>        <span class=\"hljs-keyword\">return</span>  baseMapper.selectPage(queryPage, queryWrapper);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"爬取数据\"><a href=\"#爬取数据\" class=\"headerlink\" title=\"爬取数据\"></a>爬取数据</h2><h3 id=\"HTTP连接池管理器\"><a href=\"#HTTP连接池管理器\" class=\"headerlink\" title=\"HTTP连接池管理器\"></a>HTTP连接池管理器</h3><blockquote>\n<p>因为我们爬取数据是使用的HTTP请求，我们需要一个管理HTTP连接的一个工具，所以我们定义一个HTTP连接池管理工具，交给Spring进行管理。</p>\n<p>使用以下两个注解</p>\n<p>@Configuration注解声明配置类。</p>\n<p>@Bean注解声明如何创建这实例</p>\n</blockquote>\n<ul>\n<li>新建config文件夹，创建<code>HttpClientManagerCfg</code></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Configuration</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">HttpClientManagerCfg</span> &#123;<br>    <span class=\"hljs-meta\">@Bean</span><br>    <span class=\"hljs-keyword\">public</span> PoolingHttpClientConnectionManager <span class=\"hljs-title function_\">poolingHttpClientConnectionManager</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-comment\">// 创建连接管理器</span><br>        <span class=\"hljs-type\">PoolingHttpClientConnectionManager</span> <span class=\"hljs-variable\">httpClientConnectionManager</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">PoolingHttpClientConnectionManager</span>();<br>        <span class=\"hljs-comment\">// 设置最大连接数</span><br>        httpClientConnectionManager.setMaxTotal(<span class=\"hljs-number\">50</span>);<br>        <span class=\"hljs-comment\">// 设置每个并发连接数</span><br>        httpClientConnectionManager.setDefaultMaxPerRoute(<span class=\"hljs-number\">20</span>);<br>        <span class=\"hljs-keyword\">return</span> httpClientConnectionManager;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"定时关闭失效连接\"><a href=\"#定时关闭失效连接\" class=\"headerlink\" title=\"定时关闭失效连接\"></a>定时关闭失效连接</h3><blockquote>\n<p>这里使用Quartz定时任务来处理定时关闭失效连接</p>\n</blockquote>\n<ul>\n<li>新建job文件夹，创建<code>CloseHttpConnectionJob</code>文件,编写定时任务</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Slf4j</span><br><span class=\"hljs-meta\">@DisallowConcurrentExecution</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">CloseHttpConnectionJob</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">QuartzJobBean</span> &#123;<br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">protected</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">executeInternal</span><span class=\"hljs-params\">(JobExecutionContext context)</span> <span class=\"hljs-keyword\">throws</span> JobExecutionException &#123;<br>        <span class=\"hljs-type\">ApplicationContext</span> <span class=\"hljs-variable\">applicationContext</span> <span class=\"hljs-operator\">=</span> (ApplicationContext) context.getJobDetail().getJobDataMap().get(<span class=\"hljs-string\">&quot;context&quot;</span>);<br>        <span class=\"hljs-type\">PoolingHttpClientConnectionManager</span> <span class=\"hljs-variable\">httpClientPool</span> <span class=\"hljs-operator\">=</span> applicationContext.getBean(PoolingHttpClientConnectionManager.class);<br>        httpClientPool.closeExpiredConnections();<br>        log.info(<span class=\"hljs-string\">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; closeExpiredConnections&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"定时任务配置\"><a href=\"#定时任务配置\" class=\"headerlink\" title=\"定时任务配置\"></a>定时任务配置</h3><ul>\n<li>在config目录下雪创建<code>QuartzConfig</code>文件</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Configuration</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">QuartzConfig</span> &#123;<br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 定义关闭无效连接任务</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-meta\">@Bean(&quot;closeHttpConnectionJob&quot;)</span><br>    <span class=\"hljs-keyword\">public</span> JobDetailFactoryBean <span class=\"hljs-title function_\">closeHttpConnectionJob</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-type\">JobDetailFactoryBean</span> <span class=\"hljs-variable\">jobDetailFactoryBean</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">JobDetailFactoryBean</span>();<br>        jobDetailFactoryBean.setApplicationContextJobDataKey(<span class=\"hljs-string\">&quot;context&quot;</span>);<br>        jobDetailFactoryBean.setJobClass(CloseHttpConnectionJob.class);<br>        jobDetailFactoryBean.setDurability(<span class=\"hljs-literal\">true</span>);<br><br>        <span class=\"hljs-keyword\">return</span> jobDetailFactoryBean;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 定义关闭无效连接触发器</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-meta\">@Bean(&quot;closeHttpConnectionJobTrigger&quot;)</span><br>    <span class=\"hljs-keyword\">public</span> CronTriggerFactoryBean <span class=\"hljs-title function_\">closeHttpConnectionJobTrigger</span><span class=\"hljs-params\">(</span><br><span class=\"hljs-params\">            <span class=\"hljs-meta\">@Qualifier(value = &quot;closeHttpConnectionJob&quot;)</span> JobDetailFactoryBean itemJobBean)</span> &#123;<br>        <span class=\"hljs-type\">CronTriggerFactoryBean</span> <span class=\"hljs-variable\">tigger</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">CronTriggerFactoryBean</span>();<br>        tigger.setJobDetail(itemJobBean.getObject());<br>        tigger.setCronExpression(<span class=\"hljs-string\">&quot;0/5 * * * * ? &quot;</span>);<br>        <span class=\"hljs-keyword\">return</span> tigger;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 定义调度器</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-meta\">@Bean</span><br>    <span class=\"hljs-keyword\">public</span> SchedulerFactoryBean <span class=\"hljs-title function_\">schedulerFactory</span><span class=\"hljs-params\">(CronTrigger[] cronTriggerImpl)</span> &#123;<br>        <span class=\"hljs-type\">SchedulerFactoryBean</span> <span class=\"hljs-variable\">bean</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">SchedulerFactoryBean</span>();<br>        bean.setTriggers(cronTriggerImpl);<br>        <span class=\"hljs-keyword\">return</span> bean;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"编写APISERVICE业务接口\"><a href=\"#编写APISERVICE业务接口\" class=\"headerlink\" title=\"编写APISERVICE业务接口\"></a>编写APISERVICE业务接口</h3><blockquote>\n<p>需要实现两个功能的下载：</p>\n<p>请求获取页面数据[GET]</p>\n<p>请求下载图片[GET]</p>\n</blockquote>\n<ul>\n<li>新建api.service目录，创建<code>AutoHomeApiService</code>文件</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">AutoHomeApiService</span> &#123;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 使用get请求获取页面数据</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> url</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">getHtml</span><span class=\"hljs-params\">(String url)</span>;<br><br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 使用get请求下载图片,返回图片名称</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> url</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">getImage</span><span class=\"hljs-params\">(String url)</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"编写APISERVICE实现业务接口\"><a href=\"#编写APISERVICE实现业务接口\" class=\"headerlink\" title=\"编写APISERVICE实现业务接口\"></a>编写APISERVICE实现业务接口</h3><ul>\n<li>在api.service下面创建impl文件夹，创建<code>AutoHomeApiServiceImpl</code>文件</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Service</span><br><span class=\"hljs-meta\">@Slf4j</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">AutoHomeApiServiceImpl</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">AutoHomeApiService</span> &#123;<br><br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">private</span> PoolingHttpClientConnectionManager connectionManager;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">getHtml</span><span class=\"hljs-params\">(String url)</span> &#123;<br>        <span class=\"hljs-comment\">// 使用连接池管理器获取连接</span><br>        <span class=\"hljs-type\">CloseableHttpClient</span> <span class=\"hljs-variable\">httpClient</span> <span class=\"hljs-operator\">=</span> HttpClients.custom().setConnectionManager(connectionManager).build();<br>        <span class=\"hljs-comment\">// 创建httpGet请求</span><br>        <span class=\"hljs-type\">HttpGet</span> <span class=\"hljs-variable\">httpGet</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">HttpGet</span>(url);<br>        <span class=\"hljs-type\">CloseableHttpResponse</span> <span class=\"hljs-variable\">httpResponse</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-literal\">null</span>;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">html</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-literal\">null</span>;<br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            <span class=\"hljs-comment\">// 发起请求</span><br>             httpResponse = httpClient.execute(httpGet);<br>            <span class=\"hljs-comment\">// 判断请求是否成功</span><br>            <span class=\"hljs-keyword\">if</span> (httpResponse != <span class=\"hljs-literal\">null</span> &amp;&amp; httpResponse.getStatusLine().getStatusCode() == <span class=\"hljs-number\">200</span>) &#123;<br>                <span class=\"hljs-comment\">// 判断是否有响应体</span><br>                <span class=\"hljs-keyword\">if</span> (httpResponse.getEntity() != <span class=\"hljs-literal\">null</span>) &#123;<br>                    <span class=\"hljs-comment\">// 如果有响应体，则进行解析</span><br>                    html = EntityUtils.toString(httpResponse.getEntity(), Charsets.UTF_8);<br>                    <span class=\"hljs-keyword\">return</span> html;<br>                &#125;<br>            &#125;<br>        &#125; <span class=\"hljs-keyword\">catch</span> (IOException e) &#123;<br>            e.printStackTrace();<br>            log.error(<span class=\"hljs-string\">&quot;获取汽车之家信息异常：&#123;&#125;&quot;</span>, e);<br>        &#125;<span class=\"hljs-keyword\">finally</span> &#123;<br>            <span class=\"hljs-keyword\">if</span> (httpResponse != <span class=\"hljs-literal\">null</span>) &#123;<br>                <span class=\"hljs-keyword\">try</span> &#123;<br>                    httpResponse.close();<br>                &#125; <span class=\"hljs-keyword\">catch</span> (IOException e) &#123;<br>                    e.printStackTrace();<br>                    log.error(<span class=\"hljs-string\">&quot;获取汽车之家信息响应关闭异常：&#123;&#125;&quot;</span>, e);<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;<br>    &#125;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">getImage</span><span class=\"hljs-params\">(String url)</span> &#123;<br>        <span class=\"hljs-type\">CloseableHttpClient</span> <span class=\"hljs-variable\">httpClient</span> <span class=\"hljs-operator\">=</span> HttpClients.custom().setConnectionManager(connectionManager).build();<br>        <span class=\"hljs-type\">HttpGet</span> <span class=\"hljs-variable\">httpGet</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">HttpGet</span>(url);<br>        <span class=\"hljs-type\">CloseableHttpResponse</span> <span class=\"hljs-variable\">httpResponse</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-literal\">null</span>;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">fileName</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-literal\">null</span>;<br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            httpResponse = httpClient.execute(httpGet);<br>            <span class=\"hljs-comment\">// 判断请求是否成功</span><br>            <span class=\"hljs-keyword\">if</span> (httpResponse != <span class=\"hljs-literal\">null</span> &amp;&amp; httpResponse.getStatusLine().getStatusCode() == <span class=\"hljs-number\">200</span>) &#123;<br>                <span class=\"hljs-comment\">// 判断是否有响应体</span><br>                <span class=\"hljs-keyword\">if</span> (httpResponse.getEntity() != <span class=\"hljs-literal\">null</span>) &#123;<br>                    <span class=\"hljs-comment\">// 如果有响应体，则进行解析</span><br>                    <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">contentTypeVal</span> <span class=\"hljs-operator\">=</span> httpResponse.getFirstHeader(<span class=\"hljs-string\">&quot;Content-Type&quot;</span>).getValue();<br>                    <span class=\"hljs-keyword\">if</span>(contentTypeVal.contains(<span class=\"hljs-string\">&quot;image/&quot;</span>))&#123;<br>                        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">extName</span> <span class=\"hljs-operator\">=</span>  contentTypeVal.split(<span class=\"hljs-string\">&quot;/&quot;</span>)[<span class=\"hljs-number\">1</span>];<br>                        fileName = UUID.randomUUID().toString().replace(<span class=\"hljs-string\">&quot;-&quot;</span>,<span class=\"hljs-string\">&quot;&quot;</span>) + <span class=\"hljs-string\">&quot;.&quot;</span> + extName;<br>                        <span class=\"hljs-type\">OutputStream</span> <span class=\"hljs-variable\">os</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FileOutputStream</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">File</span>(<span class=\"hljs-string\">&quot;D:/test/autohome-image/&quot;</span> + fileName));<br>                        httpResponse.getEntity().writeTo(os);<br>                        <span class=\"hljs-keyword\">return</span> fileName;<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125; <span class=\"hljs-keyword\">catch</span> (IOException e) &#123;<br>            e.printStackTrace();<br>            log.error(<span class=\"hljs-string\">&quot;获取汽车之家评测图片异常：&#123;&#125;&quot;</span>, e);<br>        &#125;<span class=\"hljs-keyword\">finally</span> &#123;<br>            <span class=\"hljs-keyword\">if</span> (httpResponse != <span class=\"hljs-literal\">null</span>) &#123;<br>                <span class=\"hljs-keyword\">try</span> &#123;<br>                    httpResponse.close();<br>                &#125; <span class=\"hljs-keyword\">catch</span> (IOException e) &#123;<br>                    e.printStackTrace();<br>                    log.error(<span class=\"hljs-string\">&quot;获取汽车之家评测图片响应关闭异常：&#123;&#125;&quot;</span>, e);<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"测试APISERVICE业务实现接口\"><a href=\"#测试APISERVICE业务实现接口\" class=\"headerlink\" title=\"测试APISERVICE业务实现接口\"></a>测试APISERVICE业务实现接口</h3><blockquote>\n<p>这里使用SpringBoot的测试组件，需要添加如下两个注解：</p>\n<ul>\n<li>@RunWith(value &#x3D; SpringJUnit4ClassRunner.class)</li>\n</ul>\n<p>让测试运行在spring的环境，这样我们测试的时候就可以和开发的时候一样编写代码,例如使用@Autowired注解直接注入</p>\n<ul>\n<li>@SpringBootTest(classes &#x3D; Application.class)</li>\n</ul>\n<p>执行当前的这个类是测试类,测试代码如下</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@RunWith(SpringJUnit4ClassRunner.class)</span><br><span class=\"hljs-meta\">@SpringBootTest(classes = SpiderAutoHomeApplication.class)</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">AutoHomeApiServiceTest</span> &#123;<br><br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">private</span> AutoHomeApiService autoHomeApiService;<br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">private</span> TitleFilter titleFilter;<br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">private</span> CarTestService carTestService;<br><br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 测试获取HTML内容</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-meta\">@Test</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">getHtml</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">html</span> <span class=\"hljs-operator\">=</span> autoHomeApiService.getHtml(<span class=\"hljs-string\">&quot;https://www.autohome.com.cn/bestauto/&quot;</span>);<br>        System.out.println(<span class=\"hljs-string\">&quot;html = &quot;</span> + html);<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 测试获取图片</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-meta\">@Test</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">getImage</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">image</span> <span class=\"hljs-operator\">=</span> autoHomeApiService.getImage(<span class=\"hljs-string\">&quot;https://car2.autoimg.cn/cardfs/product/g24/M09/AE/EB/800x0_1_q87_autohomecar__wKgHIVpxGh6AFSN1AAY8kcz3Aww921.jpg&quot;</span>);<br>        System.out.println(<span class=\"hljs-string\">&quot;image = &quot;</span> + image);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"去重过滤器\"><a href=\"#去重过滤器\" class=\"headerlink\" title=\"去重过滤器\"></a>去重过滤器</h2><p>在使用网络爬虫过程中，去重是一个不可避免的问题，这里需要对抓取的数据内容进行过滤，就是对车辆幸好名称进行去重过滤，避免同样条数据反复保存到数据库中。</p>\n<p>传统的去重，可以使用Map或者Set集合、哈希表的方式来实现去重，在数据量较小的情况下，使用这种方式没有问题。可是当我们需要大量爬去数据的时候，这种方式就存在很大问题。因为会极大的占用内存和系统资源，导致爬虫系统崩溃。这里将会使用布隆过滤器。</p>\n<h3 id=\"Bloom过滤器介绍\"><a href=\"#Bloom过滤器介绍\" class=\"headerlink\" title=\"Bloom过滤器介绍\"></a>Bloom过滤器介绍</h3><p>　布隆过滤器主要用于判断一个元素是否在一个集合中，它可以使用一个位数组简洁的表示一个数组。它的空间效率和查询时间远远超过一般的算法，但是它存在一定的误判的概率，适用于容忍误判的场景。如果布隆过滤器判断元素存在于一个集合中，那么大概率是存在在集合中，如果它判断元素不存在一个集合中，那么一定不存在于集合中。常常被用于大数据去重。</p>\n<p><strong>算法思想</strong></p>\n<p>　　布隆过滤器算法主要思想就是利用k个哈希函数计算得到不同的哈希值，然后映射到相应的位数组的索引上，将相应的索引位上的值设置为1。判断该元素是否出现在集合中，就是利用k个不同的哈希函数计算哈希值，看哈希值对应相应索引位置上面的值是否是1，如果有1个不是1，说明该元素不存在在集合中。但是也有可能判断元素在集合中，但是元素不在，这个元素所有索引位置上面的1都是别的元素设置的，这就导致一定的误判几率。布隆过滤的思想如下图所示：</p>\n<p><img src=\"https://ftp.bmp.ovh/imgs/2021/05/193a8c2fc8057747.png\"></p>\n<h3 id=\"布隆过滤器实现\"><a href=\"#布隆过滤器实现\" class=\"headerlink\" title=\"布隆过滤器实现\"></a>布隆过滤器实现</h3><ul>\n<li>创建util目录，创建<code>TitleFilter</code>文件</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TitleFilter</span> &#123;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">DEFAULT_SIZE</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">2</span> &lt;&lt; <span class=\"hljs-number\">24</span>;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">int</span>[] seeds = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[]&#123;<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">31</span>, <span class=\"hljs-number\">37</span>, <span class=\"hljs-number\">61</span>&#125;;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">BitSet</span> <span class=\"hljs-variable\">bits</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BitSet</span>(DEFAULT_SIZE);<br>    <span class=\"hljs-keyword\">private</span> SimpleHash[] func = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">SimpleHash</span>[seeds.length];<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">TitleFilter</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; seeds.length; i++) &#123;<br>            func[i] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">SimpleHash</span>(DEFAULT_SIZE, seeds[i]);<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">add</span><span class=\"hljs-params\">(String value)</span> &#123;<br>        <span class=\"hljs-keyword\">for</span> (SimpleHash f : func) &#123;<br>            bits.set(f.hash(value), <span class=\"hljs-literal\">true</span>);<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">boolean</span> <span class=\"hljs-title function_\">contains</span><span class=\"hljs-params\">(String value)</span> &#123;<br>        <span class=\"hljs-keyword\">if</span> (value == <span class=\"hljs-literal\">null</span>) &#123;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>        &#125;<br>        <span class=\"hljs-type\">boolean</span> <span class=\"hljs-variable\">ret</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-literal\">true</span>;<br>        <span class=\"hljs-keyword\">for</span> (SimpleHash f : func) &#123;<br>            ret = ret &amp;&amp; bits.get(f.hash(value));<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> ret;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 内部类，simpleHash</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">SimpleHash</span> &#123;<br>        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">int</span> cap;<br>        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">int</span> seed;<br><br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">SimpleHash</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> cap, <span class=\"hljs-type\">int</span> seed)</span> &#123;<br>            <span class=\"hljs-built_in\">this</span>.cap = cap;<br>            <span class=\"hljs-built_in\">this</span>.seed = seed;<br>        &#125;<br><br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">hash</span><span class=\"hljs-params\">(String value)</span> &#123;<br>            <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">result</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;<br>            <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">len</span> <span class=\"hljs-operator\">=</span> value.length();<br>            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; len; i++) &#123;<br>                result = seed * result + value.charAt(i);<br>            &#125;<br>            <span class=\"hljs-keyword\">return</span> (cap - <span class=\"hljs-number\">1</span>) &amp; result;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"初始化去重过滤器\"><a href=\"#初始化去重过滤器\" class=\"headerlink\" title=\"初始化去重过滤器\"></a>初始化去重过滤器</h3><blockquote>\n<p>项目一启动，就应该创建去重过滤器。</p>\n<p>编写以下代码实现过滤器初始化</p>\n</blockquote>\n<h4 id=\"CarTestService增加分页查询方法\"><a href=\"#CarTestService增加分页查询方法\" class=\"headerlink\" title=\"CarTestService增加分页查询方法\"></a>CarTestService增加分页查询方法</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * 分页查询标题</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@param</span> page          当前页</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@param</span> pageSize      分页大小</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-keyword\">public</span> Page&lt;CarTest&gt; <span class=\"hljs-title function_\">queryTitleByPage</span><span class=\"hljs-params\">(<span class=\"hljs-type\">long</span> page, <span class=\"hljs-type\">long</span> pageSize)</span>;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"CarTestService增加分页查询方法实现\"><a href=\"#CarTestService增加分页查询方法实现\" class=\"headerlink\" title=\"CarTestService增加分页查询方法实现\"></a>CarTestService增加分页查询方法实现</h4><figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs reasonml\">@Override<br>public Page&lt;CarTest&gt; query<span class=\"hljs-constructor\">TitleByPage(<span class=\"hljs-params\">long</span> <span class=\"hljs-params\">page</span>, <span class=\"hljs-params\">long</span> <span class=\"hljs-params\">pageSize</span>)</span> &#123;<br>    Page&lt;CarTest&gt; queryPage = <span class=\"hljs-keyword\">new</span> Page&lt;&gt;(page, pageSize);<br>    QueryWrapper&lt;CarTest&gt; queryWrapper = <span class=\"hljs-keyword\">new</span> QueryWrapper&lt;&gt;<span class=\"hljs-literal\">()</span>;<br>    queryWrapper.select(<span class=\"hljs-string\">&quot;title&quot;</span>);<br>    return  baseMapper.select<span class=\"hljs-constructor\">Page(<span class=\"hljs-params\">queryPage</span>, <span class=\"hljs-params\">queryWrapper</span>)</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"实现初始化去重过滤器\"><a href=\"#实现初始化去重过滤器\" class=\"headerlink\" title=\"实现初始化去重过滤器\"></a>实现初始化去重过滤器</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Configuration</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TitleFilterConfig</span> &#123;<br><br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">private</span> CarTestService carTestService;<br><br><br>    <span class=\"hljs-meta\">@Bean</span><br>    <span class=\"hljs-keyword\">public</span> TitleFilter <span class=\"hljs-title function_\">titleFilter</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-comment\">// 创建车辆标题过滤器</span><br>        <span class=\"hljs-type\">TitleFilter</span> <span class=\"hljs-variable\">titleFilter</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TitleFilter</span>();<br>        <span class=\"hljs-comment\">// 从数据库查询车辆标题，分页查询</span><br>        <span class=\"hljs-type\">long</span> <span class=\"hljs-variable\">page</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span>;<br>        <span class=\"hljs-type\">long</span> <span class=\"hljs-variable\">pageSize</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">5000</span>;<br>        <span class=\"hljs-type\">boolean</span> <span class=\"hljs-variable\">repatedFlag</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-literal\">true</span>;<br>        <span class=\"hljs-keyword\">do</span> &#123;<br>            Page&lt;CarTest&gt; carTestPage = carTestService.queryTitleByPage(page, pageSize);<br>            <span class=\"hljs-keyword\">if</span> (!carTestPage.hasNext()) &#123;<br>                repatedFlag = <span class=\"hljs-literal\">false</span>;<br>            &#125;<span class=\"hljs-keyword\">else</span> &#123;<br>                page += <span class=\"hljs-number\">1</span>;<br>            &#125;<br>            <span class=\"hljs-keyword\">for</span> (CarTest record : carTestPage.getRecords()) &#123;<br>                titleFilter.add(record.getTitle());<br>            &#125;<br>        &#125; <span class=\"hljs-keyword\">while</span> (repatedFlag);<br>        <span class=\"hljs-keyword\">return</span> titleFilter;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"实现爬取数据\"><a href=\"#实现爬取数据\" class=\"headerlink\" title=\"实现爬取数据\"></a>实现爬取数据</h2><blockquote>\n<p>首先实现数据爬取逻辑，先在测试方法中实现</p>\n</blockquote>\n<h3 id=\"实现爬取测试方法\"><a href=\"#实现爬取测试方法\" class=\"headerlink\" title=\"实现爬取测试方法\"></a>实现爬取测试方法</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@RunWith(SpringJUnit4ClassRunner.class)</span><br><span class=\"hljs-meta\">@SpringBootTest(classes = SpiderAutoHomeApplication.class)</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">AutoHomeApiServiceTest</span> &#123;<br><br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">private</span> AutoHomeApiService autoHomeApiService;<br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">private</span> TitleFilter titleFilter;<br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">private</span> CarTestService carTestService;<br><br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 测试获取HTML内容</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-meta\">@Test</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">getHtml</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">html</span> <span class=\"hljs-operator\">=</span> autoHomeApiService.getHtml(<span class=\"hljs-string\">&quot;https://www.autohome.com.cn/bestauto/&quot;</span>);<br>        System.out.println(<span class=\"hljs-string\">&quot;html = &quot;</span> + html);<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 测试获取图片</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-meta\">@Test</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">getImage</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">image</span> <span class=\"hljs-operator\">=</span> autoHomeApiService.getImage(<span class=\"hljs-string\">&quot;https://car2.autoimg.cn/cardfs/product/g24/M09/AE/EB/800x0_1_q87_autohomecar__wKgHIVpxGh6AFSN1AAY8kcz3Aww921.jpg&quot;</span>);<br>        System.out.println(<span class=\"hljs-string\">&quot;image = &quot;</span> + image);<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 获取评测数据</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-meta\">@Test</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">testGetEvaluatingResult</span><span class=\"hljs-params\">()</span> &#123;<br>        List&lt;CarTest&gt; saveList = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;&gt;();<br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">3</span>; i++) &#123;<br>            <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">baseUrl</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&quot;https://www.autohome.com.cn/bestauto/&quot;</span>;<br>            <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">html</span> <span class=\"hljs-operator\">=</span> autoHomeApiService.getHtml(baseUrl + i);<br>            <span class=\"hljs-type\">Document</span> <span class=\"hljs-variable\">document</span> <span class=\"hljs-operator\">=</span> Jsoup.parse(html);<br>            <span class=\"hljs-type\">Elements</span> <span class=\"hljs-variable\">carElements</span> <span class=\"hljs-operator\">=</span> document.getElementsByClass(<span class=\"hljs-string\">&quot;uibox&quot;</span>);<br>            <span class=\"hljs-keyword\">for</span> (Element carElement : carElements) &#123;<br>                <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">carTitle</span> <span class=\"hljs-operator\">=</span> carElement.getElementsByClass(<span class=\"hljs-string\">&quot;uibox-title uibox-title-border&quot;</span>).text();<br>               <span class=\"hljs-comment\">/* if (titleFilter.contains(carTitle)) &#123;</span><br><span class=\"hljs-comment\">                    continue;</span><br><span class=\"hljs-comment\">                &#125;*/</span><br>                <span class=\"hljs-type\">CarTest</span> <span class=\"hljs-variable\">carTest</span> <span class=\"hljs-operator\">=</span> marshalCarElement(carElement);<br>                <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">imageNames</span> <span class=\"hljs-operator\">=</span> marshalImageNames(carElement);<br>                carTest.setImage(imageNames);<br>                saveList.add(carTest);<br>            &#125;<br>            <span class=\"hljs-keyword\">if</span> (!CollectionUtils.isEmpty(saveList)) &#123;<br>                carTestService.saveBatch(saveList);<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 解析数据下载评测图片</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> carElement</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br><br>    <span class=\"hljs-keyword\">private</span> String <span class=\"hljs-title function_\">marshalImageNames</span><span class=\"hljs-params\">(Element carElement)</span> &#123;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">carImageName</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-literal\">null</span>;<br>        List&lt;String&gt; imageNameList = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;&gt;();<br>        <span class=\"hljs-type\">Elements</span> <span class=\"hljs-variable\">imageElements</span> <span class=\"hljs-operator\">=</span> carElement.select(<span class=\"hljs-string\">&quot;.piclist-box.fn-clear ul.piclist02 a&quot;</span>);<br>        <span class=\"hljs-keyword\">for</span> (Element imageElement : imageElements) &#123;<br>            <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">imageUrl</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&quot;https:&quot;</span> + imageElement.getElementsByTag(<span class=\"hljs-string\">&quot;img&quot;</span>).attr(<span class=\"hljs-string\">&quot;src&quot;</span>);<br>            <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">imageName</span> <span class=\"hljs-operator\">=</span> autoHomeApiService.getImage(imageUrl);<br>            imageNameList.add(imageName);<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span> (!CollectionUtils.isEmpty(imageNameList)) &#123;<br>            carImageName =  StringUtils.join(imageNameList, <span class=\"hljs-string\">&quot;,&quot;</span>);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> carImageName;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 解析数据封装成汽车评测对象</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> carElement</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">private</span> CarTest <span class=\"hljs-title function_\">marshalCarElement</span><span class=\"hljs-params\">(Element carElement)</span> &#123;<br>        <span class=\"hljs-type\">CarTest</span> <span class=\"hljs-variable\">carTest</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">CarTest</span>();<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">carTitle</span> <span class=\"hljs-operator\">=</span> carElement.getElementsByClass(<span class=\"hljs-string\">&quot;uibox-title uibox-title-border&quot;</span>).text();<br>        carTest.setTitle(carTitle);<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">testSpeed</span> <span class=\"hljs-operator\">=</span> carElement.select(<span class=\"hljs-string\">&quot;.tabbox1 dd:nth-child(2) &gt; div.dd-div2&quot;</span>).first().text();<br>        carTest.setTestSpeed(covertStrToNum(testSpeed));<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">testBrake</span> <span class=\"hljs-operator\">=</span> carElement.select(<span class=\"hljs-string\">&quot;.tabbox1 dd:nth-child(3) &gt; div.dd-div2&quot;</span>).first().text();<br>        carTest.setTestBrake(covertStrToNum(testBrake));<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">testOil</span> <span class=\"hljs-operator\">=</span> carElement.select(<span class=\"hljs-string\">&quot;.tabbox1 dd:nth-child(4) &gt; div.dd-div2&quot;</span>).first().text();<br>        carTest.setTestOil(covertStrToNum(testOil));<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">editorName1</span> <span class=\"hljs-operator\">=</span> carElement.select(<span class=\"hljs-string\">&quot;.tabbox2.tabbox-score dd:nth-child(2) &gt; div.dd-div1&quot;</span>).first().text();<br>        carTest.setEditorName1(editorName1);<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">editorRemark1</span> <span class=\"hljs-operator\">=</span> carElement.select(<span class=\"hljs-string\">&quot;.tabbox2.tabbox-score dd:nth-child(2) &gt; div.dd-div3&quot;</span>).first().text();<br>        carTest.setEditorRemark1(editorRemark1);<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">editorName2</span> <span class=\"hljs-operator\">=</span> carElement.select(<span class=\"hljs-string\">&quot;.tabbox2.tabbox-score dd:nth-child(3) &gt; div.dd-div1&quot;</span>).first().text();<br>        carTest.setEditorName2(editorName2);<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">editorRemark2</span> <span class=\"hljs-operator\">=</span> carElement.select(<span class=\"hljs-string\">&quot;.tabbox2.tabbox-score dd:nth-child(3) &gt; div.dd-div3&quot;</span>).first().text();<br>        carTest.setEditorRemark2(editorRemark2);<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">editorName3</span> <span class=\"hljs-operator\">=</span> carElement.select(<span class=\"hljs-string\">&quot;.tabbox2.tabbox-score dd:nth-child(4) &gt; div.dd-div1&quot;</span>).first().text();<br>        carTest.setEditorName3(editorName3);<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">editorRemark3</span> <span class=\"hljs-operator\">=</span> carElement.select(<span class=\"hljs-string\">&quot;.tabbox2.tabbox-score dd:nth-child(4) &gt; div.dd-div3&quot;</span>).first().text();<br>        carTest.setEditorRemark3(editorRemark3);<br>        <span class=\"hljs-type\">Date</span> <span class=\"hljs-variable\">currentDate</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>();<br>        carTest.setCreated(currentDate);<br>        carTest.setUpdated(currentDate);<br>        <span class=\"hljs-keyword\">return</span> carTest;<br>    &#125;<br><br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 把字符串去掉最后一个数，转为乘以1000的数字</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> str</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">covertStrToNum</span><span class=\"hljs-params\">(String str)</span> &#123;<br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-string\">&quot;--&quot;</span>.equals(str)) &#123;<br>                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>            &#125;<br>            <span class=\"hljs-comment\">// 字符串去掉随后一个数</span><br>            str = StringUtils.substring(str, <span class=\"hljs-number\">0</span>, str.length() - <span class=\"hljs-number\">1</span>);<br>            <span class=\"hljs-comment\">// 转换为小数并乘以1000</span><br>            <span class=\"hljs-type\">Number</span> <span class=\"hljs-variable\">num</span> <span class=\"hljs-operator\">=</span> Float.valueOf(str) * <span class=\"hljs-number\">1000</span>;<br>            <span class=\"hljs-keyword\">return</span> num.intValue();<br>        &#125; <span class=\"hljs-keyword\">catch</span> (Exception e) &#123;<br>            e.printStackTrace();<br>            System.out.println(str);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"整合任务\"><a href=\"#整合任务\" class=\"headerlink\" title=\"整合任务\"></a>整合任务</h2><blockquote>\n<p>把测试方法中的爬取数据代码改造为任务，再使用Quartz定时任务定时处理，就可以实现定时抓取汽车评测数据，能够获取最新的数据了</p>\n</blockquote>\n<h3 id=\"改造任务\"><a href=\"#改造任务\" class=\"headerlink\" title=\"改造任务\"></a>改造任务</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Slf4j</span><br><span class=\"hljs-meta\">@DisallowConcurrentExecution</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">CrawlerAutoHomeJob</span>  <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">QuartzJobBean</span> &#123;<br><br>    <span class=\"hljs-keyword\">private</span> AutoHomeApiService autoHomeApiService;<br>    <span class=\"hljs-keyword\">private</span> TitleFilter titleFilter;<br>    <span class=\"hljs-keyword\">private</span> CarTestService carTestService;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">protected</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">executeInternal</span><span class=\"hljs-params\">(JobExecutionContext context)</span> <span class=\"hljs-keyword\">throws</span> JobExecutionException &#123;<br>        log.info(<span class=\"hljs-string\">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; start crawlerAutoHomeJob&quot;</span>);<br>        <span class=\"hljs-comment\">// 获取spring容器</span><br>        <span class=\"hljs-type\">ApplicationContext</span> <span class=\"hljs-variable\">applicationContext</span> <span class=\"hljs-operator\">=</span> (ApplicationContext) context.getJobDetail().getJobDataMap()<br>                .get(<span class=\"hljs-string\">&quot;context&quot;</span>);<br><br>        <span class=\"hljs-comment\">// 获取抓取数据服务</span><br>        <span class=\"hljs-built_in\">this</span>.autoHomeApiService = applicationContext.getBean(AutoHomeApiService.class);<br>        <span class=\"hljs-comment\">// 获取汽车评测服务</span><br>        <span class=\"hljs-built_in\">this</span>.carTestService = applicationContext.getBean(CarTestService.class);<br>        <span class=\"hljs-comment\">// 获取过滤器</span><br>        <span class=\"hljs-built_in\">this</span>.titleFilter = applicationContext.getBean(TitleFilter.class);<br><br>        List&lt;CarTest&gt; saveList = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;&gt;();<br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span>; i &lt; <span class=\"hljs-number\">188</span>; i++) &#123;<br>            <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">baseUrl</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&quot;https://www.autohome.com.cn/bestauto/&quot;</span> + i;<br>            <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">html</span> <span class=\"hljs-operator\">=</span> autoHomeApiService.getHtml(baseUrl);<br>            <span class=\"hljs-type\">Document</span> <span class=\"hljs-variable\">document</span> <span class=\"hljs-operator\">=</span> Jsoup.parse(html);<br>            <span class=\"hljs-type\">Elements</span> <span class=\"hljs-variable\">carElements</span> <span class=\"hljs-operator\">=</span> document.getElementsByClass(<span class=\"hljs-string\">&quot;uibox&quot;</span>);<br>            <span class=\"hljs-keyword\">for</span> (Element carElement : carElements) &#123;<br>                <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">carTitle</span> <span class=\"hljs-operator\">=</span> carElement.getElementsByClass(<span class=\"hljs-string\">&quot;uibox-title uibox-title-border&quot;</span>).text();<br>               <span class=\"hljs-comment\">/* if (titleFilter.contains(carTitle)) &#123;</span><br><span class=\"hljs-comment\">                    continue;</span><br><span class=\"hljs-comment\">                &#125;*/</span><br>                <span class=\"hljs-type\">CarTest</span> <span class=\"hljs-variable\">carTest</span> <span class=\"hljs-operator\">=</span> marshalCarElement(carElement);<br>                <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">imageNames</span> <span class=\"hljs-operator\">=</span> marshalImageNames(carElement);<br>                carTest.setImage(imageNames);<br>                saveList.add(carTest);<br>            &#125;<br>            <span class=\"hljs-keyword\">if</span> (!CollectionUtils.isEmpty(saveList)) &#123;<br>                carTestService.saveBatch(saveList);<br>            &#125;<br>        &#125;<br>        log.info(<span class=\"hljs-string\">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; end crawlerAutoHomeJob&quot;</span>);<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 解析数据下载评测图片</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> carElement</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br><br>    <span class=\"hljs-keyword\">private</span> String <span class=\"hljs-title function_\">marshalImageNames</span><span class=\"hljs-params\">(Element carElement)</span> &#123;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">carImageName</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-literal\">null</span>;<br>        List&lt;String&gt; imageNameList = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;&gt;();<br>        <span class=\"hljs-type\">Elements</span> <span class=\"hljs-variable\">imageElements</span> <span class=\"hljs-operator\">=</span> carElement.select(<span class=\"hljs-string\">&quot;.piclist-box.fn-clear ul.piclist02 a&quot;</span>);<br>        <span class=\"hljs-keyword\">for</span> (Element imageElement : imageElements) &#123;<br>            <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">imageUrl</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&quot;https:&quot;</span> + imageElement.getElementsByTag(<span class=\"hljs-string\">&quot;img&quot;</span>).attr(<span class=\"hljs-string\">&quot;src&quot;</span>);<br>            <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">imageName</span> <span class=\"hljs-operator\">=</span> autoHomeApiService.getImage(imageUrl);<br>            imageNameList.add(imageName);<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span> (!CollectionUtils.isEmpty(imageNameList)) &#123;<br>            carImageName =  StringUtils.join(imageNameList, <span class=\"hljs-string\">&quot;,&quot;</span>);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> carImageName;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 解析数据封装成汽车评测对象</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> carElement</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">private</span> CarTest <span class=\"hljs-title function_\">marshalCarElement</span><span class=\"hljs-params\">(Element carElement)</span> &#123;<br>        <span class=\"hljs-type\">CarTest</span> <span class=\"hljs-variable\">carTest</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">CarTest</span>();<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">carTitle</span> <span class=\"hljs-operator\">=</span> carElement.getElementsByClass(<span class=\"hljs-string\">&quot;uibox-title uibox-title-border&quot;</span>).text();<br>        carTest.setTitle(carTitle);<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">testSpeed</span> <span class=\"hljs-operator\">=</span> carElement.select(<span class=\"hljs-string\">&quot;.tabbox1 dd:nth-child(2) &gt; div.dd-div2&quot;</span>).first().text();<br>        carTest.setTestSpeed(covertStrToNum(testSpeed));<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">testBrake</span> <span class=\"hljs-operator\">=</span> carElement.select(<span class=\"hljs-string\">&quot;.tabbox1 dd:nth-child(3) &gt; div.dd-div2&quot;</span>).first().text();<br>        carTest.setTestBrake(covertStrToNum(testBrake));<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">testOil</span> <span class=\"hljs-operator\">=</span> carElement.select(<span class=\"hljs-string\">&quot;.tabbox1 dd:nth-child(4) &gt; div.dd-div2&quot;</span>).first().text();<br>        carTest.setTestOil(covertStrToNum(testOil));<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">editorName1</span> <span class=\"hljs-operator\">=</span> carElement.select(<span class=\"hljs-string\">&quot;.tabbox2.tabbox-score dd:nth-child(2) &gt; div.dd-div1&quot;</span>).first().text();<br>        carTest.setEditorName1(editorName1);<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">editorRemark1</span> <span class=\"hljs-operator\">=</span> carElement.select(<span class=\"hljs-string\">&quot;.tabbox2.tabbox-score dd:nth-child(2) &gt; div.dd-div3&quot;</span>).first().text();<br>        carTest.setEditorRemark1(editorRemark1);<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">editorName2</span> <span class=\"hljs-operator\">=</span> carElement.select(<span class=\"hljs-string\">&quot;.tabbox2.tabbox-score dd:nth-child(3) &gt; div.dd-div1&quot;</span>).first().text();<br>        carTest.setEditorName2(editorName2);<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">editorRemark2</span> <span class=\"hljs-operator\">=</span> carElement.select(<span class=\"hljs-string\">&quot;.tabbox2.tabbox-score dd:nth-child(3) &gt; div.dd-div3&quot;</span>).first().text();<br>        carTest.setEditorRemark2(editorRemark2);<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">editorName3</span> <span class=\"hljs-operator\">=</span> carElement.select(<span class=\"hljs-string\">&quot;.tabbox2.tabbox-score dd:nth-child(4) &gt; div.dd-div1&quot;</span>).first().text();<br>        carTest.setEditorName3(editorName3);<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">editorRemark3</span> <span class=\"hljs-operator\">=</span> carElement.select(<span class=\"hljs-string\">&quot;.tabbox2.tabbox-score dd:nth-child(4) &gt; div.dd-div3&quot;</span>).first().text();<br>        carTest.setEditorRemark3(editorRemark3);<br>        <span class=\"hljs-type\">Date</span> <span class=\"hljs-variable\">currentDate</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>();<br>        carTest.setCreated(currentDate);<br>        carTest.setUpdated(currentDate);<br>        <span class=\"hljs-keyword\">return</span> carTest;<br>    &#125;<br><br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 把字符串去掉最后一个数，转为乘以1000的数字</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> str</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">covertStrToNum</span><span class=\"hljs-params\">(String str)</span> &#123;<br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-string\">&quot;--&quot;</span>.equals(str)) &#123;<br>                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>            &#125;<br>            <span class=\"hljs-comment\">// 字符串去掉随后一个数</span><br>            str = StringUtils.substring(str, <span class=\"hljs-number\">0</span>, str.length() - <span class=\"hljs-number\">1</span>);<br>            <span class=\"hljs-comment\">// 转换为小数并乘以1000</span><br>            <span class=\"hljs-type\">Number</span> <span class=\"hljs-variable\">num</span> <span class=\"hljs-operator\">=</span> Float.valueOf(str) * <span class=\"hljs-number\">1000</span>;<br>            <span class=\"hljs-keyword\">return</span> num.intValue();<br>        &#125; <span class=\"hljs-keyword\">catch</span> (Exception e) &#123;<br>            e.printStackTrace();<br>            System.out.println(str);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"增加定时任务\"><a href=\"#增加定时任务\" class=\"headerlink\" title=\"增加定时任务\"></a>增加定时任务</h3><ul>\n<li>在定时任务配置<code>QuartzConfig</code>中添加爬取汽车之家的定时任务</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * 定义定时爬取评测任务任务</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@Bean(&quot;crawlerAutoHomeJob&quot;)</span><br><span class=\"hljs-keyword\">public</span> JobDetailFactoryBean <span class=\"hljs-title function_\">crawlerAutoHomeJob</span><span class=\"hljs-params\">()</span> &#123;<br>    <span class=\"hljs-type\">JobDetailFactoryBean</span> <span class=\"hljs-variable\">jobDetailFactoryBean</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">JobDetailFactoryBean</span>();<br>    jobDetailFactoryBean.setApplicationContextJobDataKey(<span class=\"hljs-string\">&quot;context&quot;</span>);<br>    jobDetailFactoryBean.setJobClass(CrawlerAutoHomeJob.class);<br>    jobDetailFactoryBean.setDurability(<span class=\"hljs-literal\">true</span>);<br><br>    <span class=\"hljs-keyword\">return</span> jobDetailFactoryBean;<br>&#125;<br><br><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * 定义关闭无效连接触发器</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@Bean(&quot;crawlerAutoHomeJobTrigger&quot;)</span><br><span class=\"hljs-keyword\">public</span> CronTriggerFactoryBean <span class=\"hljs-title function_\">crawlerAutoHomeJobTrigger</span><span class=\"hljs-params\">(</span><br><span class=\"hljs-params\">        <span class=\"hljs-meta\">@Qualifier(value = &quot;crawlerAutoHomeJob&quot;)</span> JobDetailFactoryBean itemJobBean)</span> &#123;<br>    <span class=\"hljs-type\">CronTriggerFactoryBean</span> <span class=\"hljs-variable\">tigger</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">CronTriggerFactoryBean</span>();<br>    tigger.setJobDetail(itemJobBean.getObject());<br>    tigger.setCronExpression(<span class=\"hljs-string\">&quot;0/5 * * * * ? &quot;</span>);<br>    <span class=\"hljs-keyword\">return</span> tigger;<br>&#125;<br></code></pre></td></tr></table></figure>\n",
            "tags": [
                "JAVA",
                "Spring",
                "Spring Boot"
            ]
        },
        {
            "id": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/Spring/Spring-Cloud-Alibaba(6)-%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AA/",
            "url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/Spring/Spring-Cloud-Alibaba(6)-%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AA/",
            "title": "Spring-Cloud-Alibaba(6)-链路追踪",
            "date_published": "2024-01-03T13:13:21.648Z",
            "content_html": "<h1 id=\"链路追踪介绍\"><a href=\"#链路追踪介绍\" class=\"headerlink\" title=\"链路追踪介绍\"></a>链路追踪介绍</h1><p>在大型系统的微服务化构建中，一个系统被拆分成了许多模块。这些模块负责不同的功能，组合成 系统，最终可以提供丰富的功能。在这种架构中，一次请求往往需要涉及到多个服务。互联网应用构建 在不同的软件模块集上，这些软件模块，有可能是由不同的团队开发、可能使用不同的编程语言来实 现、有可能布在了几千台服务器，横跨多个不同的数据中心，也就意味着这种架构形式也会存在一些问 题：</p>\n<ul>\n<li>如何快速发现问题？</li>\n<li>如何判断故障影响范围？</li>\n<li>如何梳理服务依赖以及依赖的合理性？</li>\n<li>如何分析链路性能问题以及实时容量规划？</li>\n</ul>\n<p><img src=\"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Finews.gtimg.com%2Fnewsapp_match%2F0%2F2796324795%2F0.jpg&refer=http%3A%2F%2Finews.gtimg.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1641301857&t=92fce1c5245626e18aefe3fc370870a0\" alt=\"img\"></p>\n<p>分布式链路追踪（Distributed Tracing），就是将一次分布式请求还原成调用链路，进行日志记 录，性能监控并将一次分布式请求的调用情况集中展示。比如各个服务节点上的耗时、请求具体到达哪 台机器上、每个服务节点的请求状态等等。</p>\n<p>常见的链路追踪技术有下面这些：</p>\n<ul>\n<li><p>cat</p>\n<p>由大众点评开源，基于Java开发的实时应用监控平台，包括实时应用监控，业务监控 。 集成 方案是通过代码埋点的方式来实现监控，比如： 拦截器，过滤器等。 对代码的侵入性很大，集成成本较高。风险较大。</p>\n</li>\n<li><p>zipkin</p>\n<p>由Twitter公司开源，开放源代码分布式的跟踪系统，用于收集服务的定时数据，以解决微 服务架构中的延迟问题，包括：数据的收集、存储、查找和展现。该产品结合spring-cloud-sleuth 使用较为简单， 集成很方便， 但是功能较简单。</p>\n</li>\n<li><p>pinpoint</p>\n<p>Pinpoint是韩国人开源的基于字节码注入的调用链分析，以及应用监控分析工具。特点 是支持多种插件，UI功能强大，接入端无代码侵入。</p>\n</li>\n<li><p>skywalking</p>\n<p>SkyWalking是本土开源的基于字节码注入的调用链分析，以及应用监控分析工具。特点是支持多 种插件，UI功能较强，接入端无代码侵入。目前已加入Apache孵化器。</p>\n</li>\n<li><p>Sleuth</p>\n<p>SpringCloud 提供的分布式系统中链路追踪解决方案。</p>\n</li>\n</ul>\n<blockquote>\n<p>注意：SpringCloud alibaba技术栈中并没有提供自己的链路追踪技术的，我们可以采用Sleuth + Zinkin来做链路追踪解决方案</p>\n</blockquote>\n<h1 id=\"Sleuth入门\"><a href=\"#Sleuth入门\" class=\"headerlink\" title=\"Sleuth入门\"></a>Sleuth入门</h1><h2 id=\"Sleuth介绍\"><a href=\"#Sleuth介绍\" class=\"headerlink\" title=\"Sleuth介绍\"></a>Sleuth介绍</h2><p>SpringCloud Sleuth主要功能就是在分布式系统中提供追踪解决方案。它大量借用了Google Dapper的设计，  先来了解一下Sleuth中的术语和相关概念。</p>\n<ul>\n<li><p>Trace<br>由一组Trace Id相同的Span串联形成一个树状结构。为了实现请求跟踪，当请求到达分布式系统的 入口端点时，只需要服务跟踪框架为该请求创建一个唯一的标识（即TraceId），同时在分布式系 统内部流转的时候，框架始终保持传递该唯一值，直到整个请求的返回。那么我们就可以使用该唯 一标识将所有的请求串联起来，形成一条完整的请求链路。</p>\n</li>\n<li><p>Span</p>\n<p>代表了一组基本的工作单元。为了统计各处理单元的延迟，当请求到达各个服务组件的时 候，也通过一个唯一标识（SpanId）来标记它的开始、具体过程和结束。通过SpanId的开始和结 束时间戳，就能统计该span的调用时间，除此之外，我们还可以获取如事件的名称。请求信息等<br>元数据。</p>\n</li>\n<li><p>Annotation<br>用它记录一段时间内的事件，内部使用的重要注释：<br>cs（Client Send）客户端发出请求，开始一个请求的生命<br>sr（Server Received）服务端接受到请求开始进行处理， sr－cs &#x3D; 网络延迟（服务调用的时间）<br>ss（Server Send）服务端处理完毕准备发送到客户端，ss - sr &#x3D; 服务器上的请求处理时间<br>cr（Client Reveived）客户端接受到服务端的响应，请求结束。 cr - sr &#x3D; 请求的总时间</p>\n</li>\n</ul>\n<p><img src=\"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg-blog.csdnimg.cn%2F20200324200951328.png%3Fx-oss-process%3Dimage%2Fwatermark%2Ctype_ZmFuZ3poZW5naGVpdGk%2Cshadow_10%2Ctext_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyODk3NDI3%2Csize_16%2Ccolor_FFFFFF%2Ct_70&refer=http%3A%2F%2Fimg-blog.csdnimg.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1641302195&t=1525c90d9956807e8679a9e0afdf3b59\" alt=\"img\"></p>\n<h2 id=\"Sleuth入门-1\"><a href=\"#Sleuth入门-1\" class=\"headerlink\" title=\"Sleuth入门\"></a>Sleuth入门</h2><p>微服务名称, traceId, spanid,是否将链路的追踪结果输出到第三方平台<br>[api-gateway,3977125f73391553,3977125f73391553,false]<br>[service-order,3977125f73391553,57547b5bf71f8242,false]<br>[service-product,3977125f73391553,449f5b3f3ef8d5c5,false]</p>\n<p>接下来通过之前的项目案例整合Sleuth，完成入门案例的编写。<br>修改父工程引入Sleuth依赖</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-comment\">&lt;!-- 链路追踪 sleuth --&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-sleuth<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>启动微服务，调用之后，我们可以在控制台观察到sleuth的日志输出</p>\n<p><img src=\"http://tva1.sinaimg.cn/large/006seI3Egy1gx3bfihq8zj315j07y1bc.jpg\" alt=\"image.png\"></p>\n<p>其中 [0]是TraceId， [1]是SpanId，依次调用有一个全局的 TraceId，将调用链路串起来。仔细分析每个微服务的日志，不难看出请求的具体过程。<br>查看日志文件并不是一个很好的方法，当微服务越来越多日志文件也会越来越多，通过Zipkin可以 将日志聚合，并进行可视化展示和全文检索。</p>\n<h2 id=\"Zipkin的集成\"><a href=\"#Zipkin的集成\" class=\"headerlink\" title=\"Zipkin的集成\"></a>Zipkin的集成</h2><h3 id=\"ZipKin介绍\"><a href=\"#ZipKin介绍\" class=\"headerlink\" title=\"ZipKin介绍\"></a>ZipKin介绍</h3><p>Zipkin 是 Twitter 的一个开源项目，它基于Google Dapper实现，它致力于收集服务的定时数据， 以解决微服务架构中的延迟问题，包括数据的收集、存储、查找和展现。我们可以使用它来收集各个服务器上请求链路的跟踪数据，并通过它提供的REST API接口来辅助我<br>们查询跟踪数据以实现对分布式系统的监控程序，从而及时地发现系统中出现的延迟升高问题并找出系 统性能瓶颈的根源。除了面向开发的 API 接口之外，它也提供了方便的UI组件来帮助我们直观的搜索跟踪信息和分析请 求链路明细，比如：可以查询某段时间内各用户请求的处理时间等。<br>Zipkin 提供了可插拔数据存储方式：In-Memory、MySql、Cassandra 以及 Elasticsearch。</p>\n<p><img src=\"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fwww.uml.org.cn%2Fwfw%2Fimages%2F2020041729.png&refer=http%3A%2F%2Fwww.uml.org.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1641305915&t=d45b1222d254b719574d2cf605e93ff9\" alt=\"img\"></p>\n<p>上图展示了 Zipkin 的基础架构，它主要由 4 个核心组件构成：</p>\n<ul>\n<li><p>Collector：</p>\n<p>收集器组件，它主要用于处理从外部系统发送过来的跟踪信息，将这些信息转换为 Zipkin内部处理的 Span 格式，以支持后续的存储、分析、展示等功能。</p>\n</li>\n<li><p>Storage：</p>\n<p>存储组件，它主要对处理收集器接收到的跟踪信息，默认会将这些信息存储在内存中， 我们也可以修改此存储策略，通过使用其他存储组件将跟踪信息存储到数据库中。</p>\n</li>\n<li><p>RESTful API：</p>\n<p>API 组件，它主要用来提供外部访问接口。比如给客户端展示跟踪信息，或是外接 系统访问以实现监控等。</p>\n</li>\n<li><p>Web UI：</p>\n<p>UI 组件，  基于API组件实现的上层应用。通过UI组件用户可以方便而有直观地查询和分 析跟踪信息。</p>\n</li>\n</ul>\n<p>Zipkin分为两端，一个是 Zipkin服务端，一个是 Zipkin客户端，客户端也就是微服务的应用。 客户端会 配置服务端的 URL 地址，一旦发生服务间的调用的时候，会被配置在微服务里面的 Sleuth 的监听器监 听，并生成相应的 Trace 和 Span 信息发送给服务端。</p>\n<h3 id=\"ZipKin服务端安装\"><a href=\"#ZipKin服务端安装\" class=\"headerlink\" title=\"ZipKin服务端安装\"></a>ZipKin服务端安装</h3><blockquote>\n<p><a href=\"https://zipkin.io/pages/quickstart\">ZpinKin官网地址</a></p>\n<p>本文只用官网提供的Java方式进行下载。</p>\n</blockquote>\n<h4 id=\"下载压缩包\"><a href=\"#下载压缩包\" class=\"headerlink\" title=\"下载压缩包\"></a>下载压缩包</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">curl -sSL https://zipkin.io/quickstart.sh | bash -s<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"运行jar包\"><a href=\"#运行jar包\" class=\"headerlink\" title=\"运行jar包\"></a>运行jar包</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">java -jar zipkin.jar<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"http://tva1.sinaimg.cn/large/006seI3Ely1gy6bic4jbpj31h20m2b29.jpg\" alt=\"image-20220103222204858.png\"></p>\n<blockquote>\n<p>由于博主在Linux上运行的，所以需要进行开放一下端口。</p>\n<ul>\n<li>查看防火墙是否开启</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">systemctl status firewalld<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>若没有开启则是开启状态</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">systemctl start firewalld  #关闭则start改为stop<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>查看所有开启的端口</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">firewall-cmd --list-ports<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">注：启动防火墙后，默认没有开启任何端口，需要手动开启端口</span><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>防火墙开启端口访问</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">firewall-cmd --zone=public --add-port=80/tcp --permanent<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">命令含义：</span>  <br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">      --zone               作用域</span>   <br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">      --add-port=80/tcp    添加端口，格式为：端口/通讯协议</span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">      --permanent          永久生效，没有此参数重启后失效</span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">注：开启后需要重启防火墙才生效</span>   <br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>重启</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">firewall-cmd --reload<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>再执行 firewall-cmd –list-ports查看一次，则发现已开启.</p>\n</blockquote>\n</blockquote>\n<h4 id=\"访问测试\"><a href=\"#访问测试\" class=\"headerlink\" title=\"访问测试\"></a>访问测试</h4><p>输入地址<code>http://192.168.56.121:9411/</code>进行访问</p>\n<h3 id=\"Zipkin客户端集成\"><a href=\"#Zipkin客户端集成\" class=\"headerlink\" title=\"Zipkin客户端集成\"></a>Zipkin客户端集成</h3><p>ZipKin客户端和Sleuth的集成非常简单，只需要在微服务中添加其依赖和配置即可。</p>\n<h4 id=\"在每个微服务上添加依赖\"><a href=\"#在每个微服务上添加依赖\" class=\"headerlink\" title=\"在每个微服务上添加依赖\"></a>在每个微服务上添加依赖</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-comment\">&lt;!-- zipkin 链路追踪 --&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-zipkin<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"添加配置\"><a href=\"#添加配置\" class=\"headerlink\" title=\"添加配置\"></a>添加配置</h4><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">zipkin:</span><br>  <span class=\"hljs-attr\">base-url:</span> <span class=\"hljs-string\">http://192.168.56.121:9411/</span> <span class=\"hljs-comment\">#zipkin server的请求地址</span><br>  <span class=\"hljs-attr\">discovery-client-enabled:</span> <span class=\"hljs-literal\">false</span> <span class=\"hljs-comment\">#让nacos把它当成一个URL，而不要当做服务名</span><br><span class=\"hljs-attr\">sleuth:</span><br>  <span class=\"hljs-attr\">sampler:</span><br>    <span class=\"hljs-attr\">probability:</span> <span class=\"hljs-number\">1.0</span> <span class=\"hljs-comment\">#采样的百分比</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"访问端口测试\"><a href=\"#访问端口测试\" class=\"headerlink\" title=\"访问端口测试\"></a>访问端口测试</h4><p><code>curl -H &quot;ACCESS_TOKEN:1&quot; http://localhost:7000/shop-order/order/save/1</code></p>\n<p><img src=\"http://tva1.sinaimg.cn/large/006seI3Ely1gy6bjwgp63j31ax03wdmu.jpg\" alt=\"image-20220103223804116.png\"></p>\n<h4 id=\"访问Zipkin\"><a href=\"#访问Zipkin\" class=\"headerlink\" title=\"访问Zipkin\"></a>访问Zipkin</h4><p><img src=\"http://tva1.sinaimg.cn/large/006seI3Ely1gy6bkh1cbyj31gg0h1q97.jpg\" alt=\"image-20220103224022982.png\"></p>\n<p><img src=\"http://tva1.sinaimg.cn/large/006seI3Ely1gy6bkx1rebj31h60hxagr.jpg\" alt=\"image-20220103223853918.png\"></p>\n<h3 id=\"ZipKin数据持久化\"><a href=\"#ZipKin数据持久化\" class=\"headerlink\" title=\"ZipKin数据持久化\"></a>ZipKin数据持久化</h3><p>Zipkin Server默认会将追踪数据信息保存到内存，但这种方式不适合生产环境。Zipkin支持将追踪 数据持久化到mysql数据库或elasticsearch中。</p>\n<h4 id=\"使用mysql实现数据持久化\"><a href=\"#使用mysql实现数据持久化\" class=\"headerlink\" title=\"使用mysql实现数据持久化\"></a>使用mysql实现数据持久化</h4><h5 id=\"创建mysql数据环境\"><a href=\"#创建mysql数据环境\" class=\"headerlink\" title=\"创建mysql数据环境\"></a>创建mysql数据环境</h5><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-comment\">--</span><br><span class=\"hljs-comment\">-- Copyright 2015-2019 The OpenZipkin Authors</span><br><span class=\"hljs-comment\">--</span><br><span class=\"hljs-comment\">-- Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except</span><br><span class=\"hljs-comment\">-- in compliance with the License. You may obtain a copy of the License at</span><br><span class=\"hljs-comment\">--</span><br><span class=\"hljs-comment\">-- http://www.apache.org/licenses/LICENSE-2.0</span><br><span class=\"hljs-comment\">--</span><br><span class=\"hljs-comment\">-- Unless required by applicable law or agreed to in writing, software distributed under the License</span><br><span class=\"hljs-comment\">-- is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express</span><br><span class=\"hljs-comment\">-- or implied. See the License for the specific language governing permissions and limitations under</span><br><span class=\"hljs-comment\">-- the License.</span><br><span class=\"hljs-comment\">--</span><br><br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TABLE</span> IF <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">EXISTS</span> zipkin_spans (<br>  `trace_id_high` <span class=\"hljs-type\">BIGINT</span> <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span> <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-number\">0</span> COMMENT <span class=\"hljs-string\">&#x27;If non zero, this means the trace uses 128 bit traceIds instead of 64 bit&#x27;</span>,<br>  `trace_id` <span class=\"hljs-type\">BIGINT</span> <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span>,<br>  `id` <span class=\"hljs-type\">BIGINT</span> <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span>,<br>  `name` <span class=\"hljs-type\">VARCHAR</span>(<span class=\"hljs-number\">255</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span>,<br>  `remote_service_name` <span class=\"hljs-type\">VARCHAR</span>(<span class=\"hljs-number\">255</span>),<br>  `parent_id` <span class=\"hljs-type\">BIGINT</span>,<br>  `debug` BIT(<span class=\"hljs-number\">1</span>),<br>  `start_ts` <span class=\"hljs-type\">BIGINT</span> COMMENT <span class=\"hljs-string\">&#x27;Span.timestamp(): epoch micros used for endTs query and to implement TTL&#x27;</span>,<br>  `duration` <span class=\"hljs-type\">BIGINT</span> COMMENT <span class=\"hljs-string\">&#x27;Span.duration(): micros used for minDuration and maxDuration query&#x27;</span>,<br>  <span class=\"hljs-keyword\">PRIMARY</span> KEY (`trace_id_high`, `trace_id`, `id`)<br>) ENGINE<span class=\"hljs-operator\">=</span>InnoDB ROW_FORMAT<span class=\"hljs-operator\">=</span>COMPRESSED <span class=\"hljs-type\">CHARACTER</span> <span class=\"hljs-keyword\">SET</span><span class=\"hljs-operator\">=</span>utf8 <span class=\"hljs-keyword\">COLLATE</span> utf8_general_ci;<br><br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> zipkin_spans <span class=\"hljs-keyword\">ADD</span> INDEX(`trace_id_high`, `trace_id`) COMMENT <span class=\"hljs-string\">&#x27;for getTracesByIds&#x27;</span>;<br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> zipkin_spans <span class=\"hljs-keyword\">ADD</span> INDEX(`name`) COMMENT <span class=\"hljs-string\">&#x27;for getTraces and getSpanNames&#x27;</span>;<br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> zipkin_spans <span class=\"hljs-keyword\">ADD</span> INDEX(`remote_service_name`) COMMENT <span class=\"hljs-string\">&#x27;for getTraces and getRemoteServiceNames&#x27;</span>;<br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> zipkin_spans <span class=\"hljs-keyword\">ADD</span> INDEX(`start_ts`) COMMENT <span class=\"hljs-string\">&#x27;for getTraces ordering and range&#x27;</span>;<br><br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TABLE</span> IF <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">EXISTS</span> zipkin_annotations (<br>  `trace_id_high` <span class=\"hljs-type\">BIGINT</span> <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span> <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-number\">0</span> COMMENT <span class=\"hljs-string\">&#x27;If non zero, this means the trace uses 128 bit traceIds instead of 64 bit&#x27;</span>,<br>  `trace_id` <span class=\"hljs-type\">BIGINT</span> <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span> COMMENT <span class=\"hljs-string\">&#x27;coincides with zipkin_spans.trace_id&#x27;</span>,<br>  `span_id` <span class=\"hljs-type\">BIGINT</span> <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span> COMMENT <span class=\"hljs-string\">&#x27;coincides with zipkin_spans.id&#x27;</span>,<br>  `a_key` <span class=\"hljs-type\">VARCHAR</span>(<span class=\"hljs-number\">255</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span> COMMENT <span class=\"hljs-string\">&#x27;BinaryAnnotation.key or Annotation.value if type == -1&#x27;</span>,<br>  `a_value` <span class=\"hljs-type\">BLOB</span> COMMENT <span class=\"hljs-string\">&#x27;BinaryAnnotation.value(), which must be smaller than 64KB&#x27;</span>,<br>  `a_type` <span class=\"hljs-type\">INT</span> <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span> COMMENT <span class=\"hljs-string\">&#x27;BinaryAnnotation.type() or -1 if Annotation&#x27;</span>,<br>  `a_timestamp` <span class=\"hljs-type\">BIGINT</span> COMMENT <span class=\"hljs-string\">&#x27;Used to implement TTL; Annotation.timestamp or zipkin_spans.timestamp&#x27;</span>,<br>  `endpoint_ipv4` <span class=\"hljs-type\">INT</span> COMMENT <span class=\"hljs-string\">&#x27;Null when Binary/Annotation.endpoint is null&#x27;</span>,<br>  `endpoint_ipv6` <span class=\"hljs-type\">BINARY</span>(<span class=\"hljs-number\">16</span>) COMMENT <span class=\"hljs-string\">&#x27;Null when Binary/Annotation.endpoint is null, or no IPv6 address&#x27;</span>,<br>  `endpoint_port` <span class=\"hljs-type\">SMALLINT</span> COMMENT <span class=\"hljs-string\">&#x27;Null when Binary/Annotation.endpoint is null&#x27;</span>,<br>  `endpoint_service_name` <span class=\"hljs-type\">VARCHAR</span>(<span class=\"hljs-number\">255</span>) COMMENT <span class=\"hljs-string\">&#x27;Null when Binary/Annotation.endpoint is null&#x27;</span><br>) ENGINE<span class=\"hljs-operator\">=</span>InnoDB ROW_FORMAT<span class=\"hljs-operator\">=</span>COMPRESSED <span class=\"hljs-type\">CHARACTER</span> <span class=\"hljs-keyword\">SET</span><span class=\"hljs-operator\">=</span>utf8 <span class=\"hljs-keyword\">COLLATE</span> utf8_general_ci;<br><br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> zipkin_annotations <span class=\"hljs-keyword\">ADD</span> <span class=\"hljs-keyword\">UNIQUE</span> KEY(`trace_id_high`, `trace_id`, `span_id`, `a_key`, `a_timestamp`) COMMENT <span class=\"hljs-string\">&#x27;Ignore insert on duplicate&#x27;</span>;<br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> zipkin_annotations <span class=\"hljs-keyword\">ADD</span> INDEX(`trace_id_high`, `trace_id`, `span_id`) COMMENT <span class=\"hljs-string\">&#x27;for joining with zipkin_spans&#x27;</span>;<br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> zipkin_annotations <span class=\"hljs-keyword\">ADD</span> INDEX(`trace_id_high`, `trace_id`) COMMENT <span class=\"hljs-string\">&#x27;for getTraces/ByIds&#x27;</span>;<br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> zipkin_annotations <span class=\"hljs-keyword\">ADD</span> INDEX(`endpoint_service_name`) COMMENT <span class=\"hljs-string\">&#x27;for getTraces and getServiceNames&#x27;</span>;<br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> zipkin_annotations <span class=\"hljs-keyword\">ADD</span> INDEX(`a_type`) COMMENT <span class=\"hljs-string\">&#x27;for getTraces and autocomplete values&#x27;</span>;<br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> zipkin_annotations <span class=\"hljs-keyword\">ADD</span> INDEX(`a_key`) COMMENT <span class=\"hljs-string\">&#x27;for getTraces and autocomplete values&#x27;</span>;<br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> zipkin_annotations <span class=\"hljs-keyword\">ADD</span> INDEX(`trace_id`, `span_id`, `a_key`) COMMENT <span class=\"hljs-string\">&#x27;for dependencies job&#x27;</span>;<br><br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TABLE</span> IF <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">EXISTS</span> zipkin_dependencies (<br>  `<span class=\"hljs-keyword\">day</span>` <span class=\"hljs-type\">DATE</span> <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span>,<br>  `parent` <span class=\"hljs-type\">VARCHAR</span>(<span class=\"hljs-number\">255</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span>,<br>  `child` <span class=\"hljs-type\">VARCHAR</span>(<span class=\"hljs-number\">255</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">NULL</span>,<br>  `call_count` <span class=\"hljs-type\">BIGINT</span>,<br>  `error_count` <span class=\"hljs-type\">BIGINT</span>,<br>  <span class=\"hljs-keyword\">PRIMARY</span> KEY (`<span class=\"hljs-keyword\">day</span>`, `parent`, `child`)<br>) ENGINE<span class=\"hljs-operator\">=</span>InnoDB ROW_FORMAT<span class=\"hljs-operator\">=</span>COMPRESSED <span class=\"hljs-type\">CHARACTER</span> <span class=\"hljs-keyword\">SET</span><span class=\"hljs-operator\">=</span>utf8 <span class=\"hljs-keyword\">COLLATE</span> utf8_general_ci;<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"启动Zipkin\"><a href=\"#启动Zipkin\" class=\"headerlink\" title=\"启动Zipkin\"></a>启动Zipkin</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">java -jar zipkin.jar --STORAGE_TYPE=mysql --MYSQL_HOST=192.168.56.120 --MYSQL_TCP_PORT=3306 --MYSQL_DB=zipkin --MYSQL_USER=root --MYSQL_PASS=123456<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"使用elasticsearch实现数据持久化\"><a href=\"#使用elasticsearch实现数据持久化\" class=\"headerlink\" title=\"使用elasticsearch实现数据持久化\"></a>使用elasticsearch实现数据持久化</h4><h5 id=\"下载elasticsearch\"><a href=\"#下载elasticsearch\" class=\"headerlink\" title=\"下载elasticsearch\"></a>下载elasticsearch</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">wget https://mirrors.huaweicloud.com/elasticsearch/7.10.1/elasticsearch-7.10.1-linux-x86_64.tar.gz<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"启动elasticsearch\"><a href=\"#启动elasticsearch\" class=\"headerlink\" title=\"启动elasticsearch\"></a>启动elasticsearch</h5><blockquote>\n<p>注意：ES5以后LINUX系统只能允许非ROOT用户进行启动</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">groupadd elasticsearch<br>useradd elasticsearch -g elasticsearch<br>passwd elasticsearch<br>chown -R elasticsearch:elasticsearch elasticsearch-7.10.1<br>./elasticsearch<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"启动Zipkin-1\"><a href=\"#启动Zipkin-1\" class=\"headerlink\" title=\"启动Zipkin\"></a>启动Zipkin</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">java -jar zipkin.jar STORAGE_TYPE=elasticsearch ES_HOST=http://192.168.56.121:9200<br></code></pre></td></tr></table></figure>\n",
            "tags": [
                "JAVA",
                "Spring",
                "SpringCloud",
                "SpringCloud Alibaba"
            ]
        },
        {
            "id": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/Spring/SpringBoot-%E5%A4%9A%E9%85%8D%E7%BD%AE%E9%A1%B9%E5%A4%84%E7%90%86/",
            "url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/Spring/SpringBoot-%E5%A4%9A%E9%85%8D%E7%BD%AE%E9%A1%B9%E5%A4%84%E7%90%86/",
            "title": "SpringBoot-多配置项处理",
            "date_published": "2024-01-03T13:13:21.648Z",
            "content_html": "<h1 id=\"背景简介\"><a href=\"#背景简介\" class=\"headerlink\" title=\"背景简介\"></a>背景简介</h1><blockquote>\n<p>因为博猪最近在开发一个sass平台，牵扯到一些常用的第三方的对接，自己也实现了一些第三方的对接，但是由于业务的需要，系统平台可能不太满足同一种类型的第三方，所以特此记录一下。</p>\n<p>本文以常用的短信平台来举例，只是涉及设计思维，并不进行代码实现，相关第三方实现请参考第三方的API文档或者相关资料。</p>\n<p>项目假设：系统需同时满足三个短信运营商的使用。</p>\n</blockquote>\n<h1 id=\"项目准备\"><a href=\"#项目准备\" class=\"headerlink\" title=\"项目准备\"></a>项目准备</h1><h2 id=\"项目依赖\"><a href=\"#项目依赖\" class=\"headerlink\" title=\"项目依赖\"></a>项目依赖</h2><h3 id=\"父项目\"><a href=\"#父项目\" class=\"headerlink\" title=\"父项目\"></a>父项目</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">parent</span>&gt;</span><br>   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.4.4<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">relativePath</span>/&gt;</span> <span class=\"hljs-comment\">&lt;!-- lookup parent from repository --&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">parent</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"相关依赖\"><a href=\"#相关依赖\" class=\"headerlink\" title=\"相关依赖\"></a>相关依赖</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">scope</span>&gt;</span>test<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">scope</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"运营商枚举\"><a href=\"#运营商枚举\" class=\"headerlink\" title=\"运营商枚举\"></a>运营商枚举</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">enum</span> <span class=\"hljs-title class_\">SmsISPEnum</span> &#123;<br><br>    TENCENT(<span class=\"hljs-string\">&quot;Tencent&quot;</span>, <span class=\"hljs-string\">&quot;腾讯云短信&quot;</span>),<br>    GENLAN(<span class=\"hljs-string\">&quot;GenLan&quot;</span>, <span class=\"hljs-string\">&quot;创蓝253&quot;</span>),<br>    ZYYX(<span class=\"hljs-string\">&quot;Zyyx&quot;</span>, <span class=\"hljs-string\">&quot;卓越云想&quot;</span>);<br><br>    <span class=\"hljs-keyword\">private</span> String code;<br>    <span class=\"hljs-keyword\">private</span> String  name;<br><br>    SmsISPEnum(String code, String name) &#123;<br>        <span class=\"hljs-built_in\">this</span>.code = code;<br>        <span class=\"hljs-built_in\">this</span>.name = name;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">getCode</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> code;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">getName</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> name;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"定义短信接口\"><a href=\"#定义短信接口\" class=\"headerlink\" title=\"定义短信接口\"></a>定义短信接口</h2><blockquote>\n<p>定义统一短信接口，任何短信相关的都必须实现该接口！！</p>\n<p>该接口存在的目的：定义一套基本的短信接口行为，第三方特性功能由接口实现类进行拓展。</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> SmsManager</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span></span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/10/6 20:45</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">SmsManager</span> &#123;<br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 异步发送短信</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> phone 手机号</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> content 短信内容</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">asyncSendSms</span><span class=\"hljs-params\">(String phone, String content)</span>;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 发送短信</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> phone 手机号</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> content 短信内容</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">sendSms</span><span class=\"hljs-params\">(String phone, String content)</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"腾讯短信\"><a href=\"#腾讯短信\" class=\"headerlink\" title=\"腾讯短信\"></a>腾讯短信</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> TencentSmsManagerImpl</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span>  腾讯短信</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/10/6 20:50</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@Service</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TencentSmsManagerImpl</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">SmsManager</span> &#123;<br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">asyncSendSms</span><span class=\"hljs-params\">(String phone, String content)</span> &#123;<br>        <span class=\"hljs-comment\">//发送短信实现</span><br>        System.out.println(<span class=\"hljs-string\">&quot;TencentSmsManagerImpl.asyncSendSms&quot;</span>);<br>    &#125;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">sendSms</span><span class=\"hljs-params\">(String phone, String content)</span> &#123;<br>        <span class=\"hljs-comment\">//发送短信实现</span><br>        System.out.println(<span class=\"hljs-string\">&quot;TencentSmsManagerImpl.sendSms&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"253创蓝短信\"><a href=\"#253创蓝短信\" class=\"headerlink\" title=\"253创蓝短信\"></a>253创蓝短信</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> GenLanSmsManagerImpl</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span>   253创蓝短信</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/10/6 20:52</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@Service</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">GenLanSmsManagerImpl</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">SmsManager</span> &#123;<br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">asyncSendSms</span><span class=\"hljs-params\">(String phone, String content)</span> &#123;<br>        <span class=\"hljs-comment\">//发送短信实现</span><br>        System.out.println(<span class=\"hljs-string\">&quot;GenLanSmsManagerImpl.asyncSendSms&quot;</span>);<br>    &#125;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">sendSms</span><span class=\"hljs-params\">(String phone, String content)</span> &#123;<br>        <span class=\"hljs-comment\">//发送短信实现</span><br>        System.out.println(<span class=\"hljs-string\">&quot;GenLanSmsManagerImpl.asyncSendSms&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"卓越云想\"><a href=\"#卓越云想\" class=\"headerlink\" title=\"卓越云想\"></a>卓越云想</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> ZyyxSmsManagerImpl</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span>  卓越云想</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/10/6 20:52</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@Service</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ZyyxSmsManagerImpl</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">SmsManager</span> &#123;<br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">asyncSendSms</span><span class=\"hljs-params\">(String phone, String content)</span> &#123;<br>        <span class=\"hljs-comment\">//发送短信实现</span><br>        System.out.println(<span class=\"hljs-string\">&quot;ZyyxSmsManagerImpl.asyncSendSms&quot;</span>);<br>    &#125;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">sendSms</span><span class=\"hljs-params\">(String phone, String content)</span> &#123;<br>        <span class=\"hljs-comment\">//发送短信实现</span><br>        System.out.println(<span class=\"hljs-string\">&quot;ZyyxSmsManagerImpl.asyncSendSms&quot;</span>);<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"初步实现-单一版\"><a href=\"#初步实现-单一版\" class=\"headerlink\" title=\"初步实现-单一版\"></a>初步实现-单一版</h1><p>前期博猪只能使用进行使用单一的运营商，当然前期只有两家运营商，但实际使用的只有一家运营商，具体代码实现如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@SpringBootApplication</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">MessageEngineApplication</span> &#123;<br>    <span class=\"hljs-meta\">@Bean</span><br>    <span class=\"hljs-keyword\">public</span> SmsManager <span class=\"hljs-title function_\">smsManager</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-type\">SmsManager</span> <span class=\"hljs-variable\">smsManager</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TencentSmsManagerImpl</span>();<br>        <span class=\"hljs-keyword\">return</span> smsManager;<br>    &#125;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> &#123;<br>        SpringApplication.run(MessageEngineApplication.class, args);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>以上代码其实很好理解，其实就是在项目启动时，手动创建一个指定的实例，注入进去，但是这种方式的弊端也就出现了：由于腾讯云短信或者阿里大于（阿里云短信）等是面向大众或者面向大多数用户的，所以他们的短信比较适用于模板化，所以非模板话的话是不能实现的，下面举个栗子：</p>\n<ul>\n<li>发送短信验证码</li>\n<li>取件码</li>\n<li>相关通知</li>\n</ul>\n<p>通过上面我们发现，针对需求量大，且要求稳定的时候，我们使用以上平台的运营商是可以的，但是针对一下场景那就只能一个模板定义一套了：</p>\n<ul>\n<li>针对某些快捷操作，比如下载电子订单等，发送还有短连接的短信</li>\n<li>针对某些模板我们可以共用一套，然后通过我们一些工具或者配置实现我们短信模板的复用</li>\n</ul>\n<p>。。。。虽然针对以上场景大多数是运营商各种不兼容导致的，但是业务场景也是摆在这里，所以我们还是需要进行去实现的，我看了一下我们大拿写的Redis根据模板发送站内信的代码实现，照葫芦画瓢，实现了一个简易版的兼容多配置的短信发送。</p>\n<h1 id=\"最终实现-我全都要\"><a href=\"#最终实现-我全都要\" class=\"headerlink\" title=\"最终实现-我全都要\"></a>最终实现-我全都要</h1><h2 id=\"定义启动配置类\"><a href=\"#定义启动配置类\" class=\"headerlink\" title=\"定义启动配置类\"></a>定义启动配置类</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> SmsConfiguration</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span></span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/10/6 20:44</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@Configuration</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">SmsConfiguration</span> &#123;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> Map&lt;String, SmsManager&gt; smsManagerMap = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">HashMap</span>&lt;&gt;(<span class=\"hljs-number\">3</span>);<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> SmsManager <span class=\"hljs-title function_\">getSmsManager</span><span class=\"hljs-params\">(String ispType)</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> smsManagerMap.get(ispType);<br>    &#125;<br><br>    <span class=\"hljs-meta\">@PostConstruct</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">initServices</span><span class=\"hljs-params\">()</span> &#123;<br>        smsManagerMap.put(SmsISPEnum.TENCENT.getCode(), <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TencentSmsManagerImpl</span>());<br>        smsManagerMap.put(SmsISPEnum.GENLAN.getCode(), <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenLanSmsManagerImpl</span>());<br>        smsManagerMap.put(SmsISPEnum.ZYYX.getCode(), <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ZyyxSmsManagerImpl</span>());<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"调用方式案例\"><a href=\"#调用方式案例\" class=\"headerlink\" title=\"调用方式案例\"></a>调用方式案例</h2><blockquote>\n<p>具体相关配置我全部搞到数据库中了，这里为了记录核心思想，暂时写死！！！</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> SmsBootStrap</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span></span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/10/6 20:54</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">SmsBootStrap</span> &#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> &#123;<br><br>        <span class=\"hljs-type\">ConfigurableApplicationContext</span> <span class=\"hljs-variable\">context</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">AnnotationConfigApplicationContext</span>(SmsConfiguration.class);<br><br>        <span class=\"hljs-type\">SmsManager</span> <span class=\"hljs-variable\">smsManager</span> <span class=\"hljs-operator\">=</span> SmsConfiguration.getSmsManager(SmsISPEnum.TENCENT.getCode());<br>        smsManager.sendSms(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-literal\">null</span>);<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>通过上方案例其实不难发现，只是运用了SpringBoot启动加载时配置优先级的问题，<code>@Configuration</code>配置类会在所有实例注入后，在进行实现，所以他的优先级是最低的。</p>\n",
            "tags": [
                "JAVA",
                "Spring",
                "Spring Boot"
            ]
        },
        {
            "id": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/Spring/Spring-Cloud-Alibaba(7)-%E6%B6%88%E6%81%AF%E9%A9%B1%E5%8A%A8/",
            "url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/Spring/Spring-Cloud-Alibaba(7)-%E6%B6%88%E6%81%AF%E9%A9%B1%E5%8A%A8/",
            "title": "Spring-Cloud-Alibaba(7)-消息驱动",
            "date_published": "2024-01-03T13:13:21.648Z",
            "content_html": "<p>‍</p>\n",
            "tags": [
                "JAVA",
                "Spring",
                "SpringCloud",
                "SpringCloud Alibaba"
            ]
        },
        {
            "id": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/Spring/Spring-Cloud-Alibaba(4)-%E6%9C%8D%E5%8A%A1%E5%AE%B9%E9%94%99/",
            "url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/Spring/Spring-Cloud-Alibaba(4)-%E6%9C%8D%E5%8A%A1%E5%AE%B9%E9%94%99/",
            "title": "Spring-Cloud-Alibaba(4)-服务容错",
            "date_published": "2024-01-03T13:13:21.647Z",
            "content_html": "<h1 id=\"高并发带来的问题\"><a href=\"#高并发带来的问题\" class=\"headerlink\" title=\"高并发带来的问题\"></a>高并发带来的问题</h1><p>在微服务架构中，我们将业务拆分成一个个的服务，服务与服务之间可以相互调用，但是由于网络原因或者自身的原因，服务并不能保证服务的100%可用，如果单个服务出现问题，调用这个服务就会出现网络延迟，此时若有大量的网络涌入，会形成任务堆积，最终导致服务瘫痪。</p>\n<p>接下来我们通过一个案例，来模拟一下一个高并发的场景。</p>\n<ul>\n<li>新建<code>HighConcurrencyController</code>测试类</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><br><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> HighConcurrencyController</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span> TODO</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/7/12 20:50</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@RestController</span><br><span class=\"hljs-meta\">@Slf4j</span><br><span class=\"hljs-meta\">@RequestMapping(&quot;/highConcurrency&quot;)</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">HighConcurrencyController</span> &#123;<br><br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">private</span> ProductFeignClient productFeignClient;<br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">private</span> OrderService orderService;<br><br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 保存指定产品订单</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> pId</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-meta\">@GetMapping(&quot;/save/&#123;pId&#125;&quot;)</span><br>    <span class=\"hljs-keyword\">public</span> Order <span class=\"hljs-title function_\">order</span><span class=\"hljs-params\">(<span class=\"hljs-meta\">@PathVariable(&quot;pId&quot;)</span> Integer pId, <span class=\"hljs-meta\">@RequestParam(name = &quot;queryType&quot;)</span> String queryType)</span> &#123;<br>        log.info(<span class=\"hljs-string\">&quot;&gt;&gt;客户下单，这时候要调用商品微服务查询商品信息&quot;</span>);<br>        <span class=\"hljs-type\">Product</span> <span class=\"hljs-variable\">product</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-literal\">null</span>;<br>        <span class=\"hljs-comment\">// 通过restTemplate调用商品微服务</span><br>        product = queryProductLoadBalancingByFeign(pId);<br>        log.info(<span class=\"hljs-string\">&quot;&gt;&gt;商品信息,查询结果:&quot;</span> + JSON.toJSONString(product));<br>        <span class=\"hljs-comment\">//模拟网络延时</span><br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            Thread.sleep(<span class=\"hljs-number\">1000L</span>);<br>        &#125; <span class=\"hljs-keyword\">catch</span> (InterruptedException e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>        <span class=\"hljs-type\">Order</span> <span class=\"hljs-variable\">order</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Order</span>();<br>        order.setUId(<span class=\"hljs-number\">1</span>);<br>        order.setUserName(<span class=\"hljs-string\">&quot;测试用户&quot;</span>);<br>        order.setPId(product.getPId());<br>        order.setPName(product.getPName());<br>        order.setPPrice(product.getPPrice());<br>        order.setNumber(<span class=\"hljs-number\">1</span>);<br>        orderService.saveOrder(order);<br>        <span class=\"hljs-keyword\">return</span> order;<br>    &#125;<br><br>    <span class=\"hljs-meta\">@GetMapping(&quot;/getMessage&quot;)</span><br>    <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">getMessage</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;测试高并发&quot;</span>;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * RestTemplate   负载均衡风格查询</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> pId    产品id</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">private</span> Product <span class=\"hljs-title function_\">queryProductLoadBalancingByFeign</span><span class=\"hljs-params\">(Integer pId)</span> &#123;<br>        <span class=\"hljs-type\">ProductVO</span> <span class=\"hljs-variable\">productVO</span> <span class=\"hljs-operator\">=</span> productFeignClient.queryProductInfoByProductId(pId);<br>        <span class=\"hljs-keyword\">if</span> (productVO != <span class=\"hljs-literal\">null</span>) &#123;<br>            <span class=\"hljs-type\">Product</span> <span class=\"hljs-variable\">product</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Product</span>();<br>            BeanUtils.copyProperties(productVO, product);<br>            <span class=\"hljs-keyword\">return</span> product;<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>修改配置文件中tomcat的并发数</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">server:</span><br>  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">8091</span><br>  <span class=\"hljs-attr\">tomcat:</span><br>    <span class=\"hljs-attr\">max-threads:</span> <span class=\"hljs-number\">10</span> <span class=\"hljs-comment\">#tomcat的最大并发值修改为10,默认是200</span><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>压力测试</li>\n</ul>\n<blockquote>\n<p>本次使用jmeter进行压力测试，创建步骤为：</p>\n<ul>\n<li>创建线程组，线程数量为20，间隔时间为1s，循环次数为：100次；</li>\n<li>创建http请求，填写创建订单请求信息</li>\n<li>创建查看结果树，查看请求结果</li>\n<li>启动</li>\n</ul>\n</blockquote>\n<ul>\n<li>访问ｍessage方法观察效果</li>\n</ul>\n<p>结论：</p>\n<blockquote>\n<p>此时会发现, 由于order方法囤积了大量请求, 导致ｍessage方法的访问出现了问题，这就是服务雪崩的雏形。</p>\n</blockquote>\n<h1 id=\"服务雪崩效应\"><a href=\"#服务雪崩效应\" class=\"headerlink\" title=\"服务雪崩效应\"></a>服务雪崩效应</h1><p><strong>在分布式系统中,由于网络原因或自身的原因,服务一般无法保证 100% 可用。如果一个服务出现了问题，调用这个服务就会出现线程阻塞的情况，此时若有大量的请求涌入，就会出现多条线程阻塞等待，进而导致服务瘫痪。</strong>​<strong>由于服务与服务之间的依赖性，故障会传播，会对整个微服务系统造成灾难性的严重后果，这就是服务故障的 “雪崩效应”。</strong></p>\n<p><img src=\"https://ftp.bmp.ovh/imgs/2021/07/806b4e49574f0d7c.jpg\"></p>\n<p><strong>雪崩发生的原因多种多样，有不合理的容量设计，或者是高并发下某一个方法响应变慢，亦或是某台机器的资源耗尽。我们无法完全杜绝雪崩源头的发生，只有做好足够的容错，保证在一个服务发生问题，不会影响到其它服务的正常运行。也就是＂雪落而不雪崩＂。</strong></p>\n<h1 id=\"常见容错方案\"><a href=\"#常见容错方案\" class=\"headerlink\" title=\"常见容错方案\"></a>常见容错方案</h1><p>要防止雪崩的扩散，我们就要做好服务的容错，容错说白了就是保护自己不被猪队友拖垮的一些措施, 下面介绍常见的服务容错思路和组件。</p>\n<h2 id=\"常见的容错思路\"><a href=\"#常见的容错思路\" class=\"headerlink\" title=\"常见的容错思路\"></a>常见的容错思路</h2><p>常见的容错思路有隔离、超时、限流、熔断、降级这几种，下面分别介绍一下。</p>\n<h3 id=\"隔离\"><a href=\"#隔离\" class=\"headerlink\" title=\"隔离\"></a>隔离</h3><p>它是指将系统按照一定的原则划分为若干个服务模块，各个模块之间相对独立，无强依赖。当有故障发生时，能将问题和影响隔离在某个模块内部，而不扩散风险，不波及其它模块，不影响整体的系统服务。常见的隔离方式有：线程池隔离和信号量隔离．</p>\n<p><img src=\"https://z3.ax1x.com/2021/07/18/W8Nehj.png\" alt=\"W8Nehj.png\"><a href=\"https://imgtu.com/i/W8Nehj\">https://imgtu.com/i/W8Nehj</a></p>\n<h3 id=\"超时\"><a href=\"#超时\" class=\"headerlink\" title=\"超时\"></a>超时</h3><p>在上游服务调用下游服务的时候，设置一个最大响应时间，如果超过这个时间，下游未作出反应，就断开请求，释放掉线程。</p>\n<h3 id=\"限流\"><a href=\"#限流\" class=\"headerlink\" title=\"限流\"></a>限流</h3><p>限流就是限制系统的输入和输出流量已达到保护系统的目的。为了保证系统的稳固运行,一旦达到的需要限制的阈值,就需要限制流量并采取少量措施以完成限制流量的目的。</p>\n<h3 id=\"熔断\"><a href=\"#熔断\" class=\"headerlink\" title=\"熔断\"></a>熔断</h3><p>在互联网系统中，当下游服务因访问压力过大而响应变慢或失败，上游服务为了保护系统整体的可用性，可以暂时切断对下游服务的调用。这种牺牲局部，保全整体的措施就叫做熔断。</p>\n<p>服务熔断一般有三种状态：</p>\n<ul>\n<li>熔断关闭状态（Closed）<br>服务没有故障时，熔断器所处的状态，对调用方的调用不做任何限制</li>\n<li>熔断开启状态（Open）<br>后续对该服务接口的调用不再经过网络，直接执行本地的fallback方法</li>\n<li>半熔断状态（Half-Open）<br>尝试恢复服务调用，允许有限的流量调用该服务，并监控调用成功率。如果成功率达到预期，则说明服务已恢复，进入熔断关闭状态；如果成功率仍旧很低，则重新进入熔断关闭状态。</li>\n</ul>\n<h3 id=\"降级\"><a href=\"#降级\" class=\"headerlink\" title=\"降级\"></a>降级</h3><p>降级其实就是为服务提供一个托底方案，一旦服务无法正常调用，就使用托底方案。</p>\n<h1 id=\"常见的容错组件\"><a href=\"#常见的容错组件\" class=\"headerlink\" title=\"常见的容错组件\"></a>常见的容错组件</h1><h2 id=\"Hystrix\"><a href=\"#Hystrix\" class=\"headerlink\" title=\"Hystrix\"></a>Hystrix</h2><p>Hystrix是由Netflix开源的一个延迟和容错库，用于隔离访问远程系统、服务或者第三方库，防止级联失败，从而提升系统的可用性与容错性。</p>\n<h2 id=\"Resilience4J\"><a href=\"#Resilience4J\" class=\"headerlink\" title=\"Resilience4J\"></a>Resilience4J</h2><p>Resilicence4J一款非常轻量、简单，并且文档非常清晰、丰富的熔断工具，这也是Hystrix官方推荐的替代产品。不仅如此，Resilicence4j还原生支持Spring Boot 1.x&#x2F;2.x，而且监控也支持和prometheus等多款主流产品进行整合。</p>\n<h2 id=\"Sentinel\"><a href=\"#Sentinel\" class=\"headerlink\" title=\"Sentinel\"></a>Sentinel</h2><p>Sentinel 是阿里巴巴开源的一款断路器实现，本身在阿里内部已经被大规模采用，非常稳定。</p>\n<h2 id=\"组件对比\"><a href=\"#组件对比\" class=\"headerlink\" title=\"组件对比\"></a>组件对比</h2><table>\n<thead>\n<tr>\n<th></th>\n<th>Sentinel</th>\n<th>Hystrix</th>\n<th>resilience4j</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>隔离策略</td>\n<td>信号量隔离（并发线程数限流）</td>\n<td>线程池隔离&#x2F;信号隔离</td>\n<td>信号量隔离</td>\n</tr>\n<tr>\n<td>熔断降级策略</td>\n<td>基于响应时间、异常比率、异常数</td>\n<td>基于异常比率</td>\n<td>基于异常比率、响应</td>\n</tr>\n<tr>\n<td>实时统计实现</td>\n<td>滑动窗口（LeapArray）</td>\n<td>滑动窗口（基于RxJava)</td>\n<td>Ring Bit Buffer</td>\n</tr>\n<tr>\n<td>动态规则配置</td>\n<td>支持多种数据源</td>\n<td>支持多种数据</td>\n<td>有限支持</td>\n</tr>\n<tr>\n<td>扩展性</td>\n<td>多个扩展点</td>\n<td>插件的形式</td>\n<td>接口的形式</td>\n</tr>\n<tr>\n<td>基于注解的支持</td>\n<td>:white_check_mark:</td>\n<td>:white_check_mark:</td>\n<td>:white_check_mark:</td>\n</tr>\n<tr>\n<td>限流</td>\n<td>基于 QPS，支持基于调用关系的限流</td>\n<td>有限的支持</td>\n<td>Rate Limiter</td>\n</tr>\n<tr>\n<td>流量整形</td>\n<td>支持预热模式、匀速器模式、预热排队模式</td>\n<td>:x:</td>\n<td>简单的RateLimiter</td>\n</tr>\n<tr>\n<td>系统自适应保护</td>\n<td>:white_check_mark:</td>\n<td>:x:</td>\n<td>:x:</td>\n</tr>\n<tr>\n<td>控制台</td>\n<td>提供开箱即用的控制台，可配置规则、查看秒级监控、机器发现等</td>\n<td>简单的监控查看</td>\n<td>不提供控制台，可对接其它监控系统</td>\n</tr>\n</tbody></table>\n<h1 id=\"Sentinel入门\"><a href=\"#Sentinel入门\" class=\"headerlink\" title=\"Sentinel入门\"></a>Sentinel入门</h1><h2 id=\"什么是Sentinel\"><a href=\"#什么是Sentinel\" class=\"headerlink\" title=\"什么是Sentinel\"></a>什么是Sentinel</h2><p>Sentinel (分布式系统的流量防卫兵) 是阿里开源的一套用于服务容错的综合性解决方案。它以流量为切入点, 从流量控制、熔断降级、系统负载保护等多个维度来保护服务的稳定性。</p>\n<p>Sentinel 具有以下特征:</p>\n<ul>\n<li>丰富的应用场景：Sentinel 承接了阿里巴巴近 10 年的双十一大促流量的核心场景, 例如秒杀（即突发流量控制在系统容量可以承受的范围）、消息削峰填谷、集群流量控制、实时熔断下游不可用应用等。</li>\n<li>完备的实时监控：Sentinel 提供了实时的监控功能。通过控制台可以看到接入应用的单台机器秒级数据, 甚至 500 台以下规模的集群的汇总运行情况。<br>广泛的开源生态：Sentinel 提供开箱即用的与其它开源框架&#x2F;库的整合模块, 例如与 Spring Cloud、Dubbo、gRPC 的整合。只需要引入相应的依赖并进行简单的配置即可快速地接入Sentinel。</li>\n<li>完善的 SPI 扩展点：Sentinel 提供简单易用、完善的 SPI 扩展接口。您可以通过实现扩展接口来快速地定制逻辑。例如定制规则管理、适配动态数据源等。</li>\n</ul>\n<p>Sentinel 分为两个部分:</p>\n<ul>\n<li>核心库（Java 客户端）不依赖任何框架&#x2F;库,能够运行于所有 Java 运行时环境，同时对 Dubbo &#x2F;Spring Cloud 等框架也有较好的支持。</li>\n<li>控制台（Dashboard）基于 Spring Boot 开发，打包后可以直接运行，不需要额外的 Tomcat 等应用容器。</li>\n</ul>\n<h2 id=\"微服务集成Sentinel\"><a href=\"#微服务集成Sentinel\" class=\"headerlink\" title=\"微服务集成Sentinel\"></a>微服务集成Sentinel</h2><p>为微服务集成Sentinel非常简单, 只需要加入Sentinel的依赖即可</p>\n<h3 id=\"下载jar包\"><a href=\"#下载jar包\" class=\"headerlink\" title=\"下载jar包\"></a>下载jar包</h3><p>访问<a href=\"https://github.com/alibaba/Sentinel/releases\">sentinel的官方</a>​<a href=\"https://github.com/alibaba/Sentinel/releases\"><code>GitHub</code></a>​<a href=\"https://github.com/alibaba/Sentinel/releases\">仓库下载jar包</a></p>\n<h3 id=\"启动jar包\"><a href=\"#启动jar包\" class=\"headerlink\" title=\"启动jar包\"></a>启动jar包</h3><blockquote>\n<p>直接使用jar命令启动项目(控制台本身是一个SpringBoot项目)</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">java -jar sentinel-dashboard-1.8.2.jar -Dserver.port=8080 -Dcsp.sentinel.dashboard.server=localhost:8080 -Dporject.name=sentinel-dashboard<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"在测试高并发专用接口\"><a href=\"#在测试高并发专用接口\" class=\"headerlink\" title=\"在测试高并发专用接口\"></a>在测试高并发专用接口</h3><blockquote>\n<p><code>HighConcurrencyController</code>中添加测试方法</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@RequestMapping(&quot;/message1&quot;)</span><br><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">message1</span><span class=\"hljs-params\">()</span> &#123;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;message1&quot;</span>;<br>&#125;<br><br><span class=\"hljs-meta\">@RequestMapping(&quot;/message2&quot;)</span><br><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">message2</span><span class=\"hljs-params\">()</span> &#123;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;message2&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"引入依赖\"><a href=\"#引入依赖\" class=\"headerlink\" title=\"引入依赖\"></a>引入依赖</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-comment\">&lt;!--sentinel--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.alibaba.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-sentinel<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"添加配置\"><a href=\"#添加配置\" class=\"headerlink\" title=\"添加配置\"></a>添加配置</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">sentinel:</span><br>  <span class=\"hljs-attr\">transport:</span><br>    <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">9999</span> <span class=\"hljs-comment\">#跟控制台交流的端口,随意指定一个未使用的端口即可</span><br>    <span class=\"hljs-attr\">dashboard:</span> <span class=\"hljs-string\">localhost:8080</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动order服务测试\"><a href=\"#启动order服务测试\" class=\"headerlink\" title=\"启动order服务测试\"></a>启动order服务测试</h3><p>启动成功后访问地址：<code>localhost:8080</code>，账号和密码默认都是sentinel，访问后你会发现服务信息为空白。</p>\n<p><img src=\"https://ftp.bmp.ovh/imgs/2021/07/d869eb55dcf31cd1.png\"></p>\n<h3 id=\"发送-highConcurrency-message1请求，再次测试\"><a href=\"#发送-highConcurrency-message1请求，再次测试\" class=\"headerlink\" title=\"发送/highConcurrency/message1请求，再次测试\"></a>发送<code>/highConcurrency/message1</code>请求，再次测试</h3><p><img src=\"https://ftp.bmp.ovh/imgs/2021/07/70b99c97f9b0c76b.png\"></p>\n<h3 id=\"补充：了解控制台的使用原理\"><a href=\"#补充：了解控制台的使用原理\" class=\"headerlink\" title=\"补充：了解控制台的使用原理\"></a>补充：了解控制台的使用原理</h3><p>Sentinel的控制台其实就是一个SpringBoot编写的程序。我们需要将我们的微服务程序注册到控制台上,即在微服务中指定控制台的地址, 并且还要开启一个跟控制台传递数据的端口, 控制台也可以通过此端口调用微服务中的监控程序获取微服务的各种信息。</p>\n<p><img src=\"https://user-images.githubusercontent.com/9434884/53381986-a0b73f00-39ad-11e9-90cf-b49158ae4b6f.png\"></p>\n<h3 id=\"入门案例-实现一个接口的限流\"><a href=\"#入门案例-实现一个接口的限流\" class=\"headerlink\" title=\"入门案例[实现一个接口的限流]\"></a>入门案例[实现一个接口的限流]</h3><ul>\n<li>通过控制台为message1添加一个流控规则</li>\n</ul>\n<p><img src=\"https://z3.ax1x.com/2021/07/18/W8YnaQ.png\" alt=\"W8YnaQ.png\"><a href=\"https://imgtu.com/i/W8YnaQ\">https://imgtu.com/i/W8YnaQ</a></p>\n<p><img src=\"https://z3.ax1x.com/2021/07/18/W8Yl2q.png\" alt=\"W8Yl2q.png\"><a href=\"https://imgtu.com/i/W8Yl2q\">https://imgtu.com/i/W8Yl2q</a></p>\n<ul>\n<li>通过控制台快速频繁访问, 观察效果</li>\n</ul>\n<p><img src=\"https://z3.ax1x.com/2021/07/18/W8YNa4.png\" alt=\"W8YNa4.png\"><a href=\"https://imgtu.com/i/W8YNa4\">https://imgtu.com/i/W8YNa4</a></p>\n<h1 id=\"Sentinel的概念和功能\"><a href=\"#Sentinel的概念和功能\" class=\"headerlink\" title=\"Sentinel的概念和功能\"></a>Sentinel的概念和功能</h1><h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><h3 id=\"资源\"><a href=\"#资源\" class=\"headerlink\" title=\"资源\"></a>资源</h3><p><strong>资源就是Sentinel要保护的东西</strong></p>\n<p>资源是 Sentinel 的关键概念。它可以是 Java 应用程序中的任何内容，可以是一个服务，也可以是一个方法，甚至可以是一段代码。</p>\n<blockquote>\n<p>我们入门案例中的message1方法就可以认为是一个资源</p>\n</blockquote>\n<h3 id=\"规则\"><a href=\"#规则\" class=\"headerlink\" title=\"规则\"></a>规则</h3><p><strong>规则就是用来定义如何进行保护资源的</strong></p>\n<p>作用在资源之上, 定义以什么样的方式保护资源，主要包括流量控制规则、熔断降级规则以及系统保护规则。</p>\n<blockquote>\n<p>我们入门案例中就是为message1资源设置了一种流控规则, 限制了进入message1的流量</p>\n</blockquote>\n<h2 id=\"重要功能\"><a href=\"#重要功能\" class=\"headerlink\" title=\"重要功能\"></a>重要功能</h2><p>Sentinel的主要功能就是容错，主要体现为下面这三个：</p>\n<ul>\n<li><p>流量控制<br>流量控制在网络传输中是一个常用的概念，它用于调整网络包的数据。任意时间到来的请求往往是随机不可控的，而系统的处理能力是有限的。我们需要根据系统的处理能力对流量进行控制。Sentinel 作为一个调配器，可以根据需要把随机的请求调整成合适的形状。</p>\n</li>\n<li><p>熔断降级<br>当检测到调用链路中某个资源出现不稳定的表现，例如请求响应时间长或异常比例升高的时候，则对这个资源的调用进行限制，让请求快速失败，避免影响到其它的资源而导致级联故障。Sentinel 对这个问题采取了两种手段:</p>\n<ul>\n<li>通过并发线程数进行限制<br>Sentinel 通过限制资源并发线程的数量，来减少不稳定资源对其它资源的影响。当某个资源出现不稳定的情况下，例如响应时间变长，对资源的直接影响就是会造成线程数的逐步堆积。当线程数在特定资源上堆积到一定的数量之后，对该资源的新请求就会被拒绝。堆积的线程完成任务后才开始继续接收请求。</li>\n<li>通过响应时间对资源进行降级<br>除了对并发线程数进行控制以外，Sentinel 还可以通过响应时间来快速降级不稳定的资源。当依赖的资源出现响应时间过长后，所有对该资源的访问都会被直接拒绝，直到过了指定的时间窗口之后才重新恢复。</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>Sentinel 和 Hystrix 的区别<br>两者的原则是一致的, 都是当一个资源出现问题时, 让其快速失败, 不要波及到其它服务但是在限制的手段上, 确采取了完全不一样的方法:</p>\n<ul>\n<li>Hystrix 采用的是线程池隔离的方式, 优点是做到了资源之间的隔离, 缺点是增加了线程切换的成本。</li>\n<li>Sentinel 采用的是通过并发线程的数量和响应时间来对资源做限制。</li>\n</ul>\n</blockquote>\n<ul>\n<li><p>系统负载保护</p>\n<p>Sentinel 同时提供系统维度的自适应保护能力。当系统负载较高的时候，如果还持续让请求进入可能会导致系统崩溃，无法响应。在集群环境下，会把本应这台机器承载的流量转发到其它的机器上去。如果这个时候其它的机器也处在一个边缘状态的时候，Sentinel 提供了对应的保护机制，让系统的入口流量和系统的负载达到一个平衡，保证系统在能力范围之内处理最多的请求。</p>\n</li>\n</ul>\n<p><strong>总之一句话: 我们需要做的事情，就是在Sentinel的资源上配置各种各样的规则，来实现各种容错的功能。</strong></p>\n<h2 id=\"Sentinel规则\"><a href=\"#Sentinel规则\" class=\"headerlink\" title=\"Sentinel规则\"></a>Sentinel规则</h2><h3 id=\"流控规则\"><a href=\"#流控规则\" class=\"headerlink\" title=\"流控规则\"></a>流控规则</h3><p>流量控制，其原理是监控应用流量的QPS(每秒查询率) 或并发线程数等指标，当达到指定的阈值时对流量进行控制，以避免被瞬时的流量高峰冲垮，从而保障应用的高可用性。</p>\n<p>点击簇点链路，我们就可以看到访问过的接口地址，然后点击对应的流控按钮，进入流控规则配置页面。新增流控规则界面如下:</p>\n<p><img src=\"https://z3.ax1x.com/2021/07/18/W8YBxx.png\" alt=\"W8YBxx.png\"><a href=\"https://imgtu.com/i/W8YBxx\">https://imgtu.com/i/W8YBxx</a></p>\n<ul>\n<li><strong>资源名：唯一名称，默认是请求路径，可自定义</strong></li>\n</ul>\n<p><strong>针对来源：指定对哪个微服务进行限流，默认指default，意思是不区分来源，全部限制</strong></p>\n<ul>\n<li><strong>阈值类型&#x2F;单机阈值：</strong><ul>\n<li><strong>QPS（每秒请求数量）: 当调用该接口的QPS达到阈值的时候，进行限流</strong></li>\n<li><strong>线程数：当调用该接口的线程数达到阈值的时候，进行限流</strong></li>\n</ul>\n</li>\n<li><strong>是否集群：暂不需要集群</strong><br>接下来我们以QPS为例来研究限流规则的配置。</li>\n</ul>\n<h4 id=\"简单配置\"><a href=\"#简单配置\" class=\"headerlink\" title=\"简单配置\"></a>简单配置</h4><p>我们先做一个简单配置，设置阈值类型为QPS，单机阈值为3。即每秒请求量大于3的时候开始限流。</p>\n<p>接下来，在流控规则页面就可以看到这个配置。</p>\n<p><img src=\"https://z3.ax1x.com/2021/07/18/W8YssK.png\" alt=\"W8YssK.png\"><a href=\"https://imgtu.com/i/W8YssK\">https://imgtu.com/i/W8YssK</a></p>\n<p>然后快速访问<code>message1</code> 接口，观察效果。此时发现，当QPS &gt; 3的时候，服务就不能正常响应，而是返回Blocked by Sentinel (flow limiting)结果。</p>\n<p><img src=\"https://z3.ax1x.com/2021/07/18/W8YNa4.png\" alt=\"W8YNa4.png\"></p>\n<h4 id=\"配置流控模式\"><a href=\"#配置流控模式\" class=\"headerlink\" title=\"配置流控模式\"></a>配置流控模式</h4><p>点击上面设置流控规则的<code>编辑</code>按钮，然后在编辑页面点击<code>高级选项</code>，会看到有流控模式一栏。</p>\n<p><img src=\"https://z3.ax1x.com/2021/07/18/W8YhRI.png\" alt=\"W8YhRI.png\"><a href=\"https://imgtu.com/i/W8YhRI\">https://imgtu.com/i/W8YhRI</a></p>\n<p>sentinel共有三种流控模式，分别是：</p>\n<ul>\n<li>直接（默认）：接口达到限流条件时，开启限流</li>\n<li>关联：当关联的资源达到限流条件时，开启限流 [适合做应用让步]</li>\n<li>链路：当从某个接口过来的资源达到限流条件时，开启限流</li>\n</ul>\n<p>下面呢分别演示三种模式.</p>\n<h5 id=\"直接流控模式\"><a href=\"#直接流控模式\" class=\"headerlink\" title=\"直接流控模式\"></a>直接流控模式</h5><p>直接流控模式是最简单的模式，当指定的接口达到限流条件时开启限流。上面案例使用的就是直接流控模式。</p>\n<h5 id=\"关联流控模式\"><a href=\"#关联流控模式\" class=\"headerlink\" title=\"关联流控模式\"></a>关联流控模式</h5><p>关联流控模式指的是，当指定接口关联的接口达到限流条件时，开启对指定接口开启限流。</p>\n<ul>\n<li>配置限流规则, 将流控模式设置为关联，关联资源设置为的<code>message2</code></li>\n<li>使用jmeter进行压力测试访问，<strong>注意QPS一定要大于0.3，即每秒请求大于等于三次。</strong></li>\n<li>第4步：访问<code>message1</code>,会发现已经被限流</li>\n</ul>\n<p>[<img src=\"https://z3.ax1x.com/2021/07/18/W8YTL8.png\" alt=\"W8YTL8.png\"></p>\n<h5 id=\"链路流控模式\"><a href=\"#链路流控模式\" class=\"headerlink\" title=\"链路流控模式\"></a>链路流控模式</h5><p>链路流控模式指的是，当从某个接口过来的资源达到限流条件时，开启限流。它的功能有点类似于针对来源配置项，区别在于：针对来源是针对上级微服务，而链路流控是针对上级接口，也就是说它的粒度更细。</p>\n<ul>\n<li>在<code>OrderService</code>中新建抽象接口</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * 打印信息</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">printMessage</span><span class=\"hljs-params\">()</span>;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>在<code>OrderServiceImpl</code>进行实现</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Override</span><br><span class=\"hljs-meta\">@SentinelResource(&quot;message&quot;)</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">printMessage</span><span class=\"hljs-params\">()</span> &#123;<br>    System.out.println(<span class=\"hljs-string\">&quot;OrderService.printMessage&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>在<code>message1</code>、<code>message2</code>中分别增加该调用方法</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@RequestMapping(&quot;/message1&quot;)</span><br><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">message1</span><span class=\"hljs-params\">()</span> &#123;<br>    orderService.printMessage();<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;message1&quot;</span>;<br>&#125;<br><br><span class=\"hljs-meta\">@RequestMapping(&quot;/message2&quot;)</span><br><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">message2</span><span class=\"hljs-params\">()</span> &#123;<br>    orderService.printMessage();<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;message2&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>禁止收敛URL的入口 context</li>\n</ul>\n<blockquote>\n<p>从1.6.3 版本开始，Sentinel Web filter默认收敛所有URL的入口context，因此链路限流不生效。<br>1.7.0 版本开始（对应SCA的2.1.1.RELEASE)，官方在CommonFilter 引入了WEB_CONTEXT_UNIFY 参数，用于控制是否收敛context。将其配置为 false 即可根据不同的URL 进行链路限流。SCA 2.1.1.RELEASE之后的版本,可以通过配置spring.cloud.sentinel.web-context-unify&#x3D;false即可关闭收敛</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">sentinel:</span><br>  <span class=\"hljs-attr\">web-context-unify:</span> <span class=\"hljs-literal\">false</span><br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Configuration</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">FilterContextConfig</span> &#123;<br><br>    <span class=\"hljs-meta\">@Bean</span><br>    <span class=\"hljs-keyword\">public</span> FilterRegistrationBean <span class=\"hljs-title function_\">sentinelFilterRegistrationBean</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-type\">FilterRegistrationBean</span> <span class=\"hljs-variable\">registration</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FilterRegistrationBean</span>();<br>        registration.setFilter(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">CommonFilter</span>());<br>        registration.addUrlPatterns(<span class=\"hljs-string\">&quot;/*&quot;</span>);<br>       <span class=\"hljs-comment\">// 入口资源关闭聚合</span><br>        registration.addInitParameter(CommonFilter.WEB_CONTEXT_UNIFY,<span class=\"hljs-string\">&quot;false&quot;</span>);<br>        registration.setName(<span class=\"hljs-string\">&quot;sentinelFilter&quot;</span>);<br>        registration.setOrder(<span class=\"hljs-number\">1</span>);<br>        <span class=\"hljs-keyword\">return</span> registration;<br><br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>控制台配置限流规则</li>\n</ul>\n<p><img src=\"https://z3.ax1x.com/2021/07/18/W8YzQ0.png\" alt=\"W8YzQ0.png\"><a href=\"https://imgtu.com/i/W8YzQ0\">https://imgtu.com/i/W8YzQ0</a></p>\n<ul>\n<li>分别通过<code>message1</code> 和<code>message2</code> 访问, 发现2没问题, 1的被限流了</li>\n</ul>\n<h5 id=\"配置流控效果\"><a href=\"#配置流控效果\" class=\"headerlink\" title=\"配置流控效果\"></a>配置流控效果</h5><ul>\n<li>快速失败（默认）: 直接失败，抛出异常，不做任何额外的处理，是最简单的效果</li>\n<li>Warm Up：它从开始阈值到最大QPS阈值会有一个缓冲阶段，一开始的阈值是最大QPS阈值的1&#x2F;3，然后慢慢增长，直到最大阈值，适用于将突然增大的流量转换为缓步增长的场景。</li>\n<li>排队等待：让请求以均匀的速度通过，单机阈值为每秒通过数量，其余的排队等待； 它还会让设置一个超时时间，当请求超过超时间时间还未处理，则会被丢弃。</li>\n</ul>\n<h4 id=\"配置降级规则\"><a href=\"#配置降级规则\" class=\"headerlink\" title=\"配置降级规则\"></a>配置降级规则</h4><p>降级规则就是设置当满足什么条件的时候，对服务进行降级。Sentinel提供了三个衡量条件：</p>\n<ul>\n<li>平均响应时间 ：当资源的平均响应时间超过阈值（以 ms 为单位）之后，资源进入准降级状态。<br>如果接下来 1s 内持续进入 5 个请求，它们的 RT都持续超过这个阈值，那么在接下的时间窗口（以 s 为单位）之内，就会对这个方法进行服务降级。</li>\n</ul>\n<p><img src=\"https://z3.ax1x.com/2021/07/18/W8tio4.png\" alt=\"W8tio4.png\"><a href=\"https://imgtu.com/i/W8tio4\">https://imgtu.com/i/W8tio4</a></p>\n<blockquote>\n<p>上述配置为当响应时间大于1毫秒的时候，接下来的十秒内该服务进行降级，十秒后回复正常，进行下一轮的判断。</p>\n<p>注意:</p>\n<p>Sentinel 默认统计的 RT 上限是 4900 ms，超出此阈值的都会算作 4900 ms，若需要变更此上限可以通过启动配置项 -Dcsp.sentinel.statistic.max.rt&#x3D;xxx 来配置。</p>\n</blockquote>\n<ul>\n<li><p>异常比例：当资源的每秒异常总数占通过量的比值超过阈值之后，资源进入降级状态，即在接下的时间窗口（以 s 为单位）之内，对这个方法的调用都会自动地返回。异常比率的阈值范围是 [0.0,1.0]。</p>\n<ul>\n<li>模拟一个异常</li>\n</ul>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs typescript\"><span class=\"hljs-meta\">@RequestMapping</span>(<span class=\"hljs-string\">&quot;/message1&quot;</span>)<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title class_\">String</span> <span class=\"hljs-title function_\">message1</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-comment\">//异常比例为0.33</span><br>    <span class=\"hljs-keyword\">for</span> (int i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">30</span>; i++) &#123;<br>        <span class=\"hljs-keyword\">if</span> (i % <span class=\"hljs-number\">3</span> == <span class=\"hljs-number\">0</span>) &#123;<br>            <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RuntimeException</span>();<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;message1&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>设置异常比例为0.25</li>\n</ul>\n<p><img src=\"https://i.bmp.ovh/imgs/2021/09/34f69b017981f9a6.png\"></p>\n<ul>\n<li>异常数 ：当资源近 1 分钟的异常数目超过阈值之后会进行服务降级。注意由于统计时间窗口是分钟级别的，若时间窗口小于 60s，则结束熔断状态后仍可能再进入熔断状态。</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://i.bmp.ovh/imgs/2021/09/14bfdc57aeca8152.png\"></p>\n<blockquote>\n<p>问题：<br>流控规则和降级规则返回的异常页面是一样的，我们怎么来区分到底是什么原因导致的呢？</p>\n</blockquote>\n<h4 id=\"配置热点规则\"><a href=\"#配置热点规则\" class=\"headerlink\" title=\"配置热点规则\"></a>配置热点规则</h4><p>热点参数流控规则是一种更细粒度的流控规则, 它允许将规则具体到参数上。</p>\n<h5 id=\"简单配置-1\"><a href=\"#简单配置-1\" class=\"headerlink\" title=\"简单配置\"></a>简单配置</h5><ul>\n<li><p>编写代码</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs less\"><span class=\"hljs-variable\">@RequestMapping</span>(<span class=\"hljs-string\">&quot;/message3&quot;</span>)<br><span class=\"hljs-variable\">@SentinelResource</span>(<span class=\"hljs-string\">&quot;messages3&quot;</span>)<span class=\"hljs-comment\">//注意这里必须使用这个注解标识,热点规则不生效</span><br>public String <span class=\"hljs-built_in\">message3</span>(String name,Integer age) &#123;<br>    <span class=\"hljs-selector-tag\">return</span> <span class=\"hljs-selector-tag\">name</span> + <span class=\"hljs-selector-tag\">age</span>;<br>&#125;<br></code></pre></td></tr></table></figure></li>\n<li><p>配置热点规则</p>\n</li>\n</ul>\n<p><img src=\"https://i.loli.net/2021/09/05/ySYaLxKuJf9sDOU.png\" alt=\"image-20210905201210835\"></p>\n<ul>\n<li>分别用两个参数访问,会发现只对第一个参数限流了</li>\n</ul>\n<h5 id=\"热点规则增强使用\"><a href=\"#热点规则增强使用\" class=\"headerlink\" title=\"热点规则增强使用\"></a>热点规则增强使用</h5><p>参数例外项允许对一个参数的具体值进行流控</p>\n<ul>\n<li>编辑刚才定义的规则,增加参数例外项</li>\n</ul>\n<p><img src=\"https://i.bmp.ovh/imgs/2021/09/0d1b9c0cae07396d.png\"></p>\n<h3 id=\"授权规则\"><a href=\"#授权规则\" class=\"headerlink\" title=\"授权规则\"></a>授权规则</h3><p>很多时候，我们需要根据调用来源来判断该次请求是否允许放行，这时候可以使用 Sentinel 的来源<br>访问控制的功能。来源访问控制根据资源的请求来源（origin）限制资源是否通过：</p>\n<ul>\n<li>若配置白名单，则只有请求来源位于白名单内时才可通过；</li>\n<li>若配置黑名单，则请求来源位于黑名单时不通过，其余的请求通过。</li>\n</ul>\n<p><img src=\"https://i.bmp.ovh/imgs/2021/09/94bc40c52a38bde8.png\"></p>\n<p>上面的资源名和授权类型不难理解，但是流控应用怎么填写呢？</p>\n<blockquote>\n<p>其实这个位置要填写的是来源标识，Sentinel提供了<code>RequestOriginParser</code>接口来处理来源。</p>\n<p>只要Sentinel保护的接口资源被访问，Sentinel就会调用RequestOriginParser的实现类去解析访问来源。</p>\n<p>下方有坑，请注意！！！！</p>\n<hr>\n<p><strong>&#x3D;&#x3D;注意：由于上方配置流控规则是把收敛的接口都开放了，博猪在实现<code>RequestOriginParser</code>接口处理来源，配置黑白名单时不生效，这个具体原因博猪还没进一步查看源码实现逻辑，可能是sentinel的一个bug，所以需要把注入的<code>FilterRegistrationBean</code>去掉，配置文件中的<code>WEB_CONTEXT_UNIFY ​</code>去掉！！&#x3D;&#x3D;</strong></p>\n</blockquote>\n<h4 id=\"自定义处理规则\"><a href=\"#自定义处理规则\" class=\"headerlink\" title=\"自定义处理规则\"></a>自定义处理规则</h4><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs typescript\"><span class=\"hljs-meta\">@Component</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ServiceNameOriginParser</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">RequestOriginParser</span> &#123;<br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title class_\">String</span> <span class=\"hljs-title function_\">parseOrigin</span>(<span class=\"hljs-params\">HttpServletRequest httpServletRequest</span>) &#123;<br>        <span class=\"hljs-title class_\">String</span> serviceName = httpServletRequest.<span class=\"hljs-title function_\">getParameter</span>(<span class=\"hljs-string\">&quot;serviceName&quot;</span>);<br>        <span class=\"hljs-keyword\">return</span> serviceName;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"配置授权规则\"><a href=\"#配置授权规则\" class=\"headerlink\" title=\"配置授权规则\"></a>配置授权规则</h4><blockquote>\n<p>解释一下配置含义：当seriviceName&#x3D;pc时不能访问（黑名单）</p>\n</blockquote>\n<p><img src=\"https://i.bmp.ovh/imgs/2021/09/ad32eb08f12b3954.png\"></p>\n<h4 id=\"访问配置地址，查看结果\"><a href=\"#访问配置地址，查看结果\" class=\"headerlink\" title=\"访问配置地址，查看结果\"></a>访问配置地址，查看结果</h4><p>访问<a href=\"http://localhost:8091/highConcurrency/getMessage?serviceName=pc%EF%BC%8C%E6%9F%A5%E7%9C%8B%E7%BB%93%E6%9E%9C\">http://localhost:8091/highConcurrency/getMessage?serviceName=pc，查看结果</a></p>\n<h3 id=\"系统规则\"><a href=\"#系统规则\" class=\"headerlink\" title=\"系统规则\"></a>系统规则</h3><p>系统保护规则是从应用级别的入口流量进行控制，从单台机器的总体 Load、RT、入口 QPS 、CPU使用率和线程数五个维度监控应用数据，让系统尽可能跑在最大吞吐量的同时保证系统整体的稳定性。</p>\n<p>系统保护规则是应用整体维度的，而不是资源维度的，并且仅对入口流量 (进入应用的流量) 生效。</p>\n<ul>\n<li>Load（仅对 Linux&#x2F;Unix-like 机器生效）：当系统 load1 超过阈值，且系统当前的并发线程数超过系统容量时才会触发系统保护。系统容量由系统的 maxQps * minRt 计算得出。设定参考值一般是 CPU cores * 2.5。</li>\n<li>RT：当单台机器上所有入口流量的平均 RT 达到阈值即触发系统保护，单位是毫秒。</li>\n<li>线程数：当单台机器上所有入口流量的并发线程数达到阈值即触发系统保护。</li>\n<li>入口 QPS：当单台机器上所有入口流量的 QPS 达到阈值即触发系统保护。</li>\n<li>CPU使用率：当单台机器上所有入口流量的 CPU使用率达到阈值即触发系统保护。</li>\n</ul>\n<h3 id=\"拓展-自定义异常返回\"><a href=\"#拓展-自定义异常返回\" class=\"headerlink\" title=\"拓展-自定义异常返回\"></a>拓展-自定义异常返回</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Component</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">SentinelExceptionHandler</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">BlockExceptionHandler</span> &#123;<br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * BlockException 异常接口,包含Sentinel的五个异常</span><br><span class=\"hljs-comment\">     * FlowException          限流异常</span><br><span class=\"hljs-comment\">     * DegradeException       降级异常</span><br><span class=\"hljs-comment\">     * ParamFlowException     参数限流异常</span><br><span class=\"hljs-comment\">     * AuthorityException     授权异常</span><br><span class=\"hljs-comment\">     * SystemBlockException   系统负载异常</span><br><span class=\"hljs-comment\">     * */</span><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">handle</span><span class=\"hljs-params\">(HttpServletRequest request, HttpServletResponse response, BlockException e)</span> <span class=\"hljs-keyword\">throws</span> Exception &#123;<br>        response.setContentType(<span class=\"hljs-string\">&quot;application/json;charset=utf-8&quot;</span>);<br>        <span class=\"hljs-type\">ResponseData</span> <span class=\"hljs-variable\">responseData</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-literal\">null</span>;<br>        <span class=\"hljs-keyword\">if</span> (e <span class=\"hljs-keyword\">instanceof</span> FlowException) &#123;<br>            responseData = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ResponseData</span>(<span class=\"hljs-number\">4001</span>, <span class=\"hljs-string\">&quot;接口被限流！&quot;</span>);<br>        &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (e <span class=\"hljs-keyword\">instanceof</span> DegradeException) &#123;<br>            responseData = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ResponseData</span>(<span class=\"hljs-number\">4002</span>, <span class=\"hljs-string\">&quot;接口被降级！&quot;</span>);<br>        &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (e <span class=\"hljs-keyword\">instanceof</span> ParamFlowException) &#123;<br>            responseData = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ResponseData</span>(<span class=\"hljs-number\">4003</span>, <span class=\"hljs-string\">&quot;接口参数被限流！&quot;</span>);<br>        &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (e <span class=\"hljs-keyword\">instanceof</span> AuthorityException) &#123;<br>            responseData = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ResponseData</span>(<span class=\"hljs-number\">4004</span>, <span class=\"hljs-string\">&quot;接口授权异常！&quot;</span>);<br>        &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (e <span class=\"hljs-keyword\">instanceof</span> SystemBlockException) &#123;<br>            responseData = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ResponseData</span>(<span class=\"hljs-number\">4005</span>, <span class=\"hljs-string\">&quot;系统负载异常！&quot;</span>);<br>        &#125;<br>        response.getWriter().write(JSONObject.toJSONString(responseData));<br>    &#125;<br>&#125;<br><br><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * 返回类定义</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@Data</span><br><span class=\"hljs-meta\">@AllArgsConstructor</span><br><span class=\"hljs-meta\">@NoArgsConstructor</span><br><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ResponseData</span> &#123;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">int</span> code;<br>    <span class=\"hljs-keyword\">private</span> String message;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.loli.net/2021/09/05/gbKIefCR5xQZNTW.png\" alt=\"image.png\"></p>\n<h2 id=\"Sentinel注解\"><a href=\"#Sentinel注解\" class=\"headerlink\" title=\"Sentinel注解\"></a>Sentinel注解</h2><h3 id=\"SentinelResource\"><a href=\"#SentinelResource\" class=\"headerlink\" title=\"SentinelResource\"></a>SentinelResource</h3><p>在定义了资源点之后，我们可以通过Dashboard来设置限流和降级策略来对资源点进行保护。同时还能通过<code>@SentinelResource</code>来指定出现异常时的处理策略。<code>@SentinelResource</code> 用于定义资源，并提供可选的异常处理和 fallback 配置项。其主要参数如下:</p>\n<table>\n<thead>\n<tr>\n<th><strong>属性</strong></th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>value</td>\n<td>资源名称</td>\n</tr>\n<tr>\n<td>entryType</td>\n<td>entry类型，标记流量的方向，取值<code>IN/OUT</code>，默认是OUT</td>\n</tr>\n<tr>\n<td>blockHandler</td>\n<td>处理BlockException的函数名称,函数要求：<br />1.必须是 public<br />2. 返回类型 参数与原方法一致<br />3.默认需和原方法在同一个类中。若希望使用其他类的函数，可配置<code>blockHandlerClass</code>，并指定<code>blockHandlerClass</code>里面的方法。</td>\n</tr>\n<tr>\n<td>blockHandlerClass</td>\n<td>存放fallback的类。对应的处理函数必须static修饰。</td>\n</tr>\n<tr>\n<td>fallback</td>\n<td>用于在抛出异常的时候提供fallback处理逻辑。<br />fallback函数可以针对所有类型的异常（除了 exceptionsToIgnore 里面排除掉的异常类型）进行处理。<br />函数要求：<br />1. 返回类型与原方法一致<br />2. 参数类型需要和原方法相匹配<br />3. 默认需和原方法在同一个类中。若希望使用其他类的函数，可配置fallbackClass ，并指定fallbackClass里面的方法。</td>\n</tr>\n<tr>\n<td>fallbackClass</td>\n<td>存放fallback的类。对应的处理函数必须static修饰。</td>\n</tr>\n<tr>\n<td>defaultFallback</td>\n<td>用于通用的 fallback 逻辑。<br />默认fallback函数可以针对所有类型的异常进行处理。若同时配置了 fallback 和 defaultFallback，以fallback为准。<br />函数要求：<br />1. 返回类型与原方法一致<br />2. 方法参数列表为空，或者有一个 Throwable 类型的参数。<br />3.默认需要和原方法在同一个类中。若希望使用其他类的函数，可配置fallbackClass ，并指定 fallbackClass 里面的方法。</td>\n</tr>\n<tr>\n<td>exceptionsToIgnore</td>\n<td>指定排除掉哪些异常。排除的异常不会计入异常统计，也不会进入fallback逻辑，而是原样抛出。</td>\n</tr>\n<tr>\n<td>exceptionsToTrace</td>\n<td>需要trace的异常</td>\n</tr>\n</tbody></table>\n<p>下面通过代码案例演示</p>\n<h4 id=\"限流降级定义在同一个类里面\"><a href=\"#限流降级定义在同一个类里面\" class=\"headerlink\" title=\"限流降级定义在同一个类里面\"></a>限流降级定义在同一个类里面</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * &#123;<span class=\"hljs-doctag\">@link</span> SentinelResource&#125;</span><br><span class=\"hljs-comment\"> *  value：资源名称</span><br><span class=\"hljs-comment\"> *  blockHandler：sentinel异常捕获信息</span><br><span class=\"hljs-comment\"> *  fallback：业务异常（除sentinel异常之外的）的异常捕获信息</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@SentinelResource(value = &quot;message4&quot;, blockHandler = &quot;message4BlockHandler&quot;, fallback = &quot;message4Fallback&quot;)</span><br><span class=\"hljs-meta\">@GetMapping(&quot;/message4&quot;)</span><br><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">message4</span><span class=\"hljs-params\">()</span> &#123;<br>    ERROR_COUNT++;<br>    <span class=\"hljs-keyword\">if</span> (ERROR_COUNT % <span class=\"hljs-number\">3</span> == <span class=\"hljs-number\">0</span>) &#123;<br>        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RuntimeException</span>();<br>    &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;message4&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">message4BlockHandler</span><span class=\"hljs-params\">(BlockException e)</span> &#123;<br>    log.error(<span class=\"hljs-string\">&quot;message4 接口被限流或者被降级了!,exception info is:&quot;</span>, e);<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;message4 接口被限流或者被降级了!&quot;</span>;<br>&#125;<br><br><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">message4Fallback</span><span class=\"hljs-params\">(Throwable e)</span> &#123;<br>    log.error(<span class=\"hljs-string\">&quot;message4 接口异常!,throwable info is:&quot;</span>, e);<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;message4 接口异常!&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>运行</li>\n<li>增加流程规则，简单设置个QPS限制</li>\n<li>请求接口，测试。</li>\n</ul>\n<blockquote>\n<p>通过请求接口我们发现，throw出来的RuntimeException打印和返回的是<code>message4Fallback</code>的信息，sentinel的QPS的异常信息打印和返回是<code>message4BlockHandler</code>.</p>\n<ul>\n<li><strong>&#x3D;&#x3D;注意blockHandler里面的方法名一定要和实现异常处理的方法名一致，且返回类型一致！&#x3D;&#x3D;</strong></li>\n<li><strong>&#x3D;&#x3D;注意sentinel的<code>SentinelResource</code>的两个属性的实现方法是可以使用参数的，但是必须包含异常信息的参数，并且，blockHandler的异常只能是<code>BlockException</code>,其他类型则会自动进入<code>fallback</code>里面&#x3D;&#x3D;</strong></li>\n<li><code>SentinelResource</code>的异常高于自定义全局异常捕获机智！</li>\n</ul>\n</blockquote>\n<h3 id=\"将限流降级放在单独的类里面\"><a href=\"#将限流降级放在单独的类里面\" class=\"headerlink\" title=\"将限流降级放在单独的类里面\"></a>将限流降级放在单独的类里面</h3><h4 id=\"抽取限流方法\"><a href=\"#抽取限流方法\" class=\"headerlink\" title=\"抽取限流方法\"></a>抽取限流方法</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Slf4j</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">HighConcurrencyBlockHandler</span> &#123;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">message4BlockHandler</span><span class=\"hljs-params\">(BlockException e)</span> &#123;<br>        log.error(<span class=\"hljs-string\">&quot;message4 接口被限流或者被降级了,HighConcurrencyBlockHandler!,exception info is:&quot;</span>, e);<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;message4 接口被限流或者被降级了,HighConcurrencyBlockHandler!&quot;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"抽取fallback方法\"><a href=\"#抽取fallback方法\" class=\"headerlink\" title=\"抽取fallback方法\"></a>抽取fallback方法</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Slf4j</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">HighConcurrencyFallback</span> &#123;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">message4Fallback</span><span class=\"hljs-params\">(Throwable e)</span> &#123;<br>        log.error(<span class=\"hljs-string\">&quot;message4 接口异常,HighConcurrencyFallback!,throwable info is:&quot;</span>, e);<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;message4 接口异常,HighConcurrencyFallback!&quot;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"改造资源保护方法\"><a href=\"#改造资源保护方法\" class=\"headerlink\" title=\"改造资源保护方法\"></a>改造资源保护方法</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">  * &#123;<span class=\"hljs-doctag\">@link</span> SentinelResource&#125;</span><br><span class=\"hljs-comment\">  * value：资源名称</span><br><span class=\"hljs-comment\">  * blockHandler：sentinel异常捕获信息</span><br><span class=\"hljs-comment\">  * fallback：业务异常（除sentinel异常之外的）的异常捕获信息</span><br><span class=\"hljs-comment\">  *</span><br><span class=\"hljs-comment\">  * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">  */</span><br> <span class=\"hljs-meta\">@SentinelResource(value = &quot;message4&quot;,</span><br><span class=\"hljs-meta\">         blockHandler = &quot;message4BlockHandler&quot;, fallback = &quot;message4Fallback&quot;,</span><br><span class=\"hljs-meta\">         blockHandlerClass = HighConcurrencyBlockHandler.class, fallbackClass = HighConcurrencyFallback.class)</span><br> <span class=\"hljs-meta\">@GetMapping(&quot;/message4&quot;)</span><br> <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">message4</span><span class=\"hljs-params\">()</span> &#123;<br>     ERROR_COUNT++;<br>     <span class=\"hljs-keyword\">if</span> (ERROR_COUNT % <span class=\"hljs-number\">3</span> == <span class=\"hljs-number\">0</span>) &#123;<br>         <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RuntimeException</span>();<br>     &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>         <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;message4&quot;</span>;<br>     &#125;<br> &#125;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>运行</li>\n<li>增加流程规则，简单设置个QPS限制</li>\n<li>请求接口，测试。</li>\n</ul>\n<h2 id=\"Sentinel规则持久化\"><a href=\"#Sentinel规则持久化\" class=\"headerlink\" title=\"Sentinel规则持久化\"></a>Sentinel规则持久化</h2><p>通过前面的讲解，我们已经知道，可以通过Dashboard来为每个Sentinel客户端设置各种各样的规则，但是这里有一个问题，就是这些规则默认是存放在内存中，极不稳定，所以需要将其持久化。</p>\n<p>本地文件数据源会定时轮询文件的变更，读取规则。这样我们既可以在应用本地直接修改文件来更新规则，也可以通过 Sentinel 控制台推送规则。以本地文件数据源为例，推送过程如下图所示：</p>\n<p><img src=\"https://i.bmp.ovh/imgs/2021/09/cd5c368316e6c777.png\"></p>\n<p>首先 Sentinel 控制台通过 API 将规则推送至客户端并更新到内存中，接着注册的写数据源会将新的规则保存到本地的文件中。</p>\n<h3 id=\"实现实例化功能\"><a href=\"#实现实例化功能\" class=\"headerlink\" title=\"实现实例化功能\"></a>实现实例化功能</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><br><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> SentinelPersistence</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span> Sentitnel持久化</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/9/12 14:04</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">SentinelPersistence</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">InitFunc</span> &#123;<br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">init</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\">throws</span> Exception &#123;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">ruleDir</span> <span class=\"hljs-operator\">=</span> System.getProperty(<span class=\"hljs-string\">&quot;user.home&quot;</span>) + <span class=\"hljs-string\">&quot;/sentinel-rules/&quot;</span>;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">flowRulePath</span> <span class=\"hljs-operator\">=</span> ruleDir + <span class=\"hljs-string\">&quot;/flow-rule.json&quot;</span>;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">degradeRulePath</span> <span class=\"hljs-operator\">=</span> ruleDir + <span class=\"hljs-string\">&quot;/degrade-rule.json&quot;</span>;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">systemRulePath</span> <span class=\"hljs-operator\">=</span> ruleDir + <span class=\"hljs-string\">&quot;/system-rule.json&quot;</span>;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">authorityRulePath</span> <span class=\"hljs-operator\">=</span> ruleDir + <span class=\"hljs-string\">&quot;/authority-rule.json&quot;</span>;<br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">paramFlowRulePath</span> <span class=\"hljs-operator\">=</span> ruleDir + <span class=\"hljs-string\">&quot;/param-flow-rule.json&quot;</span>;<br><br>        <span class=\"hljs-built_in\">this</span>.mkdir(ruleDir);<br>        <span class=\"hljs-built_in\">this</span>.createFile(flowRulePath);<br>        <span class=\"hljs-built_in\">this</span>.createFile(degradeRulePath);<br>        <span class=\"hljs-built_in\">this</span>.createFile(systemRulePath);<br>        <span class=\"hljs-built_in\">this</span>.createFile(authorityRulePath);<br>        <span class=\"hljs-built_in\">this</span>.createFile(paramFlowRulePath);<br><br>        <span class=\"hljs-comment\">// 流控规则</span><br>        ReadableDataSource&lt;String, List&lt;FlowRule&gt;&gt; flowRuleRDS = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FileRefreshableDataSource</span>&lt;&gt;(<br>                flowRulePath,<br>                flowRuleListParser<br>        );<br>        FlowRuleManager.register2Property(flowRuleRDS.getProperty());<br>        WritableDataSource&lt;List&lt;FlowRule&gt;&gt; flowRuleWDS = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FileWritableDataSource</span>&lt;&gt;(<br>                flowRulePath,<br>                <span class=\"hljs-built_in\">this</span>::encodeJson<br>        );<br>        WritableDataSourceRegistry.registerFlowDataSource(flowRuleWDS);<br><br>        <span class=\"hljs-comment\">// 降级规则</span><br>        ReadableDataSource&lt;String, List&lt;DegradeRule&gt;&gt; degradeRuleRDS = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FileRefreshableDataSource</span>&lt;&gt;(<br>                degradeRulePath,<br>                degradeRuleListParser<br>        );<br>        DegradeRuleManager.register2Property(degradeRuleRDS.getProperty());<br>        WritableDataSource&lt;List&lt;DegradeRule&gt;&gt; degradeRuleWDS = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FileWritableDataSource</span>&lt;&gt;(<br>                degradeRulePath,<br>                <span class=\"hljs-built_in\">this</span>::encodeJson<br>        );<br>        WritableDataSourceRegistry.registerDegradeDataSource(degradeRuleWDS);<br><br>        <span class=\"hljs-comment\">// 系统规则</span><br>        ReadableDataSource&lt;String, List&lt;SystemRule&gt;&gt; systemRuleRDS = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FileRefreshableDataSource</span>&lt;&gt;(<br>                systemRulePath,<br>                systemRuleListParser<br>        );<br>        SystemRuleManager.register2Property(systemRuleRDS.getProperty());<br>        WritableDataSource&lt;List&lt;SystemRule&gt;&gt; systemRuleWDS = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FileWritableDataSource</span>&lt;&gt;(<br>                systemRulePath,<br>                <span class=\"hljs-built_in\">this</span>::encodeJson<br>        );<br>        WritableDataSourceRegistry.registerSystemDataSource(systemRuleWDS);<br><br>        <span class=\"hljs-comment\">// 授权规则</span><br>        ReadableDataSource&lt;String, List&lt;AuthorityRule&gt;&gt; authorityRuleRDS = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FileRefreshableDataSource</span>&lt;&gt;(<br>                authorityRulePath,<br>                authorityRuleListParser<br>        );<br>        AuthorityRuleManager.register2Property(authorityRuleRDS.getProperty());<br>        WritableDataSource&lt;List&lt;AuthorityRule&gt;&gt; authorityRuleWDS = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FileWritableDataSource</span>&lt;&gt;(<br>                authorityRulePath,<br>                <span class=\"hljs-built_in\">this</span>::encodeJson<br>        );<br>        WritableDataSourceRegistry.registerAuthorityDataSource(authorityRuleWDS);<br><br>        <span class=\"hljs-comment\">// 热点参数规则</span><br>        ReadableDataSource&lt;String, List&lt;ParamFlowRule&gt;&gt; paramFlowRuleRDS = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FileRefreshableDataSource</span>&lt;&gt;(<br>                paramFlowRulePath,<br>                paramFlowRuleListParser<br>        );<br>        ParamFlowRuleManager.register2Property(paramFlowRuleRDS.getProperty());<br>        WritableDataSource&lt;List&lt;ParamFlowRule&gt;&gt; paramFlowRuleWDS = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FileWritableDataSource</span>&lt;&gt;(<br>                paramFlowRulePath,<br>                <span class=\"hljs-built_in\">this</span>::encodeJson<br>        );<br>        ModifyParamFlowRulesCommandHandler.setWritableDataSource(paramFlowRuleWDS);<br>    &#125;<br><br>    <span class=\"hljs-keyword\">private</span> Converter&lt;String, List&lt;FlowRule&gt;&gt; flowRuleListParser = source -&gt; JSON.parseObject(<br>            source,<br>            <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TypeReference</span>&lt;List&lt;FlowRule&gt;&gt;() &#123;<br>            &#125;<br>    );<br>    <span class=\"hljs-keyword\">private</span> Converter&lt;String, List&lt;DegradeRule&gt;&gt; degradeRuleListParser = source -&gt; JSON.parseObject(<br>            source,<br>            <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TypeReference</span>&lt;List&lt;DegradeRule&gt;&gt;() &#123;<br>            &#125;<br>    );<br>    <span class=\"hljs-keyword\">private</span> Converter&lt;String, List&lt;SystemRule&gt;&gt; systemRuleListParser = source -&gt; JSON.parseObject(<br>            source,<br>            <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TypeReference</span>&lt;List&lt;SystemRule&gt;&gt;() &#123;<br>            &#125;<br>    );<br><br>    <span class=\"hljs-keyword\">private</span> Converter&lt;String, List&lt;AuthorityRule&gt;&gt; authorityRuleListParser = source -&gt; JSON.parseObject(<br>            source,<br>            <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TypeReference</span>&lt;List&lt;AuthorityRule&gt;&gt;() &#123;<br>            &#125;<br>    );<br><br>    <span class=\"hljs-keyword\">private</span> Converter&lt;String, List&lt;ParamFlowRule&gt;&gt; paramFlowRuleListParser = source -&gt; JSON.parseObject(<br>            source,<br>            <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TypeReference</span>&lt;List&lt;ParamFlowRule&gt;&gt;() &#123;<br>            &#125;<br>    );<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 创建文件夹，不存在则创建</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> filePath   文件路径</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@throws</span> IOException</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">mkdir</span><span class=\"hljs-params\">(String filePath)</span> <span class=\"hljs-keyword\">throws</span> IOException &#123;<br>        <span class=\"hljs-type\">File</span> <span class=\"hljs-variable\">file</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">File</span>(filePath);<br>        <span class=\"hljs-keyword\">if</span> (!file.exists()) &#123;<br>            file.mkdirs();<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 创建文件，不存在则创建</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> filePath    文件路径</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@throws</span> IOException</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">createFile</span><span class=\"hljs-params\">(String filePath)</span> <span class=\"hljs-keyword\">throws</span> IOException &#123;<br>        <span class=\"hljs-type\">File</span> <span class=\"hljs-variable\">file</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">File</span>(filePath);<br>        <span class=\"hljs-keyword\">if</span> (!file.exists()) &#123;<br>            file.createNewFile();<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">private</span> &lt;T&gt; String <span class=\"hljs-title function_\">encodeJson</span><span class=\"hljs-params\">(T t)</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> JSONObject.toJSONString(t);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"添加配置-1\"><a href=\"#添加配置-1\" class=\"headerlink\" title=\"添加配置\"></a>添加配置</h3><ul>\n<li>在<code>resource</code>下面创建配置目录<code>META-INF/services ​</code></li>\n<li>添加文件<code>com.alibaba.csp.sentinel.init.InitFunc</code></li>\n<li>在文件中添加配置类的全路径</li>\n</ul>\n<blockquote>\n<p><strong>&#x3D;&#x3D;该实例化存在一个严重的问题，我为了这个配置类的易用性，增加注入了一个spring的<code>spring.application.name</code>,但是不知道为啥，项目启动后改配置读取不到，显示为null,后经过debug发现的sentinel相关默认实现添加了spring的order排序，但是博猪更改排序后还是无效，这个疑问还请有踩过坑的，麻烦解读一下&#x3D;&#x3D;</strong></p>\n</blockquote>\n<h2 id=\"Feign整合Sentinel\"><a href=\"#Feign整合Sentinel\" class=\"headerlink\" title=\"Feign整合Sentinel\"></a>Feign整合Sentinel</h2><h3 id=\"引入sentinel的依赖\"><a href=\"#引入sentinel的依赖\" class=\"headerlink\" title=\"引入sentinel的依赖\"></a>引入sentinel的依赖</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-comment\">&lt;!--sentinel客户端--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.alibaba.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-sentinel<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"配置开启feign\"><a href=\"#配置开启feign\" class=\"headerlink\" title=\"配置开启feign\"></a>配置开启feign</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">feign:</span><br>  <span class=\"hljs-attr\">sentinel:</span><br>    <span class=\"hljs-attr\">enabled:</span> <span class=\"hljs-literal\">true</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"创建产品feign-api项目\"><a href=\"#创建产品feign-api项目\" class=\"headerlink\" title=\"创建产品feign-api项目\"></a>创建产品feign-api项目</h3><h4 id=\"创建shop-product-api模块，jar包形式\"><a href=\"#创建shop-product-api模块，jar包形式\" class=\"headerlink\" title=\"创建shop-product-api模块，jar包形式\"></a>创建<code>shop-product-api</code>模块，jar包形式</h4><h4 id=\"增加相关依赖\"><a href=\"#增加相关依赖\" class=\"headerlink\" title=\"增加相关依赖\"></a>增加相关依赖</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">properties</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">maven.compiler.source</span>&gt;</span>8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">maven.compiler.source</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">maven.compiler.target</span>&gt;</span>8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">maven.compiler.target</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">properties</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencies</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.projectlombok<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>lombok<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-comment\">&lt;!--fegin组件--&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencies</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"创建feignClient\"><a href=\"#创建feignClient\" class=\"headerlink\" title=\"创建feignClient\"></a>创建feignClient</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> ProductFeignClient</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span></span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/7/11 18:25</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@FeignClient(name = &quot;shop-product&quot;</span><br><span class=\"hljs-meta\">        , fallback = ProductFeignClientFallback.class)</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">ProductFeignClient</span> &#123;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">DEFAULT_FALLBACK_MSG</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&quot;服务不可用！&quot;</span>;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 根据产品id查询产品详情</span><br><span class=\"hljs-comment\">     *</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> productId</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-meta\">@GetMapping(&quot;/api/queryProductInfoByProductId/&#123;productId&#125;&quot;)</span><br>    <span class=\"hljs-keyword\">public</span> ProductVO <span class=\"hljs-title function_\">queryProductInfoByProductId</span><span class=\"hljs-params\">(<span class=\"hljs-meta\">@PathVariable</span> Integer productId)</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"创建fallback\"><a href=\"#创建fallback\" class=\"headerlink\" title=\"创建fallback\"></a>创建fallback</h4><figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs aspectj\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> ProductFeignClientFallback</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span></span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/7/11 18:29</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@Component</span><br><span class=\"hljs-meta\">@Slf</span>4j<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ProductFeignClientFallback</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">ProductFeignClient</span> </span>&#123;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\">ProductVO <span class=\"hljs-title\">queryProductInfoByProductId</span><span class=\"hljs-params\">(Integer productId)</span> </span>&#123;<br>        log.<span class=\"hljs-keyword\">error</span>(DEFAULT_FALLBACK_MSG);<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"创建feignClientVO\"><a href=\"#创建feignClientVO\" class=\"headerlink\" title=\"创建feignClientVO\"></a>创建feignClientVO</h4><figure class=\"highlight zephir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs zephir\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> ProductVO</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span></span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/7/11 18:33</span><br><span class=\"hljs-comment\"> */</span><br>@Data<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ProductVO</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">Serializable</span> </span>&#123;<br><br>   <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-keyword\">long</span> serialVersionUID = <span class=\"hljs-number\">1</span>L;<br><br>   <span class=\"hljs-comment\">/** 主键 */</span><br>   <span class=\"hljs-keyword\">private</span> Integer pId;<br>   <span class=\"hljs-comment\">/** 商品名称 */</span><br>   <span class=\"hljs-keyword\">private</span> String pName;<br>   <span class=\"hljs-comment\">/** 商品价格 */</span><br>   <span class=\"hljs-keyword\">private</span> Double pPrice;<br>   <span class=\"hljs-comment\">/** 库存 */</span><br>   <span class=\"hljs-keyword\">private</span> Integer stock;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"产品服务增加相关依赖\"><a href=\"#产品服务增加相关依赖\" class=\"headerlink\" title=\"产品服务增加相关依赖\"></a>产品服务增加相关依赖</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.letcoding<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>shop-product-api<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.0.0-SNAPSHOT<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">exclusions</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">exclusion</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.projectlombok<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>lombok<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">exclusion</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">exclusions</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"修改订单服务\"><a href=\"#修改订单服务\" class=\"headerlink\" title=\"修改订单服务\"></a>修改订单服务</h3><h4 id=\"订单服务开启feign，修改订单启动类\"><a href=\"#订单服务开启feign，修改订单启动类\" class=\"headerlink\" title=\"订单服务开启feign，修改订单启动类\"></a>订单服务开启feign，修改订单启动类</h4><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs less\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * @ClassName OrderApplication</span><br><span class=\"hljs-comment\"> * @Description</span><br><span class=\"hljs-comment\"> * @Author will</span><br><span class=\"hljs-comment\"> * @Date 2021/6/20 19:32</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-variable\">@SpringBootApplication</span><br><span class=\"hljs-variable\">@EnableDiscoveryClient</span><br><span class=\"hljs-variable\">@ComponentScan</span>(basePackages = &#123;<span class=\"hljs-string\">&quot;com.letcoding.order&quot;</span>,<span class=\"hljs-string\">&quot;com.letcoding.product&quot;</span>&#125;)<br><span class=\"hljs-variable\">@EnableFeignClients</span>(basePackages = <span class=\"hljs-string\">&quot;com.letcoding.product&quot;</span>)<br>public class OrderApplication &#123;<br>    <span class=\"hljs-selector-tag\">public</span> <span class=\"hljs-selector-tag\">static</span> <span class=\"hljs-selector-tag\">void</span> <span class=\"hljs-selector-tag\">main</span>(String[] args) &#123;<br>        <span class=\"hljs-selector-tag\">SpringApplication</span><span class=\"hljs-selector-class\">.run</span>(OrderApplication.class, args);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动测试\"><a href=\"#启动测试\" class=\"headerlink\" title=\"启动测试\"></a>启动测试</h3><ul>\n<li>启动产品服务、订单服务，创建订单试一下</li>\n<li>停止订单服务，再次下订单</li>\n</ul>\n<blockquote>\n<p>&#x3D;&#x3D;简单说明一下，个人对于feign编码的习惯，还是遵循低耦合的原则，尽量不适用公共的vo等，同时尽量精简定义feign的相关对象，提供http的传输效率，因为feign的底层也是http请求，所以过大的请求和各服务之间的相互调用，对于feign这一块还是要注意的！&#x3D;&#x3D;</p>\n<p>通过测试，我们发现，该方式请求不会正确的抛出异常来，所以如果想知道具体的fallback异常，请使用一下形式进行。</p>\n</blockquote>\n<figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs aspectj\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> ProductFeignClientFallbackFactory</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span></span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/9/12 21:42</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@Component</span><br><span class=\"hljs-meta\">@Slf</span>4j<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ProductFeignClientFallbackFactory</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">FallbackFactory</span>&lt;<span class=\"hljs-title\">ProductFeignClient</span>&gt; </span>&#123;<br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\">ProductFeignClient <span class=\"hljs-title\">create</span><span class=\"hljs-params\">(Throwable cause)</span> </span>&#123;<br>        log.<span class=\"hljs-keyword\">error</span>(<span class=\"hljs-string\">&quot;FallbackFactory,服务不可用！&quot;</span>,cause);<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> ProductFeignClient</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span></span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/7/11 18:25</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@FeignClient(name = &quot;shop-product&quot;</span><br><span class=\"hljs-meta\">//        , fallback = ProductFeignClientFallback.class</span><br><span class=\"hljs-meta\">        , fallbackFactory = ProductFeignClientFallbackFactory.class)</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">ProductFeignClient</span> &#123;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">DEFAULT_FALLBACK_MSG</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&quot;服务不可用！&quot;</span>;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 根据产品id查询产品详情</span><br><span class=\"hljs-comment\">     *</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> productId</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-meta\">@GetMapping(&quot;/api/queryProductInfoByProductId/&#123;productId&#125;&quot;)</span><br>    <span class=\"hljs-keyword\">public</span> ProductVO <span class=\"hljs-title function_\">queryProductInfoByProductId</span><span class=\"hljs-params\">(<span class=\"hljs-meta\">@PathVariable</span> Integer productId)</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>&#x3D;&#x3D;注意: fallback和fallbackFactory只能使用其中一种方式&#x3D;&#x3D;</p>\n</blockquote>\n",
            "tags": [
                "JAVA",
                "Spring",
                "SpringCloud",
                "SpringCloud Alibaba"
            ]
        },
        {
            "id": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/Spring/Spring-Cloud-Alibaba(5)-%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3/",
            "url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/Spring/Spring-Cloud-Alibaba(5)-%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3/",
            "title": "Spring-Cloud-Alibaba(5)-服务网关",
            "date_published": "2024-01-03T13:13:21.647Z",
            "content_html": "<h1 id=\"网关简介\"><a href=\"#网关简介\" class=\"headerlink\" title=\"网关简介\"></a>网关简介</h1><p>大家都都知道在微服务架构中，一个系统会被拆分为很多个微服务。那么作为客户端要如何去调用这么多的微服务呢？如果没有网关的存在，我们只能在客户端记录每个微服务的地址，然后分别去调用。</p>\n<p><img src=\"https://i.loli.net/2021/09/19/7jYrw2bhAay6N9u.png\" alt=\"image.png\"></p>\n<p>这样的架构，会存在着诸多的问题：</p>\n<ul>\n<li>客户端多次请求不同的微服务，增加客户端代码或配置编写的复杂性</li>\n<li>认证复杂，每个服务都需要独立认证。</li>\n<li>存在跨域请求，在一定场景下处理相对复杂。</li>\n</ul>\n<p>上面的这些问题可以借助<strong>API****网关</strong>来解决。</p>\n<p>所谓的API网关，就是指系统的<strong>统一入口</strong>，它封装了应用程序的内部结构，为客户端提供统一服务，一些与业务本身功能无关的公共逻辑可以在这里实现，诸如认证、鉴权、监控、路由转发等等。</p>\n<p>添加上API网关之后，系统的架构图变成了如下所示：</p>\n<p><img src=\"https://i.loli.net/2021/09/19/is1e54KcNrktqMZ.png\" alt=\"image.png\"></p>\n<p>我们也可以观察下，我们现在的整体架构图：</p>\n<p><img src=\"https://i.loli.net/2021/09/19/EMeVtuJa9KjNdLp.png\" alt=\"image.png\"></p>\n<p>在业界比较流行的网关，有下面这些：</p>\n<ul>\n<li><strong>Ngnix+lua</strong></li>\n</ul>\n<p>使用nginx的反向代理和负载均衡可实现对api服务器的负载均衡及高可用lua是一种脚本语言,可以来编写一些简单的逻辑, nginx支持lua脚本</p>\n<ul>\n<li><strong>Kong</strong></li>\n</ul>\n<p>基于Nginx+Lua开发，性能高，稳定，有多个可用的插件(限流、鉴权等等)可以开箱即用。 问题：只支持Http协议；二次开发，自由扩展困难；提供管理API，缺乏更易用的管控、配置方式。</p>\n<ul>\n<li><strong>Zuul</strong></li>\n</ul>\n<p>Netflflix开源的网关，功能丰富，使用JAVA开发，易于二次开发 问题：缺乏管控，无法动态配置；依赖组件较多；处理Http请求依赖的是Web容器，性能不如Nginx</p>\n<ul>\n<li><strong>Spring Cloud Gateway</strong></li>\n</ul>\n<p>Spring公司为了替换Zuul而开发的网关服务，将在下面具体介绍。</p>\n<blockquote>\n<p><strong>注意：SpringCloud alibaba技术栈中并没有提供自己的网关，我们可以采用Spring Cloud Gateway来做网关</strong></p>\n</blockquote>\n<h1 id=\"Gateway简介\"><a href=\"#Gateway简介\" class=\"headerlink\" title=\"Gateway简介\"></a>Gateway简介</h1><p>Spring Cloud Gateway是Spring公司基于Spring 5.0，Spring Boot 2.0 和 Project Reactor 等技术开发的网关，它旨在为微服务架构提供一种简单有效的统一的 API 路由管理方式。它的目标是替代Netflflix Zuul，其不仅提供统一的路由方式，并且基于 Filter 链的方式提供了网关基本的功能，例如：安全，监控和限流。</p>\n<p><strong>优点：</strong></p>\n<ul>\n<li>性能强劲：是第一代网关Zuul的1.6倍</li>\n<li>功能强大：内置了很多实用的功能，例如转发、监控、限流等</li>\n<li>设计优雅，容易扩展</li>\n</ul>\n<p><strong>缺点：</strong></p>\n<ul>\n<li>其实现依赖Netty与WebFlux，不是传统的Servlet编程模型，学习成本高</li>\n<li>不能将其部署在Tomcat、Jetty等Servlet容器里，只能打成jar包执行</li>\n<li>需要Spring Boot 2.0及以上的版本，才支持</li>\n</ul>\n<h1 id=\"Gateway快速入门\"><a href=\"#Gateway快速入门\" class=\"headerlink\" title=\"Gateway快速入门\"></a>Gateway快速入门</h1><blockquote>\n<p>要求: 通过浏览器访问api网关,然后通过网关将请求转发到商品微服务</p>\n</blockquote>\n<h2 id=\"基础版\"><a href=\"#基础版\" class=\"headerlink\" title=\"基础版\"></a><strong>基础版</strong></h2><h3 id=\"创建新模块shop-gateway\"><a href=\"#创建新模块shop-gateway\" class=\"headerlink\" title=\"创建新模块shop-gateway\"></a>创建新模块<code>shop-gateway</code></h3><h3 id=\"导入相关网关依赖\"><a href=\"#导入相关网关依赖\" class=\"headerlink\" title=\"导入相关网关依赖\"></a>导入相关网关依赖</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencies</span>&gt;</span><br>    <span class=\"hljs-comment\">&lt;!--gateway网关--&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-gateway<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencies</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"创建项目基本包路径com-letcoding-gateway\"><a href=\"#创建项目基本包路径com-letcoding-gateway\" class=\"headerlink\" title=\"创建项目基本包路径com.letcoding.gateway\"></a>创建项目基本包路径<code>com.letcoding.gateway</code></h3><h3 id=\"创建shop-gateway模块启动类\"><a href=\"#创建shop-gateway模块启动类\" class=\"headerlink\" title=\"创建shop-gateway模块启动类\"></a>创建<code>shop-gateway</code>模块启动类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.letcoding.gateway;<br><br><span class=\"hljs-keyword\">import</span> org.springframework.boot.SpringApplication;<br><span class=\"hljs-keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;<br><br><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> ShopGatewayApplication</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span></span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/9/19 8:23</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@SpringBootApplication</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ShopGatewayApplication</span> &#123;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> &#123;<br>        SpringApplication.run(ShopGatewayApplication.class, args);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"添加配置文件\"><a href=\"#添加配置文件\" class=\"headerlink\" title=\"添加配置文件\"></a>添加配置文件</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">server:</span><br>  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">7000</span><br><span class=\"hljs-attr\">spring:</span><br>  <span class=\"hljs-attr\">application:</span><br>    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">shop-gateway</span><br>  <span class=\"hljs-attr\">cloud:</span><br>    <span class=\"hljs-attr\">gateway:</span><br>      <span class=\"hljs-comment\"># 路由数组[路由 就是指定当请求满足什么条件的时候转到哪个微服务]</span><br>      <span class=\"hljs-attr\">routes:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">id:</span> <span class=\"hljs-string\">shop-product</span> <span class=\"hljs-comment\"># 当前路由的标识, 要求唯一</span><br>          <span class=\"hljs-attr\">uri:</span> <span class=\"hljs-string\">http://localhost:8081</span> <span class=\"hljs-comment\"># 请求要转发到的地址</span><br>          <span class=\"hljs-attr\">order:</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-comment\"># 路由的优先级,数字越小级别越高</span><br>          <span class=\"hljs-comment\"># 断言(就是路由转发要满足的条件)</span><br>          <span class=\"hljs-attr\">predicates:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">Path=/shop-product/**</span> <span class=\"hljs-comment\"># 当请求路径满足Path指定的规则时,才进行路由转发</span><br>          <span class=\"hljs-comment\"># 过滤器,请求在传递过程中可以通过过滤器对其进行一定的修改</span><br>          <span class=\"hljs-attr\">filters:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">StripPrefix=1</span> <span class=\"hljs-comment\"># 转发之前去掉1层路径</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动服务，通过网关访问路径，请求测试\"><a href=\"#启动服务，通过网关访问路径，请求测试\" class=\"headerlink\" title=\"启动服务，通过网关访问路径，请求测试\"></a>启动服务，通过网关访问路径，请求测试</h3><blockquote>\n<p><a href=\"http://localhost:7000/shop-product/product/info/1\">http://localhost:7000/shop-product/product/info/1</a></p>\n</blockquote>\n<p><img src=\"https://i.loli.net/2021/09/19/sLn7iVPDWmHORjr.png\" alt=\"image.png\"></p>\n<h2 id=\"增强版\"><a href=\"#增强版\" class=\"headerlink\" title=\"增强版\"></a>增强版</h2><blockquote>\n<p>现在在配置文件中写死了转发路径的地址, 前面我们已经分析过地址写死带来的问题, 接下来我们从注册中心获取此地址。</p>\n</blockquote>\n<h3 id=\"添加依赖\"><a href=\"#添加依赖\" class=\"headerlink\" title=\"添加依赖\"></a>添加依赖</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-comment\">&lt;!--nacos客户端--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.alibaba.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"添加注解，让注册中心能发现\"><a href=\"#添加注解，让注册中心能发现\" class=\"headerlink\" title=\"添加注解，让注册中心能发现\"></a>添加注解，让注册中心能发现</h3><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs typescript\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> <span class=\"hljs-variable\">ShopGatewayApplication</span></span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span></span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> <span class=\"hljs-variable\">will</span></span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/9/19 8:23</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@SpringBootApplication</span><br><span class=\"hljs-meta\">@EnableDiscoveryClient</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ShopGatewayApplication</span> &#123;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">void</span> <span class=\"hljs-title function_\">main</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">String</span>[] args</span>) &#123;<br>        <span class=\"hljs-title class_\">SpringApplication</span>.<span class=\"hljs-title function_\">run</span>(<span class=\"hljs-title class_\">ShopGatewayApplication</span>.<span class=\"hljs-property\">class</span>, args);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>修改配置文件</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">server:</span><br>  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">7000</span><br><span class=\"hljs-attr\">spring:</span><br>  <span class=\"hljs-attr\">application:</span><br>    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">shop-gateway</span><br>  <span class=\"hljs-attr\">cloud:</span><br>    <span class=\"hljs-attr\">nacos:</span><br>      <span class=\"hljs-attr\">discovery:</span><br>        <span class=\"hljs-attr\">server-addr:</span> <span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.56</span><span class=\"hljs-number\">.120</span><span class=\"hljs-string\">:8848</span><br>        <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">6d39b87a-55bb-4497-bec5-79bdd3b9789b</span><br>    <span class=\"hljs-attr\">gateway:</span><br>      <span class=\"hljs-attr\">discovery:</span><br>        <span class=\"hljs-attr\">locator:</span><br>          <span class=\"hljs-attr\">enabled:</span> <span class=\"hljs-literal\">true</span><br>      <span class=\"hljs-comment\"># 路由数组[路由 就是指定当请求满足什么条件的时候转到哪个微服务]</span><br>      <span class=\"hljs-attr\">routes:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">id:</span> <span class=\"hljs-string\">shop-product</span> <span class=\"hljs-comment\"># 当前路由的标识, 要求唯一</span><br>          <span class=\"hljs-attr\">uri:</span> <span class=\"hljs-string\">lib://shop-product</span> <span class=\"hljs-comment\"># 请求要转发到的地址</span><br>          <span class=\"hljs-attr\">order:</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-comment\"># 路由的优先级,数字越小级别越高</span><br>          <span class=\"hljs-comment\"># 断言(就是路由转发要满足的条件)</span><br>          <span class=\"hljs-attr\">predicates:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">Path=/shop-product/**</span> <span class=\"hljs-comment\"># 当请求路径满足Path指定的规则时,才进行路由转发</span><br>          <span class=\"hljs-comment\"># 过滤器,请求在传递过程中可以通过过滤器对其进行一定的修改</span><br>          <span class=\"hljs-attr\">filters:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">StripPrefix=1</span> <span class=\"hljs-comment\"># 转发之前去掉1层路径</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动测试\"><a href=\"#启动测试\" class=\"headerlink\" title=\"启动测试\"></a>启动测试</h3><blockquote>\n<p>备注：这里说一个博猪开发的微服务开发的习惯：</p>\n<ul>\n<li>启动项目</li>\n<li>打开对应环境配置的注册发现中心-<code>nacos</code></li>\n<li>打开<code>服务管理</code>-<code>服务配置</code></li>\n<li>查看服务是否启动成功</li>\n<li>查看使用服务是否都在一个服务环境里面，<code>nacos</code>默认为<code>public</code>,不用环境服务调试的时候不通的！！！</li>\n</ul>\n<p>访问地址：<a href=\"http://localhost:7000/shop-product/product/info/1\">http://localhost:7000/shop-product/product/info/1</a></p>\n</blockquote>\n<p><img src=\"https://i.loli.net/2021/09/19/sLn7iVPDWmHORjr.png\" alt=\"image.png\"></p>\n<h2 id=\"简写版\"><a href=\"#简写版\" class=\"headerlink\" title=\"简写版\"></a>简写版</h2><blockquote>\n<p>有人可能觉得上方配置可能太繁琐了，在开发中流行一句话<code>约定大于配置</code>，而<code>SpringCloud-gateway</code>也遵循了这么一个良好的规范，如果对于这一块不太了解的朋友，请先学习一下<code>SpringBoot</code>，对于<code>去配置化</code>有个大概的了解，同时对<code>SpringCloud</code>也有个基础。当然话归正题我还是不太建议这样配置的，当然日常开发中也很少使用到默认的配置，这里只限于练习配置。</p>\n</blockquote>\n<h3 id=\"修改配置\"><a href=\"#修改配置\" class=\"headerlink\" title=\"修改配置\"></a>修改配置</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">server:</span><br>  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">7000</span><br><span class=\"hljs-attr\">spring:</span><br>  <span class=\"hljs-attr\">application:</span><br>    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">shop-gateway</span><br>  <span class=\"hljs-attr\">cloud:</span><br>    <span class=\"hljs-attr\">nacos:</span><br>      <span class=\"hljs-attr\">discovery:</span><br>        <span class=\"hljs-attr\">server-addr:</span> <span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.56</span><span class=\"hljs-number\">.120</span><span class=\"hljs-string\">:8848</span><br>        <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">6d39b87a-55bb-4497-bec5-79bdd3b9789b</span><br>    <span class=\"hljs-attr\">gateway:</span><br>      <span class=\"hljs-attr\">discovery:</span><br>        <span class=\"hljs-attr\">locator:</span><br>          <span class=\"hljs-attr\">enabled:</span> <span class=\"hljs-literal\">true</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动测试-1\"><a href=\"#启动测试-1\" class=\"headerlink\" title=\"启动测试\"></a>启动测试</h3><blockquote>\n<p>访问地址：<a href=\"http://localhost:7000/shop-product/product/info/1\">http://localhost:7000/shop-product/product/info/1</a></p>\n</blockquote>\n<p><img src=\"https://i.loli.net/2021/09/19/sLn7iVPDWmHORjr.png\" alt=\"image.png\"></p>\n<blockquote>\n<p>这时候，就发现只要按照<strong>网关地址&#x2F;微服务&#x2F;接口</strong>的格式去访问，就可以得到成功响应。</p>\n<p>同时这里也会发现我之前的命名规则和一些开发习惯，这个也会省去很大的功夫，所以我很建议个人再去开发的时候一定要好好设计一下自己的代码编写规范和实现的逻辑思路。</p>\n</blockquote>\n<h1 id=\"Gateway核心架构\"><a href=\"#Gateway核心架构\" class=\"headerlink\" title=\"Gateway核心架构\"></a>Gateway核心架构</h1><h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><p>路由(Route) 是 gateway 中最基本的组件之一，表示一个具体的路由信息载体。主要定义了下面的几个信息:</p>\n<table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>字段含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>id</td>\n<td>路由标识符，区别于其他 Route</td>\n</tr>\n<tr>\n<td>uri</td>\n<td>路由指向的目的地 uri，即客户端请求最终被转发到的微服务</td>\n</tr>\n<tr>\n<td>order</td>\n<td>用于多个 Route 之间的排序，数值越小排序越靠前，匹配优先级越高</td>\n</tr>\n<tr>\n<td>predicate</td>\n<td>断言的作用是进行条件判断，只有断言都返回真，才会真正的执行路由</td>\n</tr>\n<tr>\n<td>filter</td>\n<td>过滤器用于修改请求和响应信息</td>\n</tr>\n</tbody></table>\n<h2 id=\"执行流程\"><a href=\"#执行流程\" class=\"headerlink\" title=\"执行流程\"></a>执行流程</h2><p><img src=\"https://i.loli.net/2021/09/20/SzuZbMWTQ6NwosE.png\" alt=\"image-20210920231447150\"></p>\n<p>执行流程大体如下：</p>\n<ul>\n<li>Gateway Client向Gateway Server发送请求</li>\n<li>请求首先会被HttpWebHandlerAdapter进行提取组装成网关上下文</li>\n<li>然后网关的上下文会传递到DispatcherHandler，它负责将请求分发给RoutePredicateHandlerMapping</li>\n<li>RoutePredicateHandlerMapping负责路由查找，并根据路由断言判断路由是否可用</li>\n<li>如果过断言成功，由FilteringWebHandler创建过滤器链并调用6. 请求会一次经过PreFilter–微服务–PostFilter的方法，最终返回响应</li>\n</ul>\n<h2 id=\"断言\"><a href=\"#断言\" class=\"headerlink\" title=\"断言\"></a>断言</h2><p>Predicate(断言, 谓词) 用于进行条件判断，只有断言都返回真，才会真正的执行路由。</p>\n<p>断言就是说: 在 <strong>什么条件下</strong> 才能进行路由转发</p>\n<h3 id=\"内置路由断言工厂\"><a href=\"#内置路由断言工厂\" class=\"headerlink\" title=\"内置路由断言工厂\"></a>内置路由断言工厂</h3><p>SpringCloud Gateway包括许多内置的断言工厂，所有这些断言都与HTTP请求的不同属性匹配。具体如下：</p>\n<ul>\n<li><p>基于Datetime类型的断言工厂</p>\n<p>此类型的断言根据时间做判断，主要有三个：</p>\n<ul>\n<li>AfterRoutePredicateFactory： 接收一个日期参数，判断请求日期是否晚于指定日期</li>\n<li>BeforeRoutePredicateFactory： 接收一个日期参数，判断请求日期是否早于指定日期</li>\n<li>BetweenRoutePredicateFactory： 接收两个日期参数，判断请求日期是否在指定时间段内</li>\n</ul>\n<blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-string\">-After=2019-12-31T23:59:59.789+08:00[Asia/Shanghai]</span><br></code></pre></td></tr></table></figure>\n</blockquote>\n</li>\n<li><p>基于远程地址的断言工厂 RemoteAddrRoutePredicateFactory：接收一个IP地址段，判断请求主机地址是否在地址段中</p>\n</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-string\">-RemoteAddr=192.168.1.1/24</span><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>基于Cookie的断言工厂</li>\n</ul>\n<p>CookieRoutePredicateFactory：接收两个参数，cookie 名字和一个正则表达式。 判断请求cookie是否具有给定名称且值与正则表达式匹配。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-string\">-Cookie=chocolate,</span> <span class=\"hljs-string\">ch.</span><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>基于Header的断言工厂</li>\n</ul>\n<p>HeaderRoutePredicateFactory：接收两个参数，标题名称和正则表达式。 判断请求Header是否具有给定名称且值与正则表达式匹配。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-string\">-Header=X-Request-Id,</span> <span class=\"hljs-string\">\\d+</span><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>基于Host的断言工厂</li>\n</ul>\n<p>HostRoutePredicateFactory：接收一个参数，主机名模式。判断请求的Host是否满足匹配规则。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-string\">-Host=**.testhost.org</span><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>基于Method请求方法的断言工厂</li>\n</ul>\n<p>MethodRoutePredicateFactory：接收一个参数，判断请求类型是否跟指定的类型匹配。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-string\">-Method=GET</span><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>基于Path请求路径的断言工厂</li>\n</ul>\n<p>PathRoutePredicateFactory：接收一个参数，判断请求的URI部分是否满足路径规则。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-string\">-Path=/foo/&#123;segment&#125;</span><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>基于Query请求参数的断言工厂</li>\n</ul>\n<p>QueryRoutePredicateFactory ：接收两个参数，请求param和正则表达式， 判断请求参数是否具有给定名称且值与正则表达式匹配。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-string\">-Query=baz,</span> <span class=\"hljs-string\">ba.</span><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>基于路由权重的断言工厂</li>\n</ul>\n<p>WeightRoutePredicateFactory：接收一个[组名,权重], 然后对于同一个组内的路由按照权重转发</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">routes:</span><br>    <span class=\"hljs-string\">-id:</span> <span class=\"hljs-attr\">weight_route1 uri: host1 predicates:</span><br>    <span class=\"hljs-string\">-Path=/product/**</span><br>    <span class=\"hljs-string\">-Weight=group3,</span> <span class=\"hljs-number\">1</span><br>    <span class=\"hljs-string\">-id:</span> <span class=\"hljs-attr\">weight_route2 uri: host2 predicates:</span><br>    <span class=\"hljs-string\">-Path=/product/**</span><br>    <span class=\"hljs-string\">-Weight=</span> <span class=\"hljs-string\">group3,</span> <span class=\"hljs-number\">9</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"内置路由断言工厂的使用\"><a href=\"#内置路由断言工厂的使用\" class=\"headerlink\" title=\"内置路由断言工厂的使用\"></a>内置路由断言工厂的使用</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">server:</span><br>  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">7000</span><br><span class=\"hljs-attr\">spring:</span><br>  <span class=\"hljs-attr\">application:</span><br>    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">shop-gateway</span><br>  <span class=\"hljs-attr\">cloud:</span><br>    <span class=\"hljs-attr\">nacos:</span><br>      <span class=\"hljs-attr\">discovery:</span><br>        <span class=\"hljs-attr\">server-addr:</span> <span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.56</span><span class=\"hljs-number\">.120</span><span class=\"hljs-string\">:8848</span><br>        <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">6d39b87a-55bb-4497-bec5-79bdd3b9789b</span><br>    <span class=\"hljs-attr\">gateway:</span><br>      <span class=\"hljs-attr\">discovery:</span><br>        <span class=\"hljs-attr\">locator:</span><br>          <span class=\"hljs-attr\">enabled:</span> <span class=\"hljs-literal\">true</span><br>      <span class=\"hljs-comment\"># 路由数组[路由 就是指定当请求满足什么条件的时候转到哪个微服务]</span><br>      <span class=\"hljs-attr\">routes:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">id:</span> <span class=\"hljs-string\">shop-product</span> <span class=\"hljs-comment\"># 当前路由的标识, 要求唯一</span><br>          <span class=\"hljs-attr\">uri:</span> <span class=\"hljs-string\">lib://shop-product</span> <span class=\"hljs-comment\"># 请求要转发到的地址</span><br>          <span class=\"hljs-attr\">order:</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-comment\"># 路由的优先级,数字越小级别越高</span><br>          <span class=\"hljs-comment\"># 断言(就是路由转发要满足的条件)</span><br>          <span class=\"hljs-attr\">predicates:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">Method=POST</span><br>          <span class=\"hljs-comment\"># 过滤器,请求在传递过程中可以通过过滤器对其进行一定的修改</span><br>          <span class=\"hljs-attr\">filters:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">StripPrefix=1</span> <span class=\"hljs-comment\"># 转发之前去掉1层路径</span><br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>一定要把<code>Path</code>路径转发去掉，要不然对应的method断言不会生效的。</p>\n</blockquote>\n<h3 id=\"自定义路由断言工厂\"><a href=\"#自定义路由断言工厂\" class=\"headerlink\" title=\"自定义路由断言工厂\"></a>自定义路由断言工厂</h3><p>我们来设定一个场景: 假设我们的应用仅仅让age在(min,max)之间的人来访问。</p>\n<h4 id=\"编写年龄配置\"><a href=\"#编写年龄配置\" class=\"headerlink\" title=\"编写年龄配置\"></a>编写年龄配置</h4><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">server:</span><br>  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">7000</span><br><span class=\"hljs-attr\">spring:</span><br>  <span class=\"hljs-attr\">application:</span><br>    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">shop-gateway</span><br>  <span class=\"hljs-attr\">cloud:</span><br>    <span class=\"hljs-attr\">nacos:</span><br>      <span class=\"hljs-attr\">discovery:</span><br>        <span class=\"hljs-attr\">server-addr:</span> <span class=\"hljs-string\">http://192.168.56.120:8848</span><br>        <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">6d39b87a-55bb-4497-bec5-79bdd3b9789b</span><br>    <span class=\"hljs-attr\">gateway:</span><br>      <span class=\"hljs-attr\">discovery:</span><br>        <span class=\"hljs-attr\">locator:</span><br>          <span class=\"hljs-comment\"># 开启从注册中心动态创建路由的功能，利用微服务名进行路由</span><br>          <span class=\"hljs-attr\">enabled:</span> <span class=\"hljs-literal\">true</span><br>          <span class=\"hljs-comment\"># 忽略大小写匹配，默认为 false。</span><br>          <span class=\"hljs-attr\">lower-case-service-id:</span> <span class=\"hljs-literal\">true</span><br>      <span class=\"hljs-attr\">routes:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">id:</span> <span class=\"hljs-string\">shop-product</span><br>          <span class=\"hljs-attr\">uri:</span> <span class=\"hljs-string\">lb://shop-product</span><br>          <span class=\"hljs-comment\"># 断言</span><br>          <span class=\"hljs-attr\">predicates:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">Path=/shop-product/**</span><br>            <span class=\"hljs-comment\">#自定义Age断言工厂</span><br>            <span class=\"hljs-comment\"># Age：自动找到 &quot;Age&quot; + &quot;RoutePredicateFactory&quot; 断言工厂</span><br>            <span class=\"hljs-comment\"># 18,60: 断言工厂参数</span><br>            <span class=\"hljs-comment\"># 限制年龄[18, 60)的人能访问</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">Age=18,60</span><br>          <span class=\"hljs-attr\">filters:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">StripPrefix=1</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"自定义一个断言工厂-实现断言方法\"><a href=\"#自定义一个断言工厂-实现断言方法\" class=\"headerlink\" title=\"自定义一个断言工厂, 实现断言方法\"></a>自定义一个断言工厂, 实现断言方法</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.letcoding.gateway.predicate;<br><br><span class=\"hljs-keyword\">import</span> com.alibaba.fastjson.JSONObject;<br><span class=\"hljs-keyword\">import</span> lombok.extern.slf4j.Slf4j;<br><span class=\"hljs-keyword\">import</span> org.springframework.cloud.gateway.handler.predicate.AbstractRoutePredicateFactory;<br><span class=\"hljs-keyword\">import</span> org.springframework.stereotype.Component;<br><span class=\"hljs-keyword\">import</span> org.springframework.util.MultiValueMap;<br><span class=\"hljs-keyword\">import</span> org.springframework.util.StringUtils;<br><span class=\"hljs-keyword\">import</span> org.springframework.validation.annotation.Validated;<br><span class=\"hljs-keyword\">import</span> org.springframework.web.server.ServerWebExchange;<br><br><span class=\"hljs-keyword\">import</span> java.util.Arrays;<br><span class=\"hljs-keyword\">import</span> java.util.List;<br><span class=\"hljs-keyword\">import</span> java.util.function.Predicate;<br><br><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> AgeRoutePredicateFactory</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span> 自定义年龄断言工厂</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/11/21 15:47</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@Component</span><br><span class=\"hljs-meta\">@Slf4j</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">AgeRoutePredicateFactory</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">AbstractRoutePredicateFactory</span>&lt;AgeRoutePredicateFactory.Config&gt; &#123;<br><br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">AgeRoutePredicateFactory</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-built_in\">super</span>(AgeRoutePredicateFactory.Config.class);<br>    &#125;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> Predicate&lt;ServerWebExchange&gt; <span class=\"hljs-title function_\">apply</span><span class=\"hljs-params\">(Config config)</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Predicate</span>&lt;ServerWebExchange&gt;() &#123;<br>            <span class=\"hljs-meta\">@Override</span><br>            <span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">boolean</span> <span class=\"hljs-title function_\">test</span><span class=\"hljs-params\">(ServerWebExchange serverWebExchange)</span> &#123;<br>                <span class=\"hljs-comment\">//取请求参数age，判断是否满足[18, 60)</span><br>                MultiValueMap&lt;String, String&gt; queryParams = serverWebExchange.getRequest().getQueryParams();<br>                log.info(<span class=\"hljs-string\">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;queryParams is &quot;</span>, JSONObject.toJSONString(queryParams));<br>                <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">age</span> <span class=\"hljs-operator\">=</span> queryParams.getFirst(<span class=\"hljs-string\">&quot;age&quot;</span>);<br>                log.info(<span class=\"hljs-string\">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;age is &quot;</span>,age);<br>                System.out.println(<span class=\"hljs-string\">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span>+age);<br>                <span class=\"hljs-keyword\">if</span> (!StringUtils.isEmpty(age) &amp;&amp; age.matches(<span class=\"hljs-string\">&quot;[0-9]+&quot;</span>)) &#123;<br>                    <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">ageInt</span> <span class=\"hljs-operator\">=</span> Integer.parseInt(age);<br>                    <span class=\"hljs-keyword\">if</span> (ageInt &gt;= config.getMinAge() &amp;&amp; ageInt &lt; config.getMinAge()) &#123;<br>                        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;<br>                    &#125;<span class=\"hljs-keyword\">else</span> &#123;<br>                        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>                    &#125;<br>                &#125;<br>                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>            &#125;<br><br>            <span class=\"hljs-meta\">@Override</span><br>            <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">toString</span><span class=\"hljs-params\">()</span> &#123;<br>                <span class=\"hljs-keyword\">return</span> String.format(<span class=\"hljs-string\">&quot;minAge: %s,MaxAge: %s&quot;</span>, config.getMinAge(),config.getMinAge());<br>            &#125;<br>        &#125;;<br>    &#125;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> List&lt;String&gt; <span class=\"hljs-title function_\">shortcutFieldOrder</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> Arrays.asList(<span class=\"hljs-string\">&quot;minAge&quot;</span>, <span class=\"hljs-string\">&quot;maxAge&quot;</span>);<br>    &#125;<br><br>    <span class=\"hljs-meta\">@Validated</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Config</span>&#123;<br>        <span class=\"hljs-keyword\">private</span> Integer minAge;<br>        <span class=\"hljs-keyword\">private</span> Integer maxAge;<br><br>        <span class=\"hljs-keyword\">public</span> Integer <span class=\"hljs-title function_\">getMinAge</span><span class=\"hljs-params\">()</span> &#123;<br>            <span class=\"hljs-keyword\">return</span> minAge;<br>        &#125;<br><br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">setMinAge</span><span class=\"hljs-params\">(Integer minAge)</span> &#123;<br>            <span class=\"hljs-built_in\">this</span>.minAge = minAge;<br>        &#125;<br><br>        <span class=\"hljs-keyword\">public</span> Integer <span class=\"hljs-title function_\">getMaxAge</span><span class=\"hljs-params\">()</span> &#123;<br>            <span class=\"hljs-keyword\">return</span> maxAge;<br>        &#125;<br><br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">setMaxAge</span><span class=\"hljs-params\">(Integer maxAge)</span> &#123;<br>            <span class=\"hljs-built_in\">this</span>.maxAge = maxAge;<br>        &#125;<br>    &#125;<br><br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"启动测试，分别测试一下请求\"><a href=\"#启动测试，分别测试一下请求\" class=\"headerlink\" title=\"启动测试，分别测试一下请求\"></a>启动测试，分别测试一下请求</h4><blockquote>\n<p>#测试发现当age在(20,60)可以访问,其它范围不能访问<br><a href=\"http://localhost:7000/product-serv/product/1?age=30\">http://localhost:7000/product-serv/product/1?age=30</a></p>\n<p><a href=\"http://localhost:7000/product-serv/product/1?age=10\">http://localhost:7000/product-serv/product/1?age=10</a></p>\n<p><a href=\"http://localhost:7000/product-serv/product/1?age=80\">http://localhost:7000/product-serv/product/1?age=80</a></p>\n</blockquote>\n<blockquote>\n<p>注意：</p>\n<ul>\n<li>网关服务和产品的服务，一定要在同一个nacos、命名空间下面！！！！！</li>\n<li>版本问题，博猪由于在最初选择springCloud和SpringcloudAlibaba的版本上不太兼容，导致博猪在进行自定义断言配置时出现问题，正确配置如下：</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">spring-cloud.version</span>&gt;</span>Greenwich.RELEASE<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">spring-cloud.version</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">spring-cloud-alibaba.version</span>&gt;</span>2.1.0.RELEASE<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">spring-cloud-alibaba.version</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>版本问题很重要！！！！！！！</p>\n</blockquote>\n</blockquote>\n<h2 id=\"过滤器\"><a href=\"#过滤器\" class=\"headerlink\" title=\"过滤器\"></a>过滤器</h2><ul>\n<li>作用: 过滤器就是在请求的传递过程中,对请求和响应做一些手脚</li>\n<li>生命周期: <code>Pre Post</code></li>\n<li>分类: 局部过滤器(作用在某一个路由上) 全局过滤器(作用全部路由上)</li>\n<li>在Gateway中, Filter的生命周期只有两个：“pre” 和 “post”。<ul>\n<li>PRE：  这种过滤器在请求被路由之前调用。我们可利用这种过滤器实现身份验证、在集群中选择 请求的微服务、记录调试信息等。</li>\n<li>POST：这种过滤器在路由到微服务以后执行。这种过滤器可用来为响应添加标准的HTTP Header、收集统计信息和指标、将响应从微服务发送给客户端等</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14957136-e577693a270026a3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp\" alt=\"img\"></p>\n<p>Gateway 的Filter从作用范围可分为两种: GatewayFilter与GlobalFilter。</p>\n<ul>\n<li>GatewayFilter：应用到单个路由或者一个分组的路由上。</li>\n<li>GlobalFilter：应用到所有的路由上</li>\n</ul>\n<h3 id=\"局部过滤器\"><a href=\"#局部过滤器\" class=\"headerlink\" title=\"局部过滤器\"></a>局部过滤器</h3><p>局部过滤器是针对单个路由的过滤器。</p>\n<h4 id=\"内置局部过滤器\"><a href=\"#内置局部过滤器\" class=\"headerlink\" title=\"内置局部过滤器\"></a>内置局部过滤器</h4><p>在SpringCloud Gateway中内置了很多不同类型的网关路由过滤器。具体如下：</p>\n<table>\n<thead>\n<tr>\n<th>过滤器工厂</th>\n<th>作用</th>\n<th>参数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>AddRequestHeader</td>\n<td>为原始请求添加Header</td>\n<td>Header的名称及值</td>\n</tr>\n<tr>\n<td>AddRequestParameter</td>\n<td>为原始请求添加请求参数</td>\n<td>参数名称及值</td>\n</tr>\n<tr>\n<td>AddResponseHeader</td>\n<td>为原始响应添加Header</td>\n<td>Header的名称及值</td>\n</tr>\n<tr>\n<td>DedupeResponseHeader</td>\n<td>剔除响应头中重复的值</td>\n<td>需要去重的Header名 称及去重策略</td>\n</tr>\n<tr>\n<td>Hystrix</td>\n<td>为路由引入Hystrix的断路器保护</td>\n<td>HystrixCommand的名 称</td>\n</tr>\n<tr>\n<td>FallbackHeaders</td>\n<td>为fallbackUri的请求头中添加具 体的异常信息</td>\n<td>Header的名称</td>\n</tr>\n<tr>\n<td>PreﬁxPath</td>\n<td>为原始请求路径添加前缀</td>\n<td>前缀路径</td>\n</tr>\n<tr>\n<td>PreserveHostHeader</td>\n<td>为请求添加一个 preserveHostHeader&#x3D;true的属 性，路由过滤器会检查该属性以 决定是否要发送原始的Host</td>\n<td>无</td>\n</tr>\n<tr>\n<td>RequestRateLimiter</td>\n<td>用于对请求限流，限流算法为令 牌桶</td>\n<td>keyResolver、 rateLimiter、 statusCode、 denyEmptyKey、 emptyKeyStatus</td>\n</tr>\n<tr>\n<td>RedirectTo</td>\n<td>将原始请求重定向到指定的URL</td>\n<td>http状态码及重定向的 url</td>\n</tr>\n<tr>\n<td>RemoveHopByHopHeadersFilter</td>\n<td>为原始请求删除IETF组织规定的 一系列Header</td>\n<td>默认就会启用，可以通 过配置指定仅删除哪些 Header</td>\n</tr>\n<tr>\n<td>RemoveRequestHeader</td>\n<td>为原始请求删除某个Heade</td>\n<td>Header名称</td>\n</tr>\n<tr>\n<td>RemoveResponseHeader</td>\n<td>为原始请求删除某个Heade</td>\n<td>Header名称</td>\n</tr>\n<tr>\n<td>RewritePath</td>\n<td>重写原始的请求路径</td>\n<td>原始路径正则表达式以 及重写后路径的正则表 达式</td>\n</tr>\n<tr>\n<td>RewriteResponseHeader</td>\n<td>重写原始响应中的某个Header</td>\n<td>Header名称，值的正 则表达式，重写后的值</td>\n</tr>\n<tr>\n<td>SaveSession</td>\n<td>在转发请求之前，强制执行 WebSession::save操作</td>\n<td>无</td>\n</tr>\n<tr>\n<td>SecureHeaders</td>\n<td>为原始响应添加一系列起安全作 用的响应头</td>\n<td>无，支持修改这些安全 响应头的值</td>\n</tr>\n<tr>\n<td>SetPath</td>\n<td>修改原始的请求路径</td>\n<td>修改后的路径</td>\n</tr>\n<tr>\n<td>SetResponseHeader</td>\n<td>修改原始响应中某个Header的值</td>\n<td>Header名称，修改后 的值</td>\n</tr>\n<tr>\n<td>SetStatus</td>\n<td>修改原始响应的状态码</td>\n<td>HTTP 状态码，可以是 数字，也可以是字符串</td>\n</tr>\n<tr>\n<td>StripPreﬁx</td>\n<td>用于截断原始请求的路径</td>\n<td>使用数字表示要截断的 路径的数量</td>\n</tr>\n<tr>\n<td>Retry</td>\n<td>针对不同的响应进行重试</td>\n<td>retries、statuses、 methods、series</td>\n</tr>\n<tr>\n<td>RequestSize</td>\n<td>设置允许接收最大请求包的大 小。如果请求包大小超过设置的 值，则返回   413 Payload Too Large</td>\n<td>请求包大小，单位为字 节，默认值为5M</td>\n</tr>\n<tr>\n<td>ModifyRequestBody</td>\n<td>在转发请求之前修改原始请求体 内容</td>\n<td>修改后的请求体内容</td>\n</tr>\n<tr>\n<td>ModifyResponseBody</td>\n<td>修改原始响应体的内容</td>\n<td>修改后的响应体内容</td>\n</tr>\n</tbody></table>\n<h4 id=\"内置局部过滤器使用\"><a href=\"#内置局部过滤器使用\" class=\"headerlink\" title=\"内置局部过滤器使用\"></a>内置局部过滤器使用</h4><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">server:</span><br>  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">7000</span><br><span class=\"hljs-attr\">spring:</span><br>  <span class=\"hljs-attr\">application:</span><br>    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">shop-gateway</span><br>  <span class=\"hljs-attr\">cloud:</span><br>    <span class=\"hljs-attr\">nacos:</span><br>      <span class=\"hljs-attr\">discovery:</span><br>        <span class=\"hljs-attr\">server-addr:</span> <span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.56</span><span class=\"hljs-number\">.120</span><span class=\"hljs-string\">:8848</span><br>        <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">6d39b87a-55bb-4497-bec5-79bdd3b9789b</span><br>    <span class=\"hljs-attr\">gateway:</span><br>      <span class=\"hljs-attr\">discovery:</span><br>        <span class=\"hljs-attr\">locator:</span><br>          <span class=\"hljs-comment\"># 开启从注册中心动态创建路由的功能，利用微服务名进行路由</span><br>          <span class=\"hljs-attr\">enabled:</span> <span class=\"hljs-literal\">true</span><br>      <span class=\"hljs-attr\">routes:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">id:</span> <span class=\"hljs-string\">shop-product</span><br>          <span class=\"hljs-attr\">uri:</span> <span class=\"hljs-string\">lb://shop-product</span><br>          <span class=\"hljs-comment\"># 断言</span><br>          <span class=\"hljs-attr\">predicates:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">Path=/shop-product-server/**</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">Age=16,80</span> <span class=\"hljs-comment\"># 限制年龄只有在18到60岁之间的人能访问</span><br>          <span class=\"hljs-attr\">filters:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">StripPrefix=1</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">SetStatus=250</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"自定义局部过滤器\"><a href=\"#自定义局部过滤器\" class=\"headerlink\" title=\"自定义局部过滤器\"></a>自定义局部过滤器</h4><blockquote>\n<p>场景如下:配置日志过滤器，从而实现日志的记录和拦截</p>\n</blockquote>\n<h5 id=\"在配置文件中-添加一个Log的过滤器配置\"><a href=\"#在配置文件中-添加一个Log的过滤器配置\" class=\"headerlink\" title=\"在配置文件中,添加一个Log的过滤器配置\"></a>在配置文件中,添加一个Log的过滤器配置</h5><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">server:</span><br>  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">7000</span><br><span class=\"hljs-attr\">spring:</span><br>  <span class=\"hljs-attr\">application:</span><br>    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">shop-gateway</span><br>  <span class=\"hljs-attr\">cloud:</span><br>    <span class=\"hljs-attr\">nacos:</span><br>      <span class=\"hljs-attr\">discovery:</span><br>        <span class=\"hljs-attr\">server-addr:</span> <span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.56</span><span class=\"hljs-number\">.120</span><span class=\"hljs-string\">:8848</span><br>        <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">6d39b87a-55bb-4497-bec5-79bdd3b9789b</span><br>    <span class=\"hljs-attr\">gateway:</span><br>      <span class=\"hljs-attr\">discovery:</span><br>        <span class=\"hljs-attr\">locator:</span><br>          <span class=\"hljs-comment\"># 开启从注册中心动态创建路由的功能，利用微服务名进行路由</span><br>          <span class=\"hljs-attr\">enabled:</span> <span class=\"hljs-literal\">true</span><br>      <span class=\"hljs-attr\">routes:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">id:</span> <span class=\"hljs-string\">shop-product</span><br>          <span class=\"hljs-attr\">uri:</span> <span class=\"hljs-string\">lb://shop-product</span><br>          <span class=\"hljs-comment\"># 断言</span><br>          <span class=\"hljs-attr\">predicates:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">Path=/shop-product-server/**</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">Age=16,80</span> <span class=\"hljs-comment\"># 限制年龄只有在18到60岁之间的人能访问</span><br>          <span class=\"hljs-attr\">filters:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">StripPrefix=1</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">SetStatus=250</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">Log=true,false</span> <span class=\"hljs-comment\"># 控制日志是否开启</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"自定义一个过滤器工厂-实现方法\"><a href=\"#自定义一个过滤器工厂-实现方法\" class=\"headerlink\" title=\"自定义一个过滤器工厂,实现方法\"></a>自定义一个过滤器工厂,实现方法</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.letcoding.gateway.predicate;<br><br><span class=\"hljs-keyword\">import</span> lombok.extern.slf4j.Slf4j;<br><span class=\"hljs-keyword\">import</span> org.springframework.cloud.gateway.filter.GatewayFilter;<br><span class=\"hljs-keyword\">import</span> org.springframework.cloud.gateway.filter.GatewayFilterChain;<br><span class=\"hljs-keyword\">import</span> org.springframework.cloud.gateway.filter.factory.AbstractGatewayFilterFactory;<br><span class=\"hljs-keyword\">import</span> org.springframework.stereotype.Component;<br><span class=\"hljs-keyword\">import</span> org.springframework.validation.annotation.Validated;<br><span class=\"hljs-keyword\">import</span> org.springframework.web.server.ServerWebExchange;<br><span class=\"hljs-keyword\">import</span> reactor.core.publisher.Mono;<br><br><span class=\"hljs-keyword\">import</span> java.util.Arrays;<br><span class=\"hljs-keyword\">import</span> java.util.List;<br><br><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> LogGatewayFilterFactory</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span> 自定义日志局部过滤器</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/11/29 23:14</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@Component</span><br><span class=\"hljs-meta\">@Slf4j</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">LogGatewayFilterFactory</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">AbstractGatewayFilterFactory</span>&lt;LogGatewayFilterFactory.Config&gt; &#123;<br><br>    <span class=\"hljs-comment\">//构造函数</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">LogGatewayFilterFactory</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-built_in\">super</span>(LogGatewayFilterFactory.Config.class);<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 处理器逻辑</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> config</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> GatewayFilter <span class=\"hljs-title function_\">apply</span><span class=\"hljs-params\">(Config config)</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GatewayFilter</span>() &#123;<br>            <span class=\"hljs-meta\">@Override</span><br>            <span class=\"hljs-keyword\">public</span> Mono&lt;Void&gt; <span class=\"hljs-title function_\">filter</span><span class=\"hljs-params\">(ServerWebExchange exchange, GatewayFilterChain chain)</span> &#123;<br>                <span class=\"hljs-keyword\">if</span> (config.getConsoleLog()) &#123;<br>                    log.info(<span class=\"hljs-string\">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 控制台日志开启！&quot;</span>);<br>                &#125;<br>                <span class=\"hljs-keyword\">if</span> (config.getCacheLog()) &#123;<br>                    log.info(<span class=\"hljs-string\">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;缓存开启！&quot;</span>);<br>                &#125;<br>                <span class=\"hljs-keyword\">return</span> chain.filter(exchange);<br>            &#125;<br>        &#125;;<br>    &#125;<br><br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 读取配置文件中的参数赋值到配置类中</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> List&lt;String&gt; <span class=\"hljs-title function_\">shortcutFieldOrder</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> Arrays.asList(<span class=\"hljs-string\">&quot;consoleLog&quot;</span>, <span class=\"hljs-string\">&quot;cacheLog&quot;</span>);<br>    &#125;<br><br>    <span class=\"hljs-meta\">@Validated</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Config</span>&#123;<br>        <span class=\"hljs-keyword\">private</span> Boolean consoleLog;<br>        <span class=\"hljs-keyword\">private</span> Boolean cacheLog;<br><br>        <span class=\"hljs-keyword\">public</span> Boolean <span class=\"hljs-title function_\">getConsoleLog</span><span class=\"hljs-params\">()</span> &#123;<br>            <span class=\"hljs-keyword\">return</span> consoleLog;<br>        &#125;<br><br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">setConsoleLog</span><span class=\"hljs-params\">(Boolean consoleLog)</span> &#123;<br>            <span class=\"hljs-built_in\">this</span>.consoleLog = consoleLog;<br>        &#125;<br><br>        <span class=\"hljs-keyword\">public</span> Boolean <span class=\"hljs-title function_\">getCacheLog</span><span class=\"hljs-params\">()</span> &#123;<br>            <span class=\"hljs-keyword\">return</span> cacheLog;<br>        &#125;<br><br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">setCacheLog</span><span class=\"hljs-params\">(Boolean cacheLog)</span> &#123;<br>            <span class=\"hljs-built_in\">this</span>.cacheLog = cacheLog;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"全局过滤器\"><a href=\"#全局过滤器\" class=\"headerlink\" title=\"全局过滤器\"></a>全局过滤器</h3><p>全局过滤器作用于所有路由, 无需配置。通过全局过滤器可以实现对权限的统一校验，安全性验证等功 能。</p>\n<h4 id=\"内置全局过滤器\"><a href=\"#内置全局过滤器\" class=\"headerlink\" title=\"内置全局过滤器\"></a>内置全局过滤器</h4><p>SpringCloud Gateway内部也是通过一系列的内置全局过滤器对整个路由转发进行处理如下：</p>\n<p><img src=\"http://tva1.sinaimg.cn/large/006seI3Egy1gx38l614m2j30ro0dp0zv.jpg\" alt=\"image.png\"></p>\n<h4 id=\"自定义全局过滤器\"><a href=\"#自定义全局过滤器\" class=\"headerlink\" title=\"自定义全局过滤器\"></a>自定义全局过滤器</h4><p>内置的过滤器已经可以完成大部分的功能，但是对于企业开发的一些业务功能处理，还是需要我们 自己编写过滤器来实现的，那么我们一起通过代码的形式自定义一个过滤器，去完成统一的权限校验。<br>开发中的鉴权逻辑：</p>\n<ul>\n<li>当客户端第一次请求服务时，服务端对用户进行信息认证（登录）</li>\n<li>认证通过，将用户信息进行加密形成token，返回给客户端，作为登录凭证</li>\n<li>以后每次请求，客户端都携带认证的token</li>\n<li>服务端对token进行解密，判断是否有效。</li>\n</ul>\n<p><img src=\"http://tva1.sinaimg.cn/large/006seI3Egy1gx38vs1tmyj30j409rmyc.jpg\" alt=\"9cb33b2e-12fb-40af-bd44-cac813ea0398.png\"></p>\n<p>如上图，对于验证用户是否已经登录鉴权的过程可以在网关统一检验。<br>检验的标准就是请求中是否携带token凭证以及token的正确性。<br>下面的我们自定义一个GlobalFilter，去校验所有请求的请求参数中是否包含“token”，如何不包含请求<br>参数“token”则不转发路由，否则执行正常的逻辑。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> AuthGlobalFilter</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span></span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/12/5 18:33</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@Component</span><br><span class=\"hljs-meta\">@Slf4j</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">AuthGlobalFilter</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">GlobalFilter</span>, Ordered &#123;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">ACCESS_TOKEN</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&quot;ACCESS_TOKEN&quot;</span>;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> Mono&lt;Void&gt; <span class=\"hljs-title function_\">filter</span><span class=\"hljs-params\">(ServerWebExchange exchange, GatewayFilterChain chain)</span> &#123;<br>        <span class=\"hljs-type\">HttpHeaders</span> <span class=\"hljs-variable\">headers</span> <span class=\"hljs-operator\">=</span> exchange.getRequest().getHeaders();<br>        <span class=\"hljs-keyword\">if</span> (!headers.containsKey(ACCESS_TOKEN)) &#123;<br>            log.error(<span class=\"hljs-string\">&quot;请求没有权限！&quot;</span>);<br>            exchange.getResponse().setStatusCode(HttpStatus.UNAUTHORIZED);<br>            <span class=\"hljs-keyword\">return</span> exchange.getResponse().setComplete();<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> chain.filter(exchange);<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 注册排序，数值越小，优先级越高</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">getOrder</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"网关限流\"><a href=\"#网关限流\" class=\"headerlink\" title=\"网关限流\"></a>网关限流</h2><p>网关是所有请求的公共入口，所以可以在网关进行限流，而且限流的方式也很多，我们本次采用前 面学过的Sentinel组件来实现网关的限流。Sentinel支持对SpringCloud Gateway、Zuul等主流网关进 行限流。</p>\n<p><img src=\"http://tva1.sinaimg.cn/large/006seI3Egy1gx38zo4wjwj30jy0ccjvt.jpg\" alt=\"4c7e1362-4a28-43a6-be67-3e0372335856.png\"></p>\n<p>从1.6.0版本开始，Sentinel提供了SpringCloud Gateway的适配模块，可以提供两种资源维度的限流：</p>\n<ul>\n<li>route维度：即在Spring配置文件中配置的路由条目，资源名为对应的routeId</li>\n<li>自定义API维度：用户可以利用Sentinel提供的API来自定义一些API分组</li>\n</ul>\n<h3 id=\"导入依赖\"><a href=\"#导入依赖\" class=\"headerlink\" title=\"导入依赖\"></a>导入依赖</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-comment\">&lt;!-- 导入sentinel限流 --&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.alibaba.csp<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>sentinel-spring-cloud-gateway-adapter<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"编写配置类\"><a href=\"#编写配置类\" class=\"headerlink\" title=\"编写配置类\"></a>编写配置类</h3><p>基于Sentinel 的Gateway限流是通过其提供的Filter来完成的，使用时只需注入对应的 <code>SentinelGatewayFilter</code>实例以及 <code>SentinelGatewayBlockExceptionHandler</code> 实例即可。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> GatewayConfiguration</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span></span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/12/5 18:55</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@Configuration</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">GatewayConfiguration</span> &#123;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">final</span> List&lt;ViewResolver&gt; viewResolvers;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">final</span> ServerCodecConfigurer serverCodecConfigurer;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">GatewayConfiguration</span><span class=\"hljs-params\">(List&lt;ViewResolver&gt; viewResolvers, ServerCodecConfigurer serverCodecConfigurer)</span> &#123;<br>        <span class=\"hljs-built_in\">this</span>.viewResolvers = viewResolvers;<br>        <span class=\"hljs-built_in\">this</span>.serverCodecConfigurer = serverCodecConfigurer;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 初始化一个限流的过滤器</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-meta\">@Bean</span><br>    <span class=\"hljs-meta\">@Order(Ordered.HIGHEST_PRECEDENCE)</span><br>    <span class=\"hljs-keyword\">public</span> GlobalFilter <span class=\"hljs-title function_\">sentinelGatewayFilter</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">SentinelGatewayFilter</span>();<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 初始化一个限流过滤器</span><br><span class=\"hljs-comment\">     * resource-资源名称，对应的路由id</span><br><span class=\"hljs-comment\">     * count-限流阈值</span><br><span class=\"hljs-comment\">     * 统计时间窗口，单位是秒，默认是一秒</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-meta\">@PostConstruct</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">initGatewayRules</span><span class=\"hljs-params\">()</span> &#123;<br>        Set&lt;GatewayFlowRule&gt; rules = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">HashSet</span>&lt;&gt;();<br>        rules.add(<br>                <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GatewayFlowRule</span>(<span class=\"hljs-string\">&quot;shop-product&quot;</span>)<br>                        .setCount(<span class=\"hljs-number\">1</span>)<br>                        .setIntervalSec(<span class=\"hljs-number\">1</span>)<br><br>        );<br>        GatewayRuleManager.loadRules(rules);<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 配置限流异常处理器</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-meta\">@Bean</span><br>    <span class=\"hljs-meta\">@Order(Ordered.HIGHEST_PRECEDENCE)</span><br>    <span class=\"hljs-keyword\">public</span> SentinelGatewayBlockExceptionHandler <span class=\"hljs-title function_\">sentinelGatewayBlockExceptionHandler</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">SentinelGatewayBlockExceptionHandler</span>(viewResolvers, serverCodecConfigurer);<br>    &#125;<br><br>    <span class=\"hljs-meta\">@PostConstruct</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">initBlockHandlers</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-type\">BlockRequestHandler</span> <span class=\"hljs-variable\">blockRequestHandler</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BlockRequestHandler</span>() &#123;<br>            <span class=\"hljs-meta\">@Override</span><br>            <span class=\"hljs-keyword\">public</span> Mono&lt;ServerResponse&gt; <span class=\"hljs-title function_\">handleRequest</span><span class=\"hljs-params\">(ServerWebExchange serverWebExchange, Throwable throwable)</span> &#123;<br>                Map&lt;String, Object&gt; resultMap = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">HashMap</span>&lt;&gt;(<span class=\"hljs-number\">2</span>);<br>                resultMap.put(<span class=\"hljs-string\">&quot;code&quot;</span>, <span class=\"hljs-number\">0</span>);<br>                resultMap.put(<span class=\"hljs-string\">&quot;message&quot;</span>, <span class=\"hljs-string\">&quot;接口被限流&quot;</span>);<br>                <span class=\"hljs-keyword\">return</span> ServerResponse.status(HttpStatus.OK)<br>                        .contentType(MediaType.APPLICATION_JSON_UTF8)<br>                        .body(BodyInserters.fromObject(resultMap));<br>            &#125;<br>        &#125;;<br>        GatewayCallbackManager.setBlockHandler(blockRequestHandler);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><p>在一秒钟内多次访问<a href=\"http://localhost:7000/shop-product-server/product/info/1?age=30%E5%B0%B1%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E9%99%90%E6%B5%81%E5%90%AF%E4%BD%9C%E7%94%A8%E4%BA%86%E3%80%82\">http://localhost:7000/shop-product-server/product/info/1?age=30就可以看到限流启作用了。</a></p>\n<p><img src=\"http://tva1.sinaimg.cn/large/006seI3Egy1gx393xzeq2j30ru0adju6.jpg\" alt=\"Snipaste_2021-12-05_20-55-13.png\"></p>\n<h3 id=\"自定义API分组\"><a href=\"#自定义API分组\" class=\"headerlink\" title=\"自定义API分组\"></a>自定义API分组</h3><p>自定义API分组是一种更细粒度的限流规则定义</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * 配置初始化的限流参数</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@PostConstruct</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">initGatewayRules</span><span class=\"hljs-params\">()</span> &#123;<br>    Set&lt;GatewayFlowRule&gt; rules = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">HashSet</span>&lt;&gt;();<br>    rules.add(<span class=\"hljs-keyword\">new</span><br>            <span class=\"hljs-title class_\">GatewayFlowRule</span>(<span class=\"hljs-string\">&quot;product_api1&quot;</span>).setCount(<span class=\"hljs-number\">1</span>).setIntervalSec(<span class=\"hljs-number\">1</span>));<br>    rules.add(<span class=\"hljs-keyword\">new</span><br>            <span class=\"hljs-title class_\">GatewayFlowRule</span>(<span class=\"hljs-string\">&quot;product_api2&quot;</span>).setCount(<span class=\"hljs-number\">1</span>).setIntervalSec(<span class=\"hljs-number\">1</span>));<br>    GatewayRuleManager.loadRules(rules);<br>&#125;<br><br><span class=\"hljs-comment\">//自定义API分组 </span><br><span class=\"hljs-meta\">@PostConstruct</span><br><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">initCustomizedApis</span><span class=\"hljs-params\">()</span> &#123;<br>    Set&lt;ApiDefinition&gt; definitions = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">HashSet</span>&lt;&gt;();<br>    <span class=\"hljs-type\">ApiDefinition</span> <span class=\"hljs-variable\">api1</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ApiDefinition</span>(<span class=\"hljs-string\">&quot;product_api1&quot;</span>)<br>            .setPredicateItems(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">HashSet</span>&lt;ApiPredicateItem&gt;() &#123;&#123;<br>                <span class=\"hljs-comment\">// 以/product-serv/product/api1 开头的请求</span><br>                add(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ApiPathPredicateItem</span>().setPattern(<span class=\"hljs-string\">&quot;/product- serv/product/api1/**&quot;</span>).<br>                        setMatchStrategy(SentinelGatewayConstants.URL_MATCH_STRATEGY_PREFIX));<br>            &#125;&#125;);<br>    <span class=\"hljs-type\">ApiDefinition</span> <span class=\"hljs-variable\">api2</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ApiDefinition</span>(<span class=\"hljs-string\">&quot;product_api2&quot;</span>)<br>            .setPredicateItems(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">HashSet</span>&lt;ApiPredicateItem&gt;() &#123;&#123;<br>                <span class=\"hljs-comment\">// 以/product-serv/product/api2/demo1 完成的url路径匹配</span><br>                add(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ApiPathPredicateItem</span>().setPattern(<span class=\"hljs-string\">&quot;/product- serv/product/api2/demo1&quot;</span>));<br>            &#125;&#125;);<br>    definitions.add(api1);<br>    definitions.add(api2);<br>    GatewayApiDefinitionManager.loadApiDefinitions(definitions);<br>&#125;<br></code></pre></td></tr></table></figure>\n",
            "tags": [
                "JAVA",
                "Spring",
                "SpringCloud",
                "SpringCloud Alibaba"
            ]
        },
        {
            "id": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/Spring/Spring-Cloud-Alibaba(3)-%E6%9C%8D%E5%8A%A1%E6%B2%BB%E7%90%86/",
            "url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/Spring/Spring-Cloud-Alibaba(3)-%E6%9C%8D%E5%8A%A1%E6%B2%BB%E7%90%86/",
            "title": "Spring-Cloud-Alibaba(3)-服务治理",
            "date_published": "2024-01-03T13:13:21.646Z",
            "content_html": "<h1 id=\"服务治理介绍\"><a href=\"#服务治理介绍\" class=\"headerlink\" title=\"服务治理介绍\"></a>服务治理介绍</h1><p>先来思考一个问题<br>通过上一章的操作，我们已经可以实现微服务之间的调用。但是我们把服务提供者的网络地址（ip，端口）等硬编码到了代码中，这种做法存在许多问题：</p>\n<ul>\n<li>一旦服务提供者地址变化，就需要手工修改代码</li>\n<li>一旦是多个服务提供者，无法实现负载均衡功能</li>\n<li>一旦服务变得越来越多，人工维护调用关系困难</li>\n</ul>\n<p><strong>那么应该怎么解决呢， 这时候就需要通过注册中心动态的实现服务治理。</strong></p>\n<h2 id=\"什么是服务治理\"><a href=\"#什么是服务治理\" class=\"headerlink\" title=\"什么是服务治理\"></a>什么是服务治理</h2><p>服务治理是微服务架构中最核心最基本的模块。用于实现各个微服务的自动化注册与发现。</p>\n<ul>\n<li>服务注册：在服务治理框架中，都会构建一个注册中心，每个服务单元向注册中心登记自己提供服务的详细信息。并在注册中心形成一张服务的清单，服务注册中心需要以心跳的方式去监测清单中的服务是否可用，如果不可用，需要在服务清单中剔除不可用的服务。</li>\n<li>服务发现：服务调用方向服务注册中心咨询服务，并获取所有服务的实例清单，实现对具体服务实<br>例的访问。</li>\n</ul>\n<p><img src=\"https://z3.ax1x.com/2021/07/03/RRd8Ag.jpg\" alt=\"RRd8Ag.jpg\"><a href=\"https://imgtu.com/i/RRd8Ag\">https://imgtu.com/i/RRd8Ag</a></p>\n<p>通过上面的调用图会发现，除了微服务，还有一个组件是服务注册中心，它是微服务架构非常重要的一个组件，在微服务架构里主要起到了协调者的一个作用。注册中心一般包含如下几个功能：</p>\n<ul>\n<li><p>服务发现：</p>\n<ul>\n<li>服务注册：保存服务提供者和服务调用者的信息</li>\n<li>服务订阅：服务调用者订阅服务提供者的信息，注册中心向订阅者推送提供者的信息</li>\n</ul>\n</li>\n<li><p>服务配置：</p>\n<ul>\n<li>配置订阅：服务提供者和服务调用者订阅微服务相关的配置</li>\n<li>配置下发：主动将配置推送给服务提供者和服务调用者</li>\n</ul>\n</li>\n<li><p>服务健康检测</p>\n<ul>\n<li>检测服务提供者的健康情况，如果发现异常，执行服务剔除</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"常见的注册中心\"><a href=\"#常见的注册中心\" class=\"headerlink\" title=\"常见的注册中心\"></a>常见的注册中心</h2><ul>\n<li><p>Zookeeper<br>zookeeper是一个分布式服务框架，是Apache Hadoop 的一个子项目，它主要是用来解决分布式应用中经常遇到的一些数据管理问题，如：统一命名服务、状态同步服务、集群管理、分布式应用配置项的管理等。</p>\n</li>\n<li><p>Eureka<br>Eureka是Springcloud Netflix中的重要组件，主要作用就是做服务注册和发现。但是现在已经闭源</p>\n</li>\n<li><p>Consul</p>\n<p>Consul是基于GO语言开发的开源工具，主要面向分布式，服务化的系统提供服务注册、服务发现和配置管理的功能。Consul的功能都很实用，其中包括：服务注册&#x2F;发现、健康检查、Key&#x2F;Value存储、多数据中心和分布式一致性保证等特性。Consul本身只是一个二进制的可执行文件，所以安装和部署都非常简单，只需要从官网下载后，在执行对应的启动脚本即可。</p>\n</li>\n<li><p>Nacos</p>\n<p>Nacos是一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台。它是 SpringCloud Alibaba 组件之一，负责服务注册发现和服务配置，可以这样认为nacos&#x3D;eureka+config。</p>\n</li>\n</ul>\n<h2 id=\"nacos简介\"><a href=\"#nacos简介\" class=\"headerlink\" title=\"nacos简介\"></a>nacos简介</h2><p>Nacos 致力于帮助您发现、配置和管理微服务。Nacos 提供了一组简单易用的特性集，帮助您快速实现动态服务发现、服务配置、服务元数据及流量管理。从上面的介绍就可以看出，nacos的作用就是一个注册中心，用来管理注册上来的各个微服务。</p>\n<h2 id=\"nacos实战入门\"><a href=\"#nacos实战入门\" class=\"headerlink\" title=\"nacos实战入门\"></a>nacos实战入门</h2><blockquote>\n<p>本篇只讲解windows安装运行，Linux安装部署请参考博猪Docker系列中的docker安装部署Nacos.</p>\n</blockquote>\n<p>接下来，我们就在现有的环境中加入nacos，并将我们的两个微服务注册上去。</p>\n<h3 id=\"搭建nacos环境\"><a href=\"#搭建nacos环境\" class=\"headerlink\" title=\"搭建nacos环境\"></a>搭建nacos环境</h3><ul>\n<li>安装nacos</li>\n</ul>\n<blockquote>\n<p>下载地址: <a href=\"https://github.com/alibaba/nacos/releases\">https://github.com/alibaba/nacos/releases</a><br>下载zip格式的安装包，然后进行解压缩操作</p>\n</blockquote>\n<ul>\n<li>启动nacos</li>\n</ul>\n<blockquote>\n<p>切换目录</p>\n<p>cd nacos&#x2F;bin</p>\n<p>命令启动</p>\n<p>startup.cmd -m standalone</p>\n</blockquote>\n<ul>\n<li>访问nacos</li>\n</ul>\n<blockquote>\n<p>打开浏览器输入<a href=\"http://localhost:8848/nacos%EF%BC%8C%E5%8D%B3%E5%8F%AF%E8%AE%BF%E9%97%AE%E6%9C%8D%E5%8A%A1%EF%BC%8C\">http://localhost:8848/nacos，即可访问服务，</a> 默认密码是nacos&#x2F;nacos</p>\n</blockquote>\n<h3 id=\"注册微服务\"><a href=\"#注册微服务\" class=\"headerlink\" title=\"注册微服务\"></a>注册微服务</h3><ul>\n<li>在pom.xml中添加nacos的依赖</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-comment\">&lt;!--nacos客户端--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.alibaba.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>开启服务发现注解，在项目引导类<code>ProductApplication</code>上增加<code>@EnableDiscoveryClient</code>注解</li>\n<li>添加注册中心配置</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">cloud:</span><br>  <span class=\"hljs-attr\">nacos:</span><br>    <span class=\"hljs-attr\">discovery:</span><br>      <span class=\"hljs-attr\">server-addr:</span> <span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.56</span><span class=\"hljs-number\">.120</span><span class=\"hljs-string\">:8848</span> <span class=\"hljs-comment\"># 注册中心nacos服务端地址及端口</span><br>      <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">6d39b87a-55bb-4497-bec5-79bdd3b9789b</span> <span class=\"hljs-comment\"># 命名空间，方便管理</span><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>启动服务， 观察nacos的控制面板中是否有注册上来的微服务</li>\n</ul>\n<h2 id=\"服务调用\"><a href=\"#服务调用\" class=\"headerlink\" title=\"服务调用\"></a>服务调用</h2><ul>\n<li>修改订单Controller</li>\n<li>增加<code>服务发现</code>api和常量:</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">NACOS</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&quot;nacos&quot;</span>;<br><span class=\"hljs-meta\">@Autowired</span><br><span class=\"hljs-keyword\">private</span> DiscoveryClient discoveryClient;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>增加私有方法</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * 通过服务发现接口</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@param</span> pId    产品id</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-keyword\">private</span> Product <span class=\"hljs-title function_\">queryProductByDiscoveryClient</span><span class=\"hljs-params\">(Integer pId)</span> &#123;<br>    List&lt;ServiceInstance&gt; productInstances = discoveryClient.getInstances(<span class=\"hljs-string\">&quot;shop-product&quot;</span>);<br>    <span class=\"hljs-keyword\">if</span> (CollectionUtils.isEmpty(productInstances)) &#123;<br>        log.error(<span class=\"hljs-string\">&quot;产品服务为空！&quot;</span>);<br>    &#125;<br>    <span class=\"hljs-type\">ServiceInstance</span> <span class=\"hljs-variable\">defaultServiceInstance</span> <span class=\"hljs-operator\">=</span> productInstances.get(<span class=\"hljs-number\">0</span>);<br>    <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">host</span> <span class=\"hljs-operator\">=</span> defaultServiceInstance.getHost();<br>    <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">port</span> <span class=\"hljs-operator\">=</span> defaultServiceInstance.getPort();<br>    <span class=\"hljs-keyword\">return</span> restTemplate.getForObject(<span class=\"hljs-string\">&quot;http://&quot;</span> + host + <span class=\"hljs-string\">&quot;:&quot;</span> + port + <span class=\"hljs-string\">&quot;/product/info/&quot;</span> + pId, Product.class);<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>修改保存订单方法</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * 保存指定产品订单</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@param</span> pId</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@GetMapping(&quot;/save/&#123;pId&#125;&quot;)</span><br><span class=\"hljs-keyword\">public</span> Order <span class=\"hljs-title function_\">order</span><span class=\"hljs-params\">(<span class=\"hljs-meta\">@PathVariable(&quot;pId&quot;)</span> Integer pId, <span class=\"hljs-meta\">@RequestParam(name = &quot;queryType&quot;)</span> String queryType)</span> &#123;<br>    log.info(<span class=\"hljs-string\">&quot;&gt;&gt;客户下单，这时候要调用商品微服务查询商品信息&quot;</span>);<br>    <span class=\"hljs-type\">Product</span> <span class=\"hljs-variable\">product</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-literal\">null</span>;<br>    <span class=\"hljs-comment\">// 通过restTemplate调用商品微服务</span><br>    <span class=\"hljs-keyword\">if</span> (REST_TEMPLATE.equals(queryType)) &#123;<br>        product = queryProductByRestTemplate(pId);<br>    &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (NACOS.equals(queryType)) &#123;<br>        product = queryProductByDiscoveryClient(pId);<br>    &#125;<br><br>    log.info(<span class=\"hljs-string\">&quot;&gt;&gt;商品信息,查询结果:&quot;</span> + JSON.toJSONString(product));<br>    <span class=\"hljs-type\">Order</span> <span class=\"hljs-variable\">order</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Order</span>();<br>    order.setUId(<span class=\"hljs-number\">1</span>);<br>    order.setUserName(<span class=\"hljs-string\">&quot;测试用户&quot;</span>);<br>    order.setPId(product.getPId());<br>    order.setPName(product.getPName());<br>    order.setPPrice(product.getPPrice());<br>    order.setNumber(<span class=\"hljs-number\">1</span>);<br>    orderService.saveOrder(order);<br>    <span class=\"hljs-keyword\">return</span> order;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>DiscoveryClient是专门负责服务注册和发现的，我们可以通过它获取到注册到注册中心的所有服务。</p>\n</blockquote>\n<ul>\n<li>启动测试</li>\n</ul>\n<p>启动服务， 观察nacos的控制面板中是否有注册上来的订单微服务，然后通过访问消费者服务验证调用是否成功</p>\n<p><img src=\"https://z3.ax1x.com/2021/07/05/R5qdHA.png\" alt=\"R5qdHA.png\"><a href=\"https://imgtu.com/i/R5qdHA\">https://imgtu.com/i/R5qdHA</a></p>\n<h1 id=\"负载均衡\"><a href=\"#负载均衡\" class=\"headerlink\" title=\"负载均衡\"></a>负载均衡</h1><h2 id=\"什么是负载均衡\"><a href=\"#什么是负载均衡\" class=\"headerlink\" title=\"什么是负载均衡\"></a>什么是负载均衡</h2><blockquote>\n<p>通俗的讲， 负载均衡就是将负载（工作任务，访问请求）进行分摊到多个操作单元（服务器,组件）上进行执行。<br>根据负载均衡发生位置的不同,一般分为服务端负载均衡和客户端负载均衡。<br>服务端负载均衡指的是发生在服务提供者一方,比如常见的<code>Nginx</code>负载均衡<br>而客户端负载均衡指的是发生在服务请求的一方，也就是在发送请求之前已经选好了由哪个实例处理请求。</p>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/07/05/R5LFDH.png\" alt=\"R5LFDH.png\"><a href=\"https://imgtu.com/i/R5LFDH\">https://imgtu.com/i/R5LFDH</a></p>\n<p>我们在微服务调用关系中一般会选择客户端负载均衡，也就是在服务调用的一方来决定服务由哪个提供者执行。</p>\n<h2 id=\"自定义实现负载均衡\"><a href=\"#自定义实现负载均衡\" class=\"headerlink\" title=\"自定义实现负载均衡\"></a>自定义实现负载均衡</h2><ul>\n<li>通过idea再启动一个 shop-product 微服务，设置其端口为8082</li>\n<li>通过nacos查看微服务的启动情况</li>\n</ul>\n<p><img src=\"https://z3.ax1x.com/2021/07/05/R5xV91.png\" alt=\"R5xV91.png\"><a href=\"https://imgtu.com/i/R5xV91\">https://imgtu.com/i/R5xV91</a></p>\n<ul>\n<li>修改 <code>shop-order</code> 的代码，实现负载均衡</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">    * 通过服务发现接口</span><br><span class=\"hljs-comment\">    *</span><br><span class=\"hljs-comment\">    * <span class=\"hljs-doctag\">@param</span> pId   产品id</span><br><span class=\"hljs-comment\">    * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">    */</span><br>   <span class=\"hljs-keyword\">private</span> Product <span class=\"hljs-title function_\">queryProductByDiscoveryClient</span><span class=\"hljs-params\">(Integer pId)</span> &#123;<br>       List&lt;ServiceInstance&gt; productInstances = discoveryClient.getInstances(<span class=\"hljs-string\">&quot;shop-product&quot;</span>);<br>       <span class=\"hljs-keyword\">if</span> (CollectionUtils.isEmpty(productInstances)) &#123;<br>           log.error(<span class=\"hljs-string\">&quot;产品服务为空！&quot;</span>);<br>       &#125;<br>       <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">index</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Random</span>().nextInt(productInstances.size());<br>       <span class=\"hljs-type\">ServiceInstance</span> <span class=\"hljs-variable\">defaultServiceInstance</span> <span class=\"hljs-operator\">=</span> productInstances.get(index);<br>       <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">host</span> <span class=\"hljs-operator\">=</span> defaultServiceInstance.getHost();<br>       <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">port</span> <span class=\"hljs-operator\">=</span> defaultServiceInstance.getPort();<br>       <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">url</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&quot;http://&quot;</span> + host + <span class=\"hljs-string\">&quot;:&quot;</span> + port + <span class=\"hljs-string\">&quot;/product/info/&quot;</span> + pId;<br>       log.info(<span class=\"hljs-string\">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;从nacos中获取到的微服务地址为:&quot;</span> + url);<br><br>       <span class=\"hljs-keyword\">return</span> restTemplate.getForObject(url, Product.class);<br>   &#125;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>启动两个服务提供者和一个服务消费者，多访问几次消费者测试效果</li>\n</ul>\n<p><img src=\"https://z3.ax1x.com/2021/07/11/W9yfHO.png\" alt=\"W9yfHO.png\"><a href=\"https://imgtu.com/i/W9yfHO\">https://imgtu.com/i/W9yfHO</a></p>\n<blockquote>\n<p>从上述图片我们可以看出我们自定义的负载均衡存在一下几点情况：</p>\n<ul>\n<li>对业务代码侵入性太高；</li>\n<li>请求具有不确定性；</li>\n<li>请求分发策略单一，更改难度较大</li>\n</ul>\n<p>对于以上问题，SpringCloud 已经为我们提供了一个解决方案：<code>Ribbon</code></p>\n</blockquote>\n<h2 id=\"基于Ribbon实现负载均衡\"><a href=\"#基于Ribbon实现负载均衡\" class=\"headerlink\" title=\"基于Ribbon实现负载均衡\"></a>基于Ribbon实现负载均衡</h2><blockquote>\n<p>Ribbon是Spring Cloud的一个组件， 它可以让我们使用一个注解就能轻松的搞定负载均衡</p>\n</blockquote>\n<ul>\n<li>在RestTemplate 的生成方法上添加@LoadBalanced注解</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Bean</span><br><span class=\"hljs-meta\">@LoadBalanced</span><br><span class=\"hljs-keyword\">public</span> RestTemplate <span class=\"hljs-title function_\">restTemplate</span><span class=\"hljs-params\">()</span> &#123;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RestTemplate</span>();<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>增加负载均衡调用算法</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * RestTemplate   负载均衡风格查询</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@param</span> pId    产品id</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-keyword\">private</span> Product <span class=\"hljs-title function_\">queryProductLoadBalancingByRibbon</span><span class=\"hljs-params\">(Integer pId)</span> &#123;<br>    <span class=\"hljs-keyword\">return</span> restTemplate.getForObject(<span class=\"hljs-string\">&quot;http://shop-product/product/info/&quot;</span> + pId, Product.class);<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>修改下单方法</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">RIBBON</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&quot;ribbon&quot;</span>;<br><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * 保存指定产品订单</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@param</span> pId</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@GetMapping(&quot;/save/&#123;pId&#125;&quot;)</span><br><span class=\"hljs-keyword\">public</span> Order <span class=\"hljs-title function_\">order</span><span class=\"hljs-params\">(<span class=\"hljs-meta\">@PathVariable(&quot;pId&quot;)</span> Integer pId, <span class=\"hljs-meta\">@RequestParam(name = &quot;queryType&quot;)</span> String queryType)</span> &#123;<br>    log.info(<span class=\"hljs-string\">&quot;&gt;&gt;客户下单，这时候要调用商品微服务查询商品信息&quot;</span>);<br>    <span class=\"hljs-type\">Product</span> <span class=\"hljs-variable\">product</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-literal\">null</span>;<br>    <span class=\"hljs-comment\">// 通过restTemplate调用商品微服务</span><br>    <span class=\"hljs-keyword\">if</span> (REST_TEMPLATE.equals(queryType)) &#123;<br>        product = queryProductByRestTemplate(pId);<br>    &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (NACOS.equals(queryType)) &#123;<br>        product = queryProductByDiscoveryClient(pId);<br>    &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (RIBBON.equals(queryType)) &#123;<br>        product = queryProductLoadBalancingByRibbon(pId);<br>    &#125;<br><br>    log.info(<span class=\"hljs-string\">&quot;&gt;&gt;商品信息,查询结果:&quot;</span> + JSON.toJSONString(product));<br>    <span class=\"hljs-type\">Order</span> <span class=\"hljs-variable\">order</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Order</span>();<br>    order.setUId(<span class=\"hljs-number\">1</span>);<br>    order.setUserName(<span class=\"hljs-string\">&quot;测试用户&quot;</span>);<br>    order.setPId(product.getPId());<br>    order.setPName(product.getPName());<br>    order.setPPrice(product.getPPrice());<br>    order.setNumber(<span class=\"hljs-number\">1</span>);<br>    orderService.saveOrder(order);<br>    <span class=\"hljs-keyword\">return</span> order;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>Ribbon支持的负载均衡策略：<br>Ribbon内置了多种负载均衡策略,内部负载均衡的顶级接口为<code>com.netflix.loadbalancer.IRule</code> , 具体的负载策略如下图所示:</p>\n<table>\n<thead>\n<tr>\n<th>策略名</th>\n<th>策略描述</th>\n<th>实现说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>BestAvailableRule</td>\n<td>选择一个最小的并发请求的server</td>\n<td>逐个考察Server，如果Server被 tripped了，则忽略，在选择其中 ActiveRequestsCount最小的server</td>\n</tr>\n<tr>\n<td>AvailabilityFilteringRule</td>\n<td>过滤掉那些因为一直 连接失败的被标记为 circuit tripped的后 端server，并过滤掉 那些高并发的的后端 server（active connections 超过配 置的阈值）</td>\n<td>使用一个AvailabilityPredicate来包含 过滤server的逻辑，其实就就是检查 status里记录的各个server的运行状 态</td>\n</tr>\n<tr>\n<td>WeightedResponseTimeRule</td>\n<td>根据相应时间分配一 个weight，相应时 间越长，weight越 小，被选中的可能性 越低。</td>\n<td>一个后台线程定期的从status里面读 取评价响应时间，为每个server计算 一个weight。Weight的计算也比较简 单responsetime 减去每个server自己 平均的responsetime是server的权 重。当刚开始运行，没有形成statas 时，使用roubine策略选择server。</td>\n</tr>\n<tr>\n<td>RetryRule</td>\n<td>对选定的负载均衡策略机上重试机制。</td>\n<td>在一个配置时间段内当选择server不成功，则一直尝试使用subRule的方式选择一个可用的server</td>\n</tr>\n<tr>\n<td>RoundRobinRule</td>\n<td>轮询方式轮询选server</td>\n<td>轮询index，选择index对应位置的server</td>\n</tr>\n<tr>\n<td>RandomRule</td>\n<td>随机选择一个server</td>\n<td>在index上随机，选择index对应位置的server</td>\n</tr>\n<tr>\n<td>ZoneAvoidanceRule</td>\n<td>复合判断server所在区域的性能和server的可用性选择server</td>\n<td>使用ZoneAvoidancePredicate和AvailabilityPredicate来判断是否选择某个server，前一个判断判定一个zone的运行性能是否可用，剔除不可用的zone（的所有server），AvailabilityPredicate用于过滤掉连接数过多的Server。</td>\n</tr>\n</tbody></table>\n<p>我们可以通过修改配置来调整Ribbon的负载均衡策略，具体代码如下:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">shop-product:</span> <span class=\"hljs-comment\"># 调用的提供者的名称</span><br>  <span class=\"hljs-attr\">ribbon:</span><br>    <span class=\"hljs-attr\">NFLoadBalancerRuleClassName:</span> <span class=\"hljs-string\">com.netflix.loadbalancer.RandomRule</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"基于Feign实现服务调用\"><a href=\"#基于Feign实现服务调用\" class=\"headerlink\" title=\"基于Feign实现服务调用\"></a>基于Feign实现服务调用</h2><h3 id=\"什么是Feign\"><a href=\"#什么是Feign\" class=\"headerlink\" title=\"什么是Feign\"></a>什么是Feign</h3><p>Feign是Spring Cloud提供的一个声明式的伪Http客户端， 它使得调用远程服务就像调用本地服务一样简单， 只需要创建一个接口并添加一个注解即可。<br>Nacos很好的兼容了Feign， Feign默认集成了 Ribbon， 所以在Nacos下使用Fegin默认就实现了负载均衡的效果。</p>\n<h3 id=\"Feign的使用\"><a href=\"#Feign的使用\" class=\"headerlink\" title=\"Feign的使用\"></a>Feign的使用</h3><h4 id=\"创建新的模块shop-product-api\"><a href=\"#创建新的模块shop-product-api\" class=\"headerlink\" title=\"创建新的模块shop-product-api\"></a>创建新的模块<code>shop-product-api</code></h4><blockquote>\n<p>在这里博猪说一下博猪单独创建这个模块的意义或者好处在哪里。博猪也在项目初始化的时候说明了博猪特别不喜欢甚至讨厌所有的Java对象放在common模块里面，但是刚开始用着挺爽的，但是后期项目规模增大后，对象直接的影响或者说带给我们的干扰也挺多的，所以我习惯把feign相关对外提供的接口单独定义，并且字段相关尽量简化，因为feign底层也是http请求，所以尽可能减少http之间的请求时长。</p>\n</blockquote>\n<h4 id=\"添加依赖\"><a href=\"#添加依赖\" class=\"headerlink\" title=\"添加依赖\"></a>添加依赖</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">properties</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">maven.compiler.source</span>&gt;</span>8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">maven.compiler.source</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">maven.compiler.target</span>&gt;</span>8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">maven.compiler.target</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">properties</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencies</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.projectlombok<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>lombok<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-comment\">&lt;!--fegin组件--&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencies</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"创建feign接口返回对象\"><a href=\"#创建feign接口返回对象\" class=\"headerlink\" title=\"创建feign接口返回对象\"></a>创建feign接口返回对象</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> ProductVO</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span> TODO</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/7/11 18:33</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@Data</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ProductVO</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">Serializable</span> &#123;<br><br>   <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">long</span> <span class=\"hljs-variable\">serialVersionUID</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1L</span>;<br><br>   <span class=\"hljs-comment\">/** 主键 */</span><br>   <span class=\"hljs-keyword\">private</span> Integer pId;<br>   <span class=\"hljs-comment\">/** 商品名称 */</span><br>   <span class=\"hljs-keyword\">private</span> String pName;<br>   <span class=\"hljs-comment\">/** 商品价格 */</span><br>   <span class=\"hljs-keyword\">private</span> Double pPrice;<br>   <span class=\"hljs-comment\">/** 库存 */</span><br>   <span class=\"hljs-keyword\">private</span> Integer stock;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"创建Feign接口\"><a href=\"#创建Feign接口\" class=\"headerlink\" title=\"创建Feign接口\"></a>创建Feign接口</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> ProductFeignClient</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span> TODO</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/7/11 18:25</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@FeignClient(name = &quot;shop-product&quot;,fallback = ProductFeignClientFallback.class)</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">ProductFeignClient</span> &#123;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">DEFAULT_FALLBACK_MSG</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&quot;服务不可用！&quot;</span>;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 根据产品id查询产品详情</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> productId</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-meta\">@GetMapping(&quot;/api/queryProductInfoByProductId/&#123;productId&#125;&quot;)</span><br>    <span class=\"hljs-keyword\">public</span> ProductVO <span class=\"hljs-title function_\">queryProductInfoByProductId</span><span class=\"hljs-params\">(<span class=\"hljs-meta\">@PathVariable</span> Integer productId)</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"创建FeignFallback\"><a href=\"#创建FeignFallback\" class=\"headerlink\" title=\"创建FeignFallback\"></a>创建FeignFallback</h4><blockquote>\n<p>接口调用异常，会默认跳转到此方法中，在这个方法中可做业务相关处理，比如增加日志等，方便开发和运维排查处理问题。</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> ProductFeignClientFallback</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span> TODO</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/7/11 18:29</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ProductFeignClientFallback</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">ProductFeignClient</span> &#123;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> ProductVO <span class=\"hljs-title function_\">queryProductInfoByProductId</span><span class=\"hljs-params\">(Integer productId)</span> &#123;<br>        System.out.println(DEFAULT_FALLBACK_MSG);<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"修改shop-product模块\"><a href=\"#修改shop-product模块\" class=\"headerlink\" title=\"修改shop-product模块\"></a>修改<code>shop-product</code>模块</h4><h5 id=\"增加依赖\"><a href=\"#增加依赖\" class=\"headerlink\" title=\"增加依赖\"></a>增加依赖</h5><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.letcoding<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>shop-product-api<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.0.0-SNAPSHOT<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">exclusions</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">exclusion</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.projectlombok<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>lombok<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">exclusion</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">exclusions</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"开启Feign，在shop-order启动类中增加一下注释：\"><a href=\"#开启Feign，在shop-order启动类中增加一下注释：\" class=\"headerlink\" title=\"开启Feign，在shop-order启动类中增加一下注释：\"></a>开启Feign，在<code>shop-order</code>启动类中增加一下注释：</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@EnableFeignClients</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"创建Feign接口实现\"><a href=\"#创建Feign接口实现\" class=\"headerlink\" title=\"创建Feign接口实现\"></a>创建Feign接口实现</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> ProductFeignClientImpl</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span> 产品feign接口的实现</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/7/11 18:41</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@Slf4j</span><br><span class=\"hljs-meta\">@RestController</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ProductFeignClientImpl</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">ProductFeignClient</span> &#123;<br><br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">private</span> ProductService productService;<br><br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> ProductVO <span class=\"hljs-title function_\">queryProductInfoByProductId</span><span class=\"hljs-params\">(Integer productId)</span> &#123;<br>        <span class=\"hljs-type\">Product</span> <span class=\"hljs-variable\">product</span> <span class=\"hljs-operator\">=</span> productService.queryById(productId);<br>        log.info(<span class=\"hljs-string\">&quot;查询到商品:&quot;</span> + JSON.toJSONString(product));<br>        <span class=\"hljs-keyword\">if</span> (product != <span class=\"hljs-literal\">null</span>) &#123;<br>            <span class=\"hljs-type\">ProductVO</span> <span class=\"hljs-variable\">productVO</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ProductVO</span>();<br>            BeanUtils.copyProperties(product, productVO);<br>            <span class=\"hljs-keyword\">return</span> productVO;<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"修改shop-order模块\"><a href=\"#修改shop-order模块\" class=\"headerlink\" title=\"修改shop-order模块\"></a>修改<code>shop-order</code>模块</h4><h5 id=\"去掉shop-product依赖，增加shop-product-api、Feign依赖\"><a href=\"#去掉shop-product依赖，增加shop-product-api、Feign依赖\" class=\"headerlink\" title=\"去掉shop-product依赖，增加shop-product-api、Feign依赖\"></a>去掉<code>shop-product</code>依赖，增加<code>shop-product-api</code>、Feign依赖</h5><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>     <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.letcoding<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>     <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>shop-product-api<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>     <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.0.0-SNAPSHOT<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br> <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br> <span class=\"hljs-comment\">&lt;!--fegin组件--&gt;</span><br> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>     <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>     <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br> <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>      <br></code></pre></td></tr></table></figure>\n\n<h5 id=\"修改shop-order启动引导类，增加feign扫描\"><a href=\"#修改shop-order启动引导类，增加feign扫描\" class=\"headerlink\" title=\"修改shop-order启动引导类，增加feign扫描\"></a>修改<code>shop-order</code>启动引导类，增加feign扫描</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@EnableFeignClients(basePackages = &quot;com.letcoding.product&quot;)</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"修改OrderController\"><a href=\"#修改OrderController\" class=\"headerlink\" title=\"修改OrderController\"></a>修改<code>OrderController</code></h5><ul>\n<li>添加产品feign接口</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Autowired</span><br><span class=\"hljs-keyword\">private</span> ProductFeignClient productFeignClient;<br><br><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">FEIGN</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&quot;feign&quot;</span>;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>增加feign接口相关实现</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">   * RestTemplate   负载均衡风格查询</span><br><span class=\"hljs-comment\">   * <span class=\"hljs-doctag\">@param</span> pId    产品id</span><br><span class=\"hljs-comment\">   * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">   */</span><br>  <span class=\"hljs-keyword\">private</span> Product <span class=\"hljs-title function_\">queryProductLoadBalancingByFeign</span><span class=\"hljs-params\">(Integer pId)</span> &#123;<br>      <span class=\"hljs-type\">ProductVO</span> <span class=\"hljs-variable\">productVO</span> <span class=\"hljs-operator\">=</span> productFeignClient.queryProductInfoByProductId(pId);<br>      <span class=\"hljs-keyword\">if</span> (productVO != <span class=\"hljs-literal\">null</span>) &#123;<br>          <span class=\"hljs-type\">Product</span> <span class=\"hljs-variable\">product</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Product</span>();<br>          BeanUtils.copyProperties(productVO, product);<br>          <span class=\"hljs-keyword\">return</span> product;<br>      &#125;<br>      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;<br>  &#125;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>修改订单保存方法</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><br><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * 保存指定产品订单</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@param</span> pId</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@GetMapping(&quot;/save/&#123;pId&#125;&quot;)</span><br><span class=\"hljs-keyword\">public</span> Order <span class=\"hljs-title function_\">order</span><span class=\"hljs-params\">(<span class=\"hljs-meta\">@PathVariable(&quot;pId&quot;)</span> Integer pId, <span class=\"hljs-meta\">@RequestParam(name = &quot;queryType&quot;)</span> String queryType)</span> &#123;<br>    log.info(<span class=\"hljs-string\">&quot;&gt;&gt;客户下单，这时候要调用商品微服务查询商品信息&quot;</span>);<br>    <span class=\"hljs-type\">Product</span> <span class=\"hljs-variable\">product</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-literal\">null</span>;<br>    <span class=\"hljs-comment\">// 通过restTemplate调用商品微服务</span><br>    <span class=\"hljs-keyword\">if</span> (FEIGN.equals(queryType)) &#123;<br>        product = queryProductLoadBalancingByFeign(pId);<br>    &#125;<br><br>    log.info(<span class=\"hljs-string\">&quot;&gt;&gt;商品信息,查询结果:&quot;</span> + JSON.toJSONString(product));<br>    <span class=\"hljs-type\">Order</span> <span class=\"hljs-variable\">order</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Order</span>();<br>    order.setUId(<span class=\"hljs-number\">1</span>);<br>    order.setUserName(<span class=\"hljs-string\">&quot;测试用户&quot;</span>);<br>    order.setPId(product.getPId());<br>    order.setPName(product.getPName());<br>    order.setPPrice(product.getPPrice());<br>    order.setNumber(<span class=\"hljs-number\">1</span>);<br>    orderService.saveOrder(order);<br>    <span class=\"hljs-keyword\">return</span> order;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"重启order微服务-查看效果\"><a href=\"#重启order微服务-查看效果\" class=\"headerlink\" title=\"重启order微服务,查看效果\"></a>重启order微服务,查看效果</h4>",
            "tags": [
                "JAVA",
                "Spring",
                "SpringCloud",
                "SpringCloud Alibaba"
            ]
        },
        {
            "id": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/Spring/Spring-Cloud-Alibaba(2)-%E6%90%AD%E5%BB%BA%E9%A1%B9%E7%9B%AE/",
            "url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/Spring/Spring-Cloud-Alibaba(2)-%E6%90%AD%E5%BB%BA%E9%A1%B9%E7%9B%AE/",
            "title": "Spring-Cloud-Alibaba(2)-搭建项目",
            "date_published": "2024-01-03T13:13:21.646Z",
            "content_html": "<h1 id=\"微服务环境搭建\"><a href=\"#微服务环境搭建\" class=\"headerlink\" title=\"微服务环境搭建\"></a>微服务环境搭建</h1><p>本次是使用的电商项目中的商品、订单、用户为案例进行学习。</p>\n<h2 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h2><ul>\n<li><code>maven：3.6.x</code></li>\n<li>数据库：<code>MySQL 5.8</code></li>\n<li>持久层: <code>SpingData Jpa</code></li>\n<li>其他:<code>​ SpringCloud Alibaba 技术栈</code></li>\n</ul>\n<h2 id=\"模块设计\"><a href=\"#模块设计\" class=\"headerlink\" title=\"模块设计\"></a>模块设计</h2><ul>\n<li><strong>springcloud-alibaba 父工程</strong></li>\n<li><strong>shop-common 公共模块【实体类】</strong></li>\n<li><strong>shop-user 用户微服务 【端口: 807x】</strong></li>\n<li><strong>shop-product 商品微服务 【端口: 808x】</strong></li>\n<li><strong>shop-order 订单微服务 【端口: 809x】</strong></li>\n</ul>\n<p><img src=\"https://i.loli.net/2021/04/08/orFDAifgP3kntzb.png\" alt=\"Snipaste_2021-04-08_16-06-55.png\"></p>\n<h2 id=\"微服务调用\"><a href=\"#微服务调用\" class=\"headerlink\" title=\"微服务调用\"></a>微服务调用</h2><p>在微服务架构中，最常见的场景就是微服务之间的相互调用。我们以电商系统中常见的用户下单为例来演示微服务的调用：客户向订单微服务发起一个下单的请求，在进行保存订单之前需要调用商品微服务查询商品的信息。</p>\n<blockquote>\n<p>我们一般把服务的主动调用方称为<strong>服务消费者</strong>，把服务的被调用方称为<strong>服务提供者</strong>。</p>\n</blockquote>\n<h2 id=\"父工程\"><a href=\"#父工程\" class=\"headerlink\" title=\"父工程\"></a>父工程</h2><p>创建一个maven工程，然后在<code>pom.xml</code>文件中添加下面内容</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-meta\">&lt;?xml version=<span class=\"hljs-string\">&quot;1.0&quot;</span> encoding=<span class=\"hljs-string\">&quot;UTF-8&quot;</span>?&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">project</span> <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span><br><span class=\"hljs-tag\">         <span class=\"hljs-attr\">xmlns:xsi</span>=<span class=\"hljs-string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class=\"hljs-tag\">         <span class=\"hljs-attr\">xsi:schemaLocation</span>=<span class=\"hljs-string\">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">modelVersion</span>&gt;</span>4.0.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">modelVersion</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">parent</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.1.3.RELEASE<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">parent</span>&gt;</span><br><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.letcoding<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>springCloud-alibaba<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.0.0-SNAPSHOT<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">packaging</span>&gt;</span>pom<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">packaging</span>&gt;</span><br><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">properties</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">java.version</span>&gt;</span>1.8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">java.version</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">project.build.sourceEncoding</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">project.reporting.outputEncoding</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">spring-cloud.version</span>&gt;</span>Greenwich.RELEASE<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">spring-cloud.version</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">spring-cloud-alibaba.version</span>&gt;</span>2.1.0.RELEASE<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">spring-cloud-alibaba.version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">properties</span>&gt;</span><br><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencyManagement</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencies</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-dependencies<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">type</span>&gt;</span>pom<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">type</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">scope</span>&gt;</span>import<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">scope</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.alibaba.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>$&#123;spring-cloud-alibaba.version&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">type</span>&gt;</span>pom<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">type</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">scope</span>&gt;</span>import<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">scope</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencies</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencyManagement</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">project</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p><a href=\"https://github.com/alibaba/spring-cloud-alibaba/wiki/%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E\">官方版本说明</a></p>\n</blockquote>\n<h2 id=\"common模块\"><a href=\"#common模块\" class=\"headerlink\" title=\"common模块\"></a><code>common</code>模块</h2><blockquote>\n<p>这里的<code>common</code>模块，按照博猪个人习惯是不会放DTO&#x2F;VO&#x2F;ENTITY这些对象的，这个项目案例中目前也没有特别复杂的逻辑，所以也不存放<code>util</code>，这里博猪为了后续方便暂时在<code>pom</code>文件中放一些公共的依赖。</p>\n<p>公共依赖：</p>\n<ul>\n<li><code>JPA</code>的启动器</li>\n<li><code>lombok</code></li>\n<li>数据库连接驱动</li>\n</ul>\n<p><code>pom</code>依赖如下：</p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-meta\">&lt;?xml version=<span class=\"hljs-string\">&quot;1.0&quot;</span> encoding=<span class=\"hljs-string\">&quot;UTF-8&quot;</span>?&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">project</span> <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span><br><span class=\"hljs-tag\">         <span class=\"hljs-attr\">xmlns:xsi</span>=<span class=\"hljs-string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class=\"hljs-tag\">         <span class=\"hljs-attr\">xsi:schemaLocation</span>=<span class=\"hljs-string\">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">parent</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>springCloud-alibaba<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.letcoding<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.0.0-SNAPSHOT<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">parent</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">modelVersion</span>&gt;</span>4.0.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">modelVersion</span>&gt;</span><br><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>shop-common<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencies</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.projectlombok<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>lombok<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.alibaba<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>fastjson<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.2.56<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>mysql<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>5.1.6<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencies</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">project</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"用户模块\"><a href=\"#用户模块\" class=\"headerlink\" title=\"用户模块\"></a>用户模块</h2><h3 id=\"pom依赖\"><a href=\"#pom依赖\" class=\"headerlink\" title=\"pom依赖\"></a><code>pom</code>依赖</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-meta\">&lt;?xml version=<span class=\"hljs-string\">&quot;1.0&quot;</span> encoding=<span class=\"hljs-string\">&quot;UTF-8&quot;</span>?&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">project</span> <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span><br><span class=\"hljs-tag\">         <span class=\"hljs-attr\">xmlns:xsi</span>=<span class=\"hljs-string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class=\"hljs-tag\">         <span class=\"hljs-attr\">xsi:schemaLocation</span>=<span class=\"hljs-string\">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">parent</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.letcoding<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>springCloud-alibaba<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.0.0-SNAPSHOT<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">parent</span>&gt;</span><br><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">properties</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">maven.compiler.source</span>&gt;</span>8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">maven.compiler.source</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">maven.compiler.target</span>&gt;</span>8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">maven.compiler.target</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">properties</span>&gt;</span><br><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">modelVersion</span>&gt;</span>4.0.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">modelVersion</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>shop-user<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencies</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.letcoding<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>shop-common<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.0.0-SNAPSHOT<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencies</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">project</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"项目配置\"><a href=\"#项目配置\" class=\"headerlink\" title=\"项目配置\"></a>项目配置</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">server:</span><br>  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">8081</span><br><span class=\"hljs-attr\">spring:</span><br>  <span class=\"hljs-attr\">application:</span><br>    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">shop-product</span><br>  <span class=\"hljs-attr\">datasource:</span><br>    <span class=\"hljs-attr\">driver-class-name:</span> <span class=\"hljs-string\">com.mysql.cj.jdbc.Driver</span><br>    <span class=\"hljs-attr\">url:</span> <span class=\"hljs-string\">jdbc:mysql://192.168.56.120:3306/cloudAlibaba-demo?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false</span><br>    <span class=\"hljs-attr\">username:</span> <span class=\"hljs-string\">root</span><br>    <span class=\"hljs-attr\">password:</span> <span class=\"hljs-number\">123456</span><br>  <span class=\"hljs-attr\">jpa:</span><br>    <span class=\"hljs-attr\">properties:</span><br>      <span class=\"hljs-attr\">hibernate:</span><br>        <span class=\"hljs-attr\">hbm2ddl:</span><br>          <span class=\"hljs-attr\">auto:</span> <span class=\"hljs-string\">update</span><br>        <span class=\"hljs-attr\">dialect:</span> <span class=\"hljs-string\">org.hibernate.dialect.MySQL5InnoDBDialect</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动器\"><a href=\"#启动器\" class=\"headerlink\" title=\"启动器\"></a>启动器</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> UserApplication</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span> 用户启动类</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/4/8 17:19</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Company</span> 北京华焱坤泰科技有限公司</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@SpringBootApplication</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">UserApplication</span> &#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> &#123;<br>        SpringApplication.run(UserApplication.class, args);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"实体类\"><a href=\"#实体类\" class=\"headerlink\" title=\"实体类\"></a>实体类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> User</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span> TODO</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/4/9 12:13</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Company</span></span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@Entity(name = &quot;shop_user&quot;)</span><br><span class=\"hljs-meta\">@Data</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">User</span> &#123;<br>    <span class=\"hljs-meta\">@Id</span><br>    <span class=\"hljs-meta\">@GeneratedValue(strategy = GenerationType.IDENTITY)</span><br>    <span class=\"hljs-comment\">/** 主键 */</span><br>    <span class=\"hljs-keyword\">private</span> Integer uId;<br>    <span class=\"hljs-comment\">/** 用户名 */</span><br>    <span class=\"hljs-keyword\">private</span> String userName;<br>    <span class=\"hljs-comment\">/** 密码 */</span><br>    <span class=\"hljs-keyword\">private</span> String password;<br>    <span class=\"hljs-comment\">/** 手机号 */</span><br>    <span class=\"hljs-keyword\">private</span> String telePhone;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"数据仓储\"><a href=\"#数据仓储\" class=\"headerlink\" title=\"数据仓储\"></a>数据仓储</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> UserDao</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span> UserDao</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/6/20 19:08</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">UserDao</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">JpaRepository</span>&lt;User,Integer&gt; &#123;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"产品模块\"><a href=\"#产品模块\" class=\"headerlink\" title=\"产品模块\"></a>产品模块</h2><h3 id=\"pom依赖-1\"><a href=\"#pom依赖-1\" class=\"headerlink\" title=\"pom依赖\"></a><code>pom</code>依赖</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-meta\">&lt;?xml version=<span class=\"hljs-string\">&quot;1.0&quot;</span> encoding=<span class=\"hljs-string\">&quot;UTF-8&quot;</span>?&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">project</span> <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span><br><span class=\"hljs-tag\">         <span class=\"hljs-attr\">xmlns:xsi</span>=<span class=\"hljs-string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class=\"hljs-tag\">         <span class=\"hljs-attr\">xsi:schemaLocation</span>=<span class=\"hljs-string\">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">parent</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>springCloud-alibaba<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.letcoding<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.0.0-SNAPSHOT<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">parent</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">modelVersion</span>&gt;</span>4.0.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">modelVersion</span>&gt;</span><br><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>shop-product<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">properties</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">maven.compiler.source</span>&gt;</span>8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">maven.compiler.source</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">maven.compiler.target</span>&gt;</span>8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">maven.compiler.target</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">properties</span>&gt;</span><br><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencies</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.letcoding<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>shop-common<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.0.0-SNAPSHOT<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencies</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">project</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"项目配置-1\"><a href=\"#项目配置-1\" class=\"headerlink\" title=\"项目配置\"></a>项目配置</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">server:</span><br>  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">8081</span><br><span class=\"hljs-attr\">spring:</span><br>  <span class=\"hljs-attr\">application:</span><br>    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">shop-product</span><br>  <span class=\"hljs-attr\">datasource:</span><br>    <span class=\"hljs-attr\">driver-class-name:</span> <span class=\"hljs-string\">com.mysql.cj.jdbc.Driver</span><br>    <span class=\"hljs-attr\">url:</span> <span class=\"hljs-string\">jdbc:mysql://192.168.56.120:3306/cloudAlibaba-demo?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false</span><br>    <span class=\"hljs-attr\">username:</span> <span class=\"hljs-string\">root</span><br>    <span class=\"hljs-attr\">password:</span> <span class=\"hljs-number\">123456</span><br>  <span class=\"hljs-attr\">jpa:</span><br>    <span class=\"hljs-attr\">properties:</span><br>      <span class=\"hljs-attr\">hibernate:</span><br>        <span class=\"hljs-attr\">hbm2ddl:</span><br>          <span class=\"hljs-attr\">auto:</span> <span class=\"hljs-string\">update</span><br>        <span class=\"hljs-attr\">dialect:</span> <span class=\"hljs-string\">org.hibernate.dialect.MySQL5InnoDBDialect</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动类\"><a href=\"#启动类\" class=\"headerlink\" title=\"启动类\"></a>启动类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> ProductApplication</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span> TODO</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/6/20 19:13</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@SpringBootApplication</span><br><span class=\"hljs-meta\">@EnableDiscoveryClient</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ProductApplication</span> &#123;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> &#123;<br>        SpringApplication.run(ProductApplication.class, args);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"实体类-1\"><a href=\"#实体类-1\" class=\"headerlink\" title=\"实体类\"></a>实体类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> Product</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span> TODO</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/6/20 19:16</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@Data</span><br><span class=\"hljs-meta\">@Entity(name = &quot;shop_product&quot;)</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Product</span> &#123;<br>    <span class=\"hljs-meta\">@Id</span><br>    <span class=\"hljs-meta\">@GeneratedValue(strategy = GenerationType.IDENTITY)</span><br>    <span class=\"hljs-comment\">/** 主键 */</span><br>    <span class=\"hljs-keyword\">private</span> Integer pId;<br>    <span class=\"hljs-comment\">/** 商品名称 */</span><br>    <span class=\"hljs-keyword\">private</span> String pName;<br>    <span class=\"hljs-comment\">/** 商品价格 */</span><br>    <span class=\"hljs-keyword\">private</span> Double pPrice;<br>    <span class=\"hljs-comment\">/** 库存 */</span><br>    <span class=\"hljs-keyword\">private</span> Integer stock;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"数据仓储-1\"><a href=\"#数据仓储-1\" class=\"headerlink\" title=\"数据仓储\"></a>数据仓储</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> ProductDao</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span> TODO</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/6/20 19:27</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">ProductDao</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">JpaRepository</span>&lt;Product,Integer&gt; &#123;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Service接口\"><a href=\"#Service接口\" class=\"headerlink\" title=\"Service接口\"></a>Service接口</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> ProductService</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span> TODO</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/6/20 19:28</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">ProductService</span> &#123;<br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 获取指定pId的产品对象</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> pId</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    Product <span class=\"hljs-title function_\">queryById</span><span class=\"hljs-params\">(Integer pId)</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Service接口实现\"><a href=\"#Service接口实现\" class=\"headerlink\" title=\"Service接口实现\"></a>Service接口实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> ProductServiceImpl</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span> TODO</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/6/20 19:29</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@Service</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ProductServiceImpl</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">ProductService</span> &#123;<br><br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">private</span> ProductDao productDao;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> Product <span class=\"hljs-title function_\">queryById</span><span class=\"hljs-params\">(Integer pId)</span> &#123;<br>        Optional&lt;Product&gt; productOptional = productDao.findById(pId);<br>        <span class=\"hljs-keyword\">if</span> (productOptional.isPresent()) &#123;<br>            <span class=\"hljs-keyword\">return</span> productOptional.get();<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Controller\"><a href=\"#Controller\" class=\"headerlink\" title=\"Controller\"></a>Controller</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> ProductController</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span> TODO</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/6/20 19:43</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@RestController</span><br><span class=\"hljs-meta\">@RequestMapping(&quot;/product&quot;)</span><br><span class=\"hljs-meta\">@Slf4j</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ProductController</span> &#123;<br><br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">private</span> ProductService productService;<br><br>    <span class=\"hljs-meta\">@GetMapping(&quot;/info/&#123;pId&#125;&quot;)</span><br>    <span class=\"hljs-keyword\">public</span> Product <span class=\"hljs-title function_\">info</span><span class=\"hljs-params\">(<span class=\"hljs-meta\">@PathVariable(&quot;pId&quot;)</span> Integer pId)</span> &#123;<br>        <span class=\"hljs-type\">Product</span> <span class=\"hljs-variable\">product</span> <span class=\"hljs-operator\">=</span> productService.queryById(pId);<br>        log.info(<span class=\"hljs-string\">&quot;查询到商品:&quot;</span> + JSON.toJSONString(product));<br>        <span class=\"hljs-keyword\">return</span> product;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"测试数据\"><a href=\"#测试数据\" class=\"headerlink\" title=\"测试数据\"></a>测试数据</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> `shop_product`(`p_id`, `p_name`, `p_price`, `stock`) <span class=\"hljs-keyword\">VALUES</span> (<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">&#x27;小米&#x27;</span>, <span class=\"hljs-number\">1000</span>, <span class=\"hljs-number\">5000</span>);<br><span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> `shop_product`(`p_id`, `p_name`, `p_price`, `stock`) <span class=\"hljs-keyword\">VALUES</span> (<span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">&#x27;华为&#x27;</span>, <span class=\"hljs-number\">2000</span>, <span class=\"hljs-number\">5000</span>);<br><span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> `shop_product`(`p_id`, `p_name`, `p_price`, `stock`) <span class=\"hljs-keyword\">VALUES</span> (<span class=\"hljs-number\">3</span>, <span class=\"hljs-string\">&#x27;苹果&#x27;</span>, <span class=\"hljs-number\">3000</span>, <span class=\"hljs-number\">5000</span>);<br><span class=\"hljs-keyword\">INSERT</span> <span class=\"hljs-keyword\">INTO</span> `shop_product`(`p_id`, `p_name`, `p_price`, `stock`) <span class=\"hljs-keyword\">VALUES</span> (<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">&#x27;OPPO&#x27;</span>, <span class=\"hljs-number\">4000</span>, <span class=\"hljs-number\">5000</span>);<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><p><img src=\"https://ftp.bmp.ovh/imgs/2021/06/c342f7bc6c36c39a.png\"></p>\n<h2 id=\"订单模块\"><a href=\"#订单模块\" class=\"headerlink\" title=\"订单模块\"></a>订单模块</h2><h3 id=\"pom依赖-2\"><a href=\"#pom依赖-2\" class=\"headerlink\" title=\"pom依赖\"></a><code>pom</code>依赖</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-meta\">&lt;?xml version=<span class=\"hljs-string\">&quot;1.0&quot;</span> encoding=<span class=\"hljs-string\">&quot;UTF-8&quot;</span>?&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">project</span> <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span><br><span class=\"hljs-tag\">         <span class=\"hljs-attr\">xmlns:xsi</span>=<span class=\"hljs-string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class=\"hljs-tag\">         <span class=\"hljs-attr\">xsi:schemaLocation</span>=<span class=\"hljs-string\">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">parent</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>springCloud-alibaba<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.letcoding<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.0.0-SNAPSHOT<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">parent</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">modelVersion</span>&gt;</span>4.0.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">modelVersion</span>&gt;</span><br><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>shop-order<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">properties</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">maven.compiler.source</span>&gt;</span>8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">maven.compiler.source</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">maven.compiler.target</span>&gt;</span>8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">maven.compiler.target</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">properties</span>&gt;</span><br><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencies</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.letcoding<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>shop-common<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.0.0-SNAPSHOT<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.letcoding<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>shop-product<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.0.0-SNAPSHOT<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencies</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">project</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"项目配置-2\"><a href=\"#项目配置-2\" class=\"headerlink\" title=\"项目配置\"></a>项目配置</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">server:</span><br>  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">8091</span><br><span class=\"hljs-attr\">spring:</span><br>  <span class=\"hljs-attr\">application:</span><br>    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">shop-order</span><br>  <span class=\"hljs-attr\">datasource:</span><br>    <span class=\"hljs-attr\">driver-class-name:</span> <span class=\"hljs-string\">com.mysql.cj.jdbc.Driver</span><br>    <span class=\"hljs-attr\">url:</span> <span class=\"hljs-string\">jdbc:mysql://192.168.56.120:3306/cloudAlibaba-demo?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false</span><br>    <span class=\"hljs-attr\">username:</span> <span class=\"hljs-string\">root</span><br>    <span class=\"hljs-attr\">password:</span> <span class=\"hljs-number\">123456</span><br>  <span class=\"hljs-attr\">jpa:</span><br>    <span class=\"hljs-attr\">properties:</span><br>      <span class=\"hljs-attr\">hibernate:</span><br>        <span class=\"hljs-attr\">hbm2ddl:</span><br>          <span class=\"hljs-attr\">auto:</span> <span class=\"hljs-string\">update</span><br>        <span class=\"hljs-attr\">dialect:</span> <span class=\"hljs-string\">org.hibernate.dialect.MySQL5InnoDBDialect</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动类-1\"><a href=\"#启动类-1\" class=\"headerlink\" title=\"启动类\"></a>启动类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> OrderApplication</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span> TODO</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/6/20 19:32</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@SpringBootApplication</span><br><span class=\"hljs-meta\">@EnableDiscoveryClient</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">OrderApplication</span> &#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> &#123;<br>        SpringApplication.run(OrderApplication.class, args);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"实体类-2\"><a href=\"#实体类-2\" class=\"headerlink\" title=\"实体类\"></a>实体类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> Order</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span> TODO</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/6/20 19:33</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@Data</span><br><span class=\"hljs-meta\">@Entity(name = &quot;shop_order&quot;)</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Order</span> &#123;<br>    <span class=\"hljs-meta\">@Id</span><br>    <span class=\"hljs-meta\">@GeneratedValue(strategy = GenerationType.IDENTITY)</span><br>    <span class=\"hljs-comment\">/** 订单id */</span><br>    <span class=\"hljs-keyword\">private</span> Long oId;<br>    <span class=\"hljs-comment\">/** 用户id */</span><br>    <span class=\"hljs-keyword\">private</span> Integer uId;<br>    <span class=\"hljs-comment\">/** 用户名 */</span><br>    <span class=\"hljs-keyword\">private</span> String userName;<br>    <span class=\"hljs-comment\">/** 商品id */</span><br>    <span class=\"hljs-keyword\">private</span> Integer pId;<br>    <span class=\"hljs-comment\">/** 商品名称 */</span><br>    <span class=\"hljs-keyword\">private</span> String pName;<br>    <span class=\"hljs-comment\">/** 商品单价 */</span><br>    <span class=\"hljs-keyword\">private</span> Double pPrice;<br>    <span class=\"hljs-comment\">/** 购买数量 */</span><br>    <span class=\"hljs-keyword\">private</span> Integer number;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"数据仓储-2\"><a href=\"#数据仓储-2\" class=\"headerlink\" title=\"数据仓储\"></a>数据仓储</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> OrderDao</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span> TODO</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/6/20 19:35</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">OrderDao</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">JpaRepository</span>&lt;Order,Long&gt; &#123;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Service接口-1\"><a href=\"#Service接口-1\" class=\"headerlink\" title=\"Service接口\"></a>Service接口</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> OrderService</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span> TODO</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/6/20 19:36</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">OrderService</span> &#123;<br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 保存订单对象</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> order</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">saveOrder</span><span class=\"hljs-params\">(Order order)</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Service接口实现-1\"><a href=\"#Service接口实现-1\" class=\"headerlink\" title=\"Service接口实现\"></a>Service接口实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> OrderServiceImpl</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span> TODO</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/6/20 19:36</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@Service</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">OrderServiceImpl</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">OrderService</span> &#123;<br><br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">private</span> OrderDao orderDao;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">saveOrder</span><span class=\"hljs-params\">(Order order)</span> &#123;<br>        orderDao.save(order);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"实例配置\"><a href=\"#实例配置\" class=\"headerlink\" title=\"实例配置\"></a>实例配置</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> BeanConfiguration</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span> TODO</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/6/20 20:34</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@Configuration</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">BeanConfiguration</span> &#123;<br>    <span class=\"hljs-meta\">@Bean</span><br>    <span class=\"hljs-keyword\">public</span> RestTemplate <span class=\"hljs-title function_\">restTemplate</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RestTemplate</span>();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Controller-1\"><a href=\"#Controller-1\" class=\"headerlink\" title=\"Controller\"></a>Controller</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@ClassName</span> OrderController</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span> TODO</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Author</span> will</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span> 2021/6/20 20:35</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-meta\">@RestController</span><br><span class=\"hljs-meta\">@Slf4j</span><br><span class=\"hljs-meta\">@RequestMapping(&quot;/order&quot;)</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">OrderController</span> &#123;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">REST_TEMPLATE</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&quot;restTemplate&quot;</span>;<br><br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">private</span> OrderService orderService;<br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">private</span> RestTemplate restTemplate;<br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">private</span> DiscoveryClient discoveryClient;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 保存指定产品订单</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> pId</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-meta\">@GetMapping(&quot;/save/&#123;pId&#125;&quot;)</span><br>    <span class=\"hljs-keyword\">public</span> Order <span class=\"hljs-title function_\">order</span><span class=\"hljs-params\">(<span class=\"hljs-meta\">@PathVariable(&quot;pId&quot;)</span> Integer pId, <span class=\"hljs-meta\">@RequestParam(name = &quot;queryType&quot;)</span> String queryType)</span> &#123;<br>        log.info(<span class=\"hljs-string\">&quot;&gt;&gt;客户下单，这时候要调用商品微服务查询商品信息&quot;</span>);<br>        <span class=\"hljs-type\">Product</span> <span class=\"hljs-variable\">product</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-literal\">null</span>;<br>        <span class=\"hljs-comment\">// 通过restTemplate调用商品微服务</span><br>        <span class=\"hljs-keyword\">if</span> (REST_TEMPLATE.equals(queryType)) &#123;<br>            product = queryProductByRestTemplate(pId);<br>        &#125; <br>        log.info(<span class=\"hljs-string\">&quot;&gt;&gt;商品信息,查询结果:&quot;</span> + JSON.toJSONString(product));<br>        <span class=\"hljs-type\">Order</span> <span class=\"hljs-variable\">order</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Order</span>();<br>        order.setUId(<span class=\"hljs-number\">1</span>);<br>        order.setUserName(<span class=\"hljs-string\">&quot;测试用户&quot;</span>);<br>        order.setPId(product.getPId());<br>        order.setPName(product.getPName());<br>        order.setPPrice(product.getPPrice());<br>        order.setNumber(<span class=\"hljs-number\">1</span>);<br>        orderService.saveOrder(order);<br>        <span class=\"hljs-keyword\">return</span> order;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * RestTemplate风格查询</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> pId    产品id</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span></span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">private</span> Product <span class=\"hljs-title function_\">queryProductByRestTemplate</span><span class=\"hljs-params\">(Integer pId)</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> restTemplate.getForObject(<span class=\"hljs-string\">&quot;http://localhost:8081/product/info/&quot;</span> + pId, Product.class);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n",
            "tags": [
                "JAVA",
                "Spring",
                "SpringCloud",
                "SpringCloud Alibaba"
            ]
        },
        {
            "id": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/Spring/Spring-Cloud-Alibaba(1)-%E5%A4%A7%E8%AF%9DSpring%20Cloud/",
            "url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/Spring/Spring-Cloud-Alibaba(1)-%E5%A4%A7%E8%AF%9DSpring%20Cloud/",
            "title": "Spring-Cloud-Alibaba(1)-大话Spring Cloud",
            "date_published": "2024-01-03T13:13:21.645Z",
            "content_html": "<h1 id=\"微服务介绍\"><a href=\"#微服务介绍\" class=\"headerlink\" title=\"微服务介绍\"></a>微服务介绍</h1><h2 id=\"微服务架构介绍\"><a href=\"#微服务架构介绍\" class=\"headerlink\" title=\"微服务架构介绍\"></a>微服务架构介绍</h2><p>微服务架构， 简单的说就是将单体应用进一步拆分，拆分成更小的服务，每个服务都是一个可以独立运行的项目。</p>\n<h2 id=\"微服务架构的常见问题\"><a href=\"#微服务架构的常见问题\" class=\"headerlink\" title=\"微服务架构的常见问题\"></a>微服务架构的常见问题</h2><p>一旦采用微服务系统架构，就势必会遇到这样几个问题：</p>\n<ul>\n<li>这么多小服务，如何管理他们？(服务治理 注册中心[服务注册 发现 剔除])</li>\n<li>这么多小服务，他们之间如何通讯？(restful rpc)</li>\n<li>这么多小服务，客户端怎么访问他们？(网关)</li>\n<li>这么多小服务，一旦出现问题了，应该如何自处理？(容错)</li>\n<li>这么多小服务，一旦出现问题了，应该如何排错? (链路追踪)</li>\n</ul>\n<p>对于上面的问题，是任何一个微服务设计者都不能绕过去的，因此大部分的微服务产品都针对每一个问题提供了相应的组件来解决它们。</p>\n<p><img src=\"https://gitee.com/yangxiangnanWorkSpace/uploadImages/raw/master/static/20200710114705.jpg\"></p>\n<h2 id=\"微服务架构的常见概念\"><a href=\"#微服务架构的常见概念\" class=\"headerlink\" title=\"微服务架构的常见概念\"></a>微服务架构的常见概念</h2><h3 id=\"服务治理\"><a href=\"#服务治理\" class=\"headerlink\" title=\"服务治理\"></a>服务治理</h3><p>服务治理就是进行服务的自动化管理，其核心是服务的自动注册与发现。</p>\n<ul>\n<li>服务注册：服务实例将自身服务信息注册到注册中心。</li>\n<li>服务发现：服务实例通过注册中心，获取到注册到其中的服务实例的信息，通过这些信息去请求它们提供的服务。</li>\n<li>服务剔除：服务注册中心将出问题的服务自动剔除到可用列表之外，使其不会被调用到。</li>\n</ul>\n<h3 id=\"服务调用\"><a href=\"#服务调用\" class=\"headerlink\" title=\"服务调用\"></a>服务调用</h3><p>在微服务架构中，通常存在多个服务之间的远程调用的需求。目前主流的远程调用技术有基于HTTP的RESTful接口以及基于TCP的RPC协议。</p>\n<ul>\n<li><p>REST(Representational State Transfer)这是一种HTTP调用的格式，更标准，更通用，无论哪种语言都支持http协议</p>\n</li>\n<li><p>RPC（Remote Promote Call）一种进程间通信方式。允许像调用本地服务一样调用远程服务。RPC框架的主要目标就是让远程服务调用更简单、透明。RPC框架负责屏蔽底层的传输方式、序列化方式和通信细节。开发人员在使用的时候只需要了解谁在什么位置提供了什么样的远程服务接口即可，并不需要关心底层通信细节和调用过程。</p>\n<p><strong>区别与联系</strong></p>\n<table>\n<thead>\n<tr>\n<th>比较项</th>\n<th>RESTful</th>\n<th>RPC</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>通讯协议</td>\n<td>HTTP</td>\n<td>一般使用TCP</td>\n</tr>\n<tr>\n<td>性能</td>\n<td>略低</td>\n<td>较高</td>\n</tr>\n<tr>\n<td>灵活度</td>\n<td>高</td>\n<td>低</td>\n</tr>\n<tr>\n<td>应用</td>\n<td>微服务架构</td>\n<td>SOA架构</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h3 id=\"服务网关\"><a href=\"#服务网关\" class=\"headerlink\" title=\"服务网关\"></a>服务网关</h3><p>随着微服务的不断增多，不同的微服务一般会有不同的网络地址，而外部客户端可能需要调用多个服务的接口才能完成一个业务需求，如果让客户端直接与各个微服务通信可能出现：</p>\n<ul>\n<li>客户端需要调用不同的url地址，增加难度</li>\n<li>在一定的场景下，存在跨域请求的问题</li>\n<li>每个微服务都需要进行单独的身份认证</li>\n</ul>\n<p>针对这些问题，API网关顺势而生。<br>API网关直面意思是将所有API调用统一接入到API网关层，由网关层统一接入和输出。一个网关的基本功能有：统一接入、安全防护、协议适配、流量管控、长短链接支持、容错能力。有了网关之后，各个API服务提供团队可以专注于自己的的业务逻辑处理，而API网关更专注于安全、流量、路由等问题。</p>\n<h3 id=\"服务容错\"><a href=\"#服务容错\" class=\"headerlink\" title=\"服务容错\"></a>服务容错</h3><p>在微服务当中，一个请求经常会涉及到调用几个服务，如果其中某个服务不可用，没有做服务容错的话，极有可能会造成一连串的服务不可用，这就是雪崩效应。<br>我们没法预防雪崩效应的发生，只能尽可能去做好容错。服务容错的三个核心思想是：</p>\n<ul>\n<li>不被外界环境影响</li>\n<li>不被上游请求压垮</li>\n<li>不被下游响应拖垮</li>\n</ul>\n<p><img src=\"https://gitee.com/yangxiangnanWorkSpace/uploadImages/raw/master/static/20200710114704.png\"></p>\n<h3 id=\"链路追踪\"><a href=\"#链路追踪\" class=\"headerlink\" title=\"链路追踪\"></a>链路追踪</h3><p>随着微服务架构的流行，服务按照不同的维度进行拆分，一次请求往往需要涉及到多个服务。互联网应用构建在不同的软件模块集上，这些软件模块，有可能是由不同的团队开发、可能使用不同的编程语言来实现、有可能布在了几千台服务器，横跨多个不同的数据中心。因此，就需要对一次请求涉及的多个服务链路进行日志记录，性能监控即链路追踪。</p>\n<p><img src=\"https://gitee.com/yangxiangnanWorkSpace/uploadImages/raw/master/static/20200710141312.png\"></p>\n<h2 id=\"微服务架构的常见解决方案\"><a href=\"#微服务架构的常见解决方案\" class=\"headerlink\" title=\"微服务架构的常见解决方案\"></a>微服务架构的常见解决方案</h2><h3 id=\"ServiceComb\"><a href=\"#ServiceComb\" class=\"headerlink\" title=\"ServiceComb\"></a>ServiceComb</h3><p><img src=\"https://gitee.com/yangxiangnanWorkSpace/uploadImages/raw/master/static/20200710141736.png\" alt=\"image-20200710141731679\"></p>\n<p>Apache ServiceComb，前身是华为云的微服务引擎 CSE (Cloud Service Engine) 云服务，是全球首个Apache微服务顶级项目。它提供了一站式的微服务开源解决方案，致力于帮助企业、用户和开发者将企业应用轻松微服务化上云，并实现对微服务应用的高效运维管理。</p>\n<h3 id=\"SpringCloud\"><a href=\"#SpringCloud\" class=\"headerlink\" title=\"SpringCloud\"></a>SpringCloud</h3><p><img src=\"https://gitee.com/yangxiangnanWorkSpace/uploadImages/raw/master/static/20200710143511.png\" alt=\"image-20200710143509327\"></p>\n<p>Spring Cloud是一系列框架的集合。它利用Spring Boot的开发便利性巧妙地简化了分布式系统基础设施的开发，如服务发现注册、配置中心、消息总线、负载均衡、断路器、数据监控等，都可以用Spring Boot的开发风格做到一键启动和部署。<br>Spring Cloud并没有重复制造轮子，它只是将目前各家公司开发的比较成熟、经得起实际考验的服务框架组合起来，通过Spring Boot风格进行再封装屏蔽掉了复杂的配置和实现原理，最终给开发者留出了一套简单易懂、易部署和易维护的分布式系统开发工具包。</p>\n<h3 id=\"SpringCloud-Alibaba\"><a href=\"#SpringCloud-Alibaba\" class=\"headerlink\" title=\"SpringCloud Alibaba\"></a>SpringCloud Alibaba</h3><p><img src=\"https://gitee.com/yangxiangnanWorkSpace/uploadImages/raw/master/static/20200710143714.png\" alt=\"image-20200710143710723\"></p>\n<p>Spring Cloud Alibaba 致力于提供微服务开发的一站式解决方案。此项目包含开发分布式应用微服务的必需组件，方便开发者通过 Spring Cloud 编程模型轻松使用这些组件来开发分布式应用服务。</p>\n<h2 id=\"SpringCloud-Alibaba介绍\"><a href=\"#SpringCloud-Alibaba介绍\" class=\"headerlink\" title=\"SpringCloud Alibaba介绍\"></a>SpringCloud Alibaba介绍</h2><p>Spring Cloud Alibaba 致力于提供微服务开发的一站式解决方案。此项目包含开发分布式应用微服务的必需组件，方便开发者通过 Spring Cloud 编程模型轻松使用这些组件来开发分布式应用服务。<br>依托 Spring Cloud Alibaba，您只需要添加一些注解和少量配置，就可以将 Spring Cloud 应用接入阿里微服务解决方案，通过阿里中间件来迅速搭建分布式应用系统。</p>\n<h3 id=\"主要功能\"><a href=\"#主要功能\" class=\"headerlink\" title=\"主要功能\"></a>主要功能</h3><ul>\n<li><strong>服务限流降级：默认支持 WebServlet、WebFlux， OpenFeign、RestTemplate、Spring CloudGateway， Zuul， Dubbo 和 RocketMQ 限流降级功能的接入，可以在运行时通过控制台实时修改限流降级规则，还支持查看限流降级 Metrics 监控。</strong></li>\n<li><strong>服务注册与发现：适配 Spring Cloud 服务注册与发现标准，默认集成了 Ribbon 的支持。</strong></li>\n<li><strong>分布式配置管理：支持分布式系统中的外部化配置，配置更改时自动刷新。</strong></li>\n<li><strong>消息驱动能力：基于 Spring Cloud Stream 为微服务应用构建消息驱动能力。</strong></li>\n<li><strong>分布式事务：使用 @GlobalTransactional 注解， 高效并且对业务零侵入地解决分布式事务问题。</strong></li>\n<li><strong>阿里云对象存储：阿里云提供的海量、安全、低成本、高可靠的云存储服务。支持在任何应用、任何时间、任何地点存储和访问任意类型的数据。</strong></li>\n<li><strong>分布式任务调度：提供秒级、精准、高可靠、高可用的定时（基于 Cron 表达式）任务调度服务。同时提供分布式的任务执行模型，如网格任务。网格任务支持海量子任务均匀分配到所有Worker（schedulerx-client）上执行。</strong></li>\n<li><strong>阿里云短信服务：覆盖全球的短信服务，友好、高效、智能的互联化通讯能力，帮助企业迅速搭建客户触达通道。</strong></li>\n</ul>\n<h3 id=\"组件\"><a href=\"#组件\" class=\"headerlink\" title=\"组件\"></a>组件</h3><ul>\n<li><strong>Sentinel：把流量作为切入点，从流量控制、熔断降级、系统负载保护等多个维度保护服务的稳定性。</strong></li>\n<li><strong>Nacos：一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台。</strong></li>\n<li><strong>RocketMQ：一款开源的分布式消息系统，基于高可用分布式集群技术，提供低延时的、高可靠的消息发布与订阅服务。</strong></li>\n<li><strong>Dubbo：Apache Dubbo™ 是一款高性能 Java RPC 框架。</strong></li>\n<li><strong>Seata：阿里巴巴开源产品，一个易于使用的高性能微服务分布式事务解决方案。</strong></li>\n<li><strong>Alibaba Cloud ACM：一款在分布式架构环境中对应用配置进行集中管理和推送的应用配置中心产品。</strong></li>\n<li><strong>Alibaba Cloud OSS: 阿里云对象存储服务（Object Storage Service，简称 OSS），是阿里云提供的海量、安全、低成本、高可靠的云存储服务。您可以在任何应用、任何时间、任何地点存储和访问任意类型的数据。</strong></li>\n<li><strong>Alibaba Cloud SchedulerX: 阿里中间件团队开发的一款分布式任务调度产品，提供秒级、精准、高可靠、高可用的定时（基于 Cron 表达式）任务调度服务。</strong></li>\n<li><strong>Alibaba Cloud SMS: 覆盖全球的短信服务，友好、高效、智能的互联化通讯能力，帮助企业迅速搭建客户触达通道。</strong></li>\n</ul>\n<blockquote>\n<p>（注：后四项都是收费产品）</p>\n</blockquote>\n",
            "tags": [
                "JAVA",
                "Spring",
                "SpringCloud",
                "SpringCloud Alibaba"
            ]
        }
    ]
}