{
    "version": "https://jsonfeed.org/version/1",
    "title": "Will • All posts by \"typora\" tag",
    "description": "愿你一生努力，一生被爱",
    "home_page_url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io",
    "items": [
        {
            "id": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/%E5%B7%A5%E5%85%B7/Typora%E6%95%99%E7%A8%8B/",
            "url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/%E5%B7%A5%E5%85%B7/Typora%E6%95%99%E7%A8%8B/",
            "title": "Typora教程",
            "date_published": "2024-01-03T13:13:21.665Z",
            "content_html": "<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><blockquote>\n<p>本篇介绍一下博猪经常使用的一个工具的教程，也是博猪用于总结开发和记录学习笔记的一个神器，说先说明一点，博猪纯纯的处女座，所以对于某些东西还是有较高的要求的，但是这款工具都满足了博猪的要求，最主要的事情就是开源（免费）和用着爽。废话不多说，下面博猪带给你史上Typora保姆级教程。</p>\n<p>Typora 一直是我认为桌面端笔记应用应有的终极形态。用一句话概况话来说就是，「它的<strong>功能之强大、设计之冷静、体验之美妙、理念之先进</strong>，我认为值得所有笔记应用厂商学习。」</p>\n<p>参考文章：</p>\n<p><a href=\"https://sspai.com/post/54912/\">少数派</a></p>\n<p><a href=\"https://blog.csdn.net/qq_33159059/article/details/87910522\">CSDN博客</a></p>\n<p><a href=\"https://blog.csdn.net/tian_ci/article/details/85257667\">CSDN博客</a></p>\n</blockquote>\n<h1 id=\"Typora简介\"><a href=\"#Typora简介\" class=\"headerlink\" title=\"Typora简介\"></a>Typora简介</h1><h2 id=\"Typora-是什么？\"><a href=\"#Typora-是什么？\" class=\"headerlink\" title=\"Typora 是什么？\"></a>Typora 是什么？</h2><p>Typora 是一款<strong>支持实时预览的 Markdown 文本编辑器</strong>。它有 OS X、Windows、Linux 三个平台的版本，并且由于仍在测试中，是<strong>完全免费</strong>的。</p>\n<p>在这篇文章中，我希望以「Typora 是什么」这个问题为线索，向大家全面介绍这款令人爱不释手的笔记应用。</p>\n<h2 id=\"一个-Markdown-文本编辑器\"><a href=\"#一个-Markdown-文本编辑器\" class=\"headerlink\" title=\"一个 Markdown 文本编辑器\"></a>一个 Markdown 文本编辑器</h2><p>Typora 首先是一个 Markdown 文本编辑器，它支持且仅支持 Markdown 语法的文本编辑。在 <a href=\"https://typora.io/\">Typora 官网</a> 上他们将 Typora 描述为 「A truly <strong>minimal</strong> markdown editor. 」。</p>\n<p><img src=\"https://cdn.sspai.com/2019/05/24/49c4cdef47bf81018b9871a628523064.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1\" alt=\"img\"></p>\n<h3 id=\"关于-Markdown\"><a href=\"#关于-Markdown\" class=\"headerlink\" title=\"关于 Markdown\"></a>关于 Markdown</h3><p>Markdown 是用来编写结构化文档的一种纯文本格式，它使我们在双手不离开键盘的情况下，可以对文本进行一定程度的格式排版。</p>\n<p>由于目前还没有一个权威机构对 Markdown 的语法进行规范，各应用厂商制作时遵循的 Markdown 语法也是不尽相同的。其中比较受到认可的是 <a href=\"https://github.github.com/gfm/\">GFM 标准</a>，它是由著名代码托管网站 <a href=\"https://github.com/\">GitHub</a> 所制定的。Typora 主要使用的也是 GFM 标准。同时，你还可以在 <code>文件 - 偏好设置 - Markdown 语法偏好 - 严格模式</code> 中将标准设置为「更严格地遵循 GFM 标准」。具体内容你可以在官方的 <a href=\"http://support.typora.io/Strict-Mode/\">这篇文档</a> 中查看。</p>\n<p><img src=\"https://cdn.sspai.com/2019/05/24/a35f8fd5e9d968edfe5a0b02b54d0881.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1\" alt=\"img\">严格模式</p>\n<h3 id=\"写得舒服\"><a href=\"#写得舒服\" class=\"headerlink\" title=\"写得舒服\"></a>写得舒服</h3><p>一个文本编辑器，<strong>写得舒服</strong>是关键。我曾说过，「更有趣的是，一个笔记应用不会因为它支持 Markdown 语法而高级或易用很多。」，细枝末节处的人性化考虑才是最重要的。而 Typora 的编辑体验显然是经过深思熟虑设计的产物。</p>\n<p>我认为：一个优秀的笔记应用应该给用户<strong>选择 Markdown 语法风格的权利</strong>。而 Typora 在这一点上是我目前见过所有 Markdown 笔记应用中做得最好的。</p>\n<p><img src=\"https://cdn.sspai.com/2019/05/24/ea30087c6f93d0fa3c5a313c8cdce357.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1\" alt=\"img\">文本编辑设置</p>\n<p>通过打开 <code>文件 - 偏好设置</code> 你会发现 Typora 为编辑体验的考虑细致到了令人叹为观止的程度。Typora 中提供了大量有关 Markdown 偏好的设置，据此，你可以构建一个几乎完全适合自己的 Markdown 编辑器。下面我将依次介绍一些与文本编辑体验有关的功能亮点。</p>\n<h4 id=\"智能标点\"><a href=\"#智能标点\" class=\"headerlink\" title=\"智能标点\"></a>智能标点</h4><p>我认为「智能标点」是比较有趣的一点。它可以自动帮你将不是很美观的直引号 <code>&quot;</code> <code>&#39;</code> 转化为更美观的弯引号 <code>“</code> <code>‘</code> <code>’</code> <code>”</code>。具体内容你可以在官方的 <a href=\"http://support.typora.io/SmartyPants/\">这篇文档</a> 中查看。关于直弯引号在 macOS 上如何输入你也可以看 <a href=\"https://sspai.com/post/38342\">这篇文章</a>。</p>\n<h4 id=\"图片插入\"><a href=\"#图片插入\" class=\"headerlink\" title=\"图片插入\"></a>图片插入</h4><p>Typora 的图片插入功能是广受好评的。要知道，Markdown 原生不太注重图片插入的功能，但你可以在 Typora 中：</p>\n<ul>\n<li>直接使用 <code>右键 - 复制 Ctrl + V</code> 将网络图片、剪贴板图片复制到文档中</li>\n<li>拖动本地图片到文档中</li>\n</ul>\n<p>Typora 会自动帮你插入符合 Markdown 语法的图片语句，并给它加上标题。</p>\n<p><img src=\"https://cdn.sspai.com/2019/05/24/1de13eae43785e27bbbcd631931fd161.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1\" alt=\"img\">复制图片</p>\n<p>你也完全可以使用图床来保证文档在分享后图片仍能正常显示。</p>\n<p>更强大的是，Typora 支持在拖动或 <code>Ctrl + V</code> 网络图片后自动将其保存到本地。你可以在 <code>文件 - 偏好设置 - 编辑器 - 图片插入</code> 中选择复制到哪个路径，什么情况下需要复制。</p>\n<p><img src=\"https://cdn.sspai.com/2019/05/24/717da653ad91e938c5f1f40555b9c057.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1\" alt=\"img\">图片插入</p>\n<p>这一功能保证了即使网络图片源失效了，你还有本地的备份可用。同时也能使你的文档文件夹更合理、完整。</p>\n<h4 id=\"打字机模式和专注模式\"><a href=\"#打字机模式和专注模式\" class=\"headerlink\" title=\"打字机模式和专注模式\"></a>打字机模式和专注模式</h4><p><strong>「打字机模式」</strong>使得你所编辑的那一行永远处于屏幕正中。</p>\n<p><strong>「专注模式」</strong>使你正在编辑的那一行保留颜色，而其他行的字体呈灰色。</p>\n<p>你可以在 <code>视图 - 专注模式 / 打字机模式</code> 中勾选使用这两个模式。</p>\n<p><img src=\"https://cdn.sspai.com/2019/05/24/8b4e14ef732a23d4cc2a8fb1f8ec016c.gif\" alt=\"img\">两种模式</p>\n<h4 id=\"实时预览\"><a href=\"#实时预览\" class=\"headerlink\" title=\"实时预览\"></a>实时预览</h4><p>我想很果断地下这个结论：到现在还不支持编辑界面实时预览的 Markdown 编辑器基本可以退出市场了。Typora 在这一方面显然已经领先了一大步——他们连 Markdown 语法的标记都在实时预览中消去了。当你离开正在编辑的有格式的文本段后，Typora 会自动隐藏 Markdown 标记，只留下<strong>「所见即所得」</strong>的美妙。<em>他们把这称为 Hybrid View。</em></p>\n<p><img src=\"https://cdn.sspai.com/2019/05/24/f99c9ce02e2728ec6c64b443947fc67e.gif\" alt=\"img\">所见即所得</p>\n<p>为了防止一些程序 bug 的发生（虽然在我使用下来感到是很少的）导致格式问题无法修改，Typora 保留了一个<strong>「源代码模式」</strong>。你可以通过 <code>视图 - 源代码模式</code> 或左下角的 <code>&lt;/&gt;</code> 按钮进入。</p>\n<p><img src=\"https://cdn.sspai.com/2019/05/24/bcda9c4e35725b7297a6b90d8745564e.gif\" alt=\"img\">源代码模式</p>\n<h4 id=\"大纲-x2F-文件侧边栏\"><a href=\"#大纲-x2F-文件侧边栏\" class=\"headerlink\" title=\"大纲 &#x2F; 文件侧边栏\"></a>大纲 &#x2F; 文件侧边栏</h4><p><img src=\"https://cdn.sspai.com/2019/05/24/f2461efb5ac297facfcd9f72cc5da6be.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1\" alt=\"img\">侧边栏</p>\n<p>Typora 会根据你 Markdown 标记的 H1、H2、H3…… 各级标题为你呈现一个大纲。</p>\n<p>你也可以选择查看文件夹中的文件，但由于目前 Typora 只支持查看 md 文件，因此我认为文件侧边栏这个功能还是很鸡肋的。</p>\n<h4 id=\"空格与换行\"><a href=\"#空格与换行\" class=\"headerlink\" title=\"空格与换行\"></a>空格与换行</h4><p>Typora 在空格与换行部分主要是使用 <a href=\"http://www.commonmark.cn/w/\">CommonMark</a> 作为标注规范。与前文提到的 GFM 一样，CommonMark 也是比较流行的 Markdown 语言规范（解析器）之一。</p>\n<ul>\n<li><strong>空格：</strong>在输入连续的空格后，Typora 会在编辑器视图里为你保留这些空格，但当你打印或导出时，这些空格会被省略成一个。<br>你可以在源代码模式下，为每个空格前加一个 <code>\\</code> 转义符，或者直接使用 HTML 风格的 <code>&amp;nbps;</code> 来保持连续的空格。</li>\n<li><strong>软换行：</strong>需要说明的是，在 Markdown 语法中，换行（line break）与换段是不同的。且换行分为软换行和硬换行。在 Typora 中，你可以通过 <code>Shift + Enter</code> 完成一次软换行。软换行只在编辑界面可见，当文档被导出时换行会被省略。</li>\n<li><strong>硬换行：</strong>你可以通过 <code>空格 + 空格 + Shift + Enter</code> 完成一次硬换行，而这也是许多 Markdown 编辑器所原生支持的。硬换行在文档被导出时将被保留，且没有换段的段后距。</li>\n<li><strong>换段：</strong>你可以通过 <code>Enter</code> 完成一次换段。Typora 会自动帮你完成两次 <code>Shift + Enter</code> 的软换行，从而完成一次换段。这也意味着在 Markdown 语法下，换段是通过在段与段之间加入空行来实现的。</li>\n<li><strong>Windows 风格（CR+LF）与 Unix 风格（CR）的换行符：</strong>CR 表示回车 <code>\\r</code> ，即回到一行的开头，而 LF 表示换行 <code>\\n</code> ，即另起一行。<br>所以 Windows 风格的换行符本质是「回车 + 换行」，而 Unix 风格的换行符是「换行」。这也是为什么 Unix &#x2F; Mac 系统下的文件，如果在 Windows 系统直接打开会全部在同一行内。 你可以在 <code>文件 - 偏好设置 - 编辑器 - 默认换行符</code> 中对此进行切换。</li>\n</ul>\n<p>下附以上各空格、换行、换段的测试结果图。具体内容你可以在官网的 <a href=\"http://support.typora.io/Line-Break/\">这篇文档</a> 中查阅。</p>\n<p><img src=\"https://cdn.sspai.com/2019/05/24/5c2fbaa53b27666a7fd0b07ac3e100bf.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1\" alt=\"img\">空格、换行、换段</p>\n<h4 id=\"emoji-表情\"><a href=\"#emoji-表情\" class=\"headerlink\" title=\"emoji 表情\"></a>emoji 表情</h4><p>如今 emoji 表情越来越多地出现在一些网站文章中，但在桌面端（特别是 Windows 系统）文本编辑器上插入 emoji 是一件十分麻烦的事情。在使用 Typora 之前，我打出 emoji 表情的办法基本有两个：</p>\n<ol>\n<li><strong>输入法联想：</strong>优点是比较方便，但会插入一张图片而不是一个字符，在许多情景下都不是很合适。</li>\n<li><strong>复制 emoji 符号：</strong>优点是能保证符号的形式，但显然每次用都需要去复制，比较麻烦。</li>\n</ol>\n<p><img src=\"https://cdn.sspai.com/2019/05/24/b2601a694aba07b8a68615ca59bcc495.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1\" alt=\"img\">输入法联想</p>\n<p>在 Typora 中，你可以用 <code>:emoji:</code> 的形式来打出 emoji，软件会自动给出图形的提示，还是比较好用的。</p>\n<p><img src=\"https://cdn.sspai.com/2019/05/24/ff26eeb5ff2d6fae16cab163ebfcd096.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1\" alt=\"img\">Typora 中输入 emoji</p>\n<h2 id=\"一个学术文档编辑器\"><a href=\"#一个学术文档编辑器\" class=\"headerlink\" title=\"一个学术文档编辑器\"></a>一个学术文档编辑器</h2><p>除了基本的文本编辑体验极佳之外，Typora 还是一个非常优秀的学术文档编辑器。当然作为一个轻量级的、基于 Markdown 的编辑器，它不能与那些 LaTeX 编辑器相提并论，但它仍支持了许多可用于学术写作的功能。</p>\n<h3 id=\"LaTeX\"><a href=\"#LaTeX\" class=\"headerlink\" title=\"LaTeX\"></a>LaTeX</h3><blockquote>\n<p>LaTeX 是一种基于 TeX 的排版系统，由于它易于快速生成复杂表格和数学公式，非常适用于生成高印刷质量的科技和数学类文档。如果你常阅读数学、计算机等领域的学术论文，你一定对 LaTeX 不陌生。</p>\n</blockquote>\n<p>Typora 原生支持 LaTeX 语法，你有两种方式输入 LaTeX 风格的数学公式：</p>\n<ol>\n<li><strong>行内公式（inline）：</strong>用 <code>$...$</code> 括起公式，公式会出现在行内。</li>\n<li><strong>块间公式（display）：</strong>用 <code>$$...$$</code> 括起公式（注意 <code>$$</code> 后需要换行），公式会默认显示在行中间。</li>\n</ol>\n<p>具体的 LaTeX 语法在此不赘述了，你可以在 <a href=\"https://blog.csdn.net/happyday_d/article/details/83715440\">这篇文章</a> 中查看。</p>\n<h3 id=\"代码高亮\"><a href=\"#代码高亮\" class=\"headerlink\" title=\"代码高亮\"></a>代码高亮</h3><p>Typora 中代码的插入也可以分为行内和块间两种：</p>\n<ol>\n<li>行内代码：用 <code>...</code> 或 <code>...</code> 括起代码，代码会以主题中设置的样式出现在行内，但不会实现代码高亮。</li>\n<li>代码块：输入 &#96;&#96;&#96;&#96;&#96; 后并输入语言名，换行，开始写代码，Typora 就会自动帮你实现代码高亮。Typora 原生支持许多编程语言代码块的语法高亮，基本日常常用的编程语言它都能很好地支持。<br>除此以外，你也可以直接换行开始写，而后再选择语言。</li>\n</ol>\n<p><img src=\"https://cdn.sspai.com/2019/05/24/a8c283ba4f1ba09d41331b87e2eef3b9.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1\" alt=\"img\">代码块</p>\n<h3 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h3><p>在 Markdown 中插入表格一直是一件比较头疼的事情。在一般的 Markdown 编辑器中，你可以通过以下的格式插入表格：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\">| 左对齐 | 右对齐 | 居中对齐 |<br>| :-----| ----: | :----: |<br>| 单元格 | 单元格 | 单元格 |<br>| 单元格 | 单元格 | 单元格 |<br></code></pre></td></tr></table></figure>\n\n<p>乍一看还挺直观好用的是吧？但想想，一旦表格内容层次不齐，又或是表格长得难以下手，直接用键盘输入表格就显得十分麻烦和痛苦了。</p>\n<p>好在 Typora 为我们提供了图形界面的插入表格的功能，你只需要在行内 <code>鼠标右键 - 插入 - 表格</code> ，并输入行数和列数，Typora 就会自动生成一张样式不错的空表格。</p>\n<p><img src=\"https://cdn.sspai.com/2019/05/24/51bf2f290592e1ddbadb95765c04f297.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1\" alt=\"img\">Typora 表格</p>\n<h3 id=\"链接引用与脚注\"><a href=\"#链接引用与脚注\" class=\"headerlink\" title=\"链接引用与脚注\"></a>链接引用与脚注</h3><p><strong>链接引用</strong>类似于我们常在论文末尾看到的「参考文献」的写法，你可以通过 <code>[]:</code> 的语法来为你的文档加上链接引用。</p>\n<p><strong>脚注</strong>在少数派的文章中也很常见，即某段话结尾右上角标有数字标记，页面底部进行注释的写法。你可以在需要插入脚注标号的位置写 <code>[^ number ]</code> ，再在下方通过 <code>[^ number ]:</code> 在文档中插入脚注。注意不要遗漏了脚注编号 <code>number</code> 前后的空格。</p>\n<p><img src=\"https://cdn.sspai.com/2019/05/24/5f82606e6d89fe1eb24705c4ca6b895d.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1\" alt=\"img\">链接引用和脚注</p>\n<h3 id=\"文件系统\"><a href=\"#文件系统\" class=\"headerlink\" title=\"文件系统\"></a>文件系统</h3><p>除了前文提到的文件侧边栏，Typora 还提供了一些耦合度不高的文件系统。</p>\n<ul>\n<li><strong>快速打开：</strong>你可以通过 <code>文件 - 快速打开...</code> 或 <code>Ctrl + P</code> 快捷键快速打开最近的文档。</li>\n<li><strong>保存：</strong>Typora 支持自动保存，一般很少有写好的文档丢失的情况。同时它也提供了诸如「保存」、「另存为」、「保存全部打开的文件…」之类的功能。</li>\n<li><strong>导入：</strong>Typora 支持非常多的文件格式：.docx, .latex, .tex, .ltx, .rst, .rest, .org, .wiki, .dokuwiki, .textile, .opml, .epub。</li>\n<li><strong>导出：</strong>Typora 原生支持导出 PDF，HTML等格式。你可以根据软件内提示安装 <strong>Pandoc 插件</strong>来导出更多例如 docx，LaTeX 等格式。</li>\n</ul>\n<p><img src=\"https://cdn.sspai.com/2019/05/24/ba295f21f0b71646bb36a0517e868ced.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1\" alt=\"img\">导出</p>\n<h2 id=\"一个伪装成文本编辑器的浏览器\"><a href=\"#一个伪装成文本编辑器的浏览器\" class=\"headerlink\" title=\"一个伪装成文本编辑器的浏览器\"></a>一个伪装成文本编辑器的浏览器</h2><p>当我的一个朋友问我「Typora 有什么好写的？」时，我回答「Typora 是一个伪装成文本编辑器的浏览器」。是的，事实上如果你有一定的计算机基础，你可以找到许多有关于「Typora 其实是一个浏览器」的蛛丝马迹。</p>\n<p><img src=\"https://cdn.sspai.com/2019/05/24/13837bcdcded9ae406e8c4aac5f2d752.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1\" alt=\"img\">图片插入</p>\n<p>在图片插入的选项中，Typora 用了「复制图片到 .&#x2F;${filename}.assets 文件夹」的说法，而这其实是网页前端常用的 Javascript 字符串模板语法的风格。</p>\n<p>再比如，Typora 将更遵循 GFM 标准的 Markdown 语法模式称为「严格模式 Strict Mode」，这一说法常见于 HTML 和 JavaScript 编程中。类似「源代码模式」的说法也是同理。</p>\n<p>当然，最明显的一点是当你按下 <code>Shift + F12</code> 快捷键时，页面会弹出一个基于 Chrome 的开发者工具栏，也就是我们在浏览器中常说的「审查元素」。</p>\n<p><img src=\"https://cdn.sspai.com/2019/05/24/da8c9b305a222cb5fadb41c12da81a12.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1\" alt=\"img\">审查元素</p>\n<h3 id=\"伪装从何而来？\"><a href=\"#伪装从何而来？\" class=\"headerlink\" title=\"伪装从何而来？\"></a>伪装从何而来？</h3><p>当我们把视角放在「Typora 是一个支持 Markdown 语言的文本编辑器」的出发点来考虑这个问题，一切就都显得很明白了。</p>\n<p>John Gruber 在 2004 年用 Perl 创造了 Markdown 语言，这个语言的目的是希望大家使用「易于阅读、易于撰写的纯文字格式，并选择性的转换成有效的 XHTML（或是 HTML）」。也就是说，<strong>在 Markdown 诞生之初，它就是为了被浏览器阅读而设计的。</strong></p>\n<p>我们在用 Markdown 语言撰写文稿的时候，其实本质上是在借助某种编程语言的转化（解析器）来编写一个 HTML 网页。Markdown 从它诞生之初就与 Web 技术有着及其紧密的联系。</p>\n<p>如果我说，我们每一篇文稿都是一个网页，那就很好理解了。Typora 利用解析器先将我们写的 Markdown 文档解析成为 HTML 文档，再为它嵌入一个 CSS 样式，最后再加上可能需要的脚本等。</p>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><p>HTML 是一种标记语言，主要负责构成网页的骨架，它包含所有不加装饰的网页元素。在 Typora 的使用场景下则是所有的<strong>文本、段落、标题等</strong>的记号。</p>\n<p>你可以把一张网页想象成一幅数字油画，HTML 就是那个黑白线条的底，上面写满了数字标记，示意你哪一块区域要涂什么颜色。而 CSS 则负责在对应的区域涂上颜色，甚至加上一些装饰等。</p>\n<p><img src=\"https://cdn.sspai.com/2019/05/24/7ce3d9ed245eed902e833405b9464103.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1\" alt=\"img\">数字油画</p>\n<h4 id=\"HTML-标签\"><a href=\"#HTML-标签\" class=\"headerlink\" title=\"HTML 标签\"></a>HTML 标签</h4><p>Typora 支持许多常用的 HTML 标签，如果你了解 HTML 语法的话，你可以写出十分美观丰富的文档页面。</p>\n<p><img src=\"https://cdn.sspai.com/2019/05/24/89bba4dfdfb49b8d3c129ce1157a54b1.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1\" alt=\"img\">HTML 标签</p>\n<p>事实上你可以在 Typora 中完成许多基本的 HTML 风格的文本输入，例如 HTML 字符、HTML 块、HTML 风格的注释，甚至是视频和音频。具体支持的功能和限制请在 <a href=\"http://support.typora.io/HTML/\">官方文档</a> 中查阅。</p>\n<p>有了这一功能，我们就可以在 Typora 中创造出远超普通 Markdown 文档的页面效果。</p>\n<h4 id=\"导出为-HTML\"><a href=\"#导出为-HTML\" class=\"headerlink\" title=\"导出为 HTML\"></a>导出为 HTML</h4><p>Typora 原生支持将文档导出为 HTML 格式的文件，并选择是否要嵌入 style（也就是后文我将提到的 CSS 的部分）。</p>\n<p>除此之外，由于其本身「浏览器」的属性，你可以直接在实时预览界面用 <code>Ctrl +C</code> 复制到 HTML 代码。一个实用的用处是将这些 HTML 代码直接 <code>Ctrl + V</code> 黏贴到微信公众号后台，基本可以保证两边显示效果相同。这一点不仅使公众号推送可以有更自由、美观的样式，也让编辑、排版更轻松了。（由于微信自带浏览器的一些特性，可能有少部分 CSS style 不能生效，建议多多校对。）</p>\n<p><img src=\"https://cdn.sspai.com/2019/05/24/3d818c18934632b043fcf4ad9be1d046.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1\" alt=\"img\">公众号</p>\n<p>具体如何用 Typora 完成公众号写作，你可以在 <a href=\"https://sspai.com/post/40524\">这篇文章</a> 中进一步了解。</p>\n<h3 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h3><p>为了让文档更美观，我们可以为其加上 CSS style。我认为 Typora 对 CSS 的支持让它成为一众桌面笔记应用中最与众不同的一个。在 Typora 中 CSS 被称为「主题」，但其本质仍是 CSS 文件。你可以在 <code>文件 - 偏好设置 - 主题 - 打开主题文件夹</code> 看到这些 CSS 文件。</p>\n<p><img src=\"https://cdn.sspai.com/2019/05/24/7d3cfbc92721733e16ed63d72a48a572.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1\" alt=\"img\">主题</p>\n<p><img src=\"https://cdn.sspai.com/2019/05/24/98a04c4f9129e0f018d15bc790b376c2.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1\" alt=\"img\">主题文件夹</p>\n<p>选择不同的主题可以使文档拥有不同的外观，但不会影响内容。Typora 自带了若干主题，你也可以在 <a href=\"http://theme.typora.io/\">官网</a> 下载更多的主题。</p>\n<p><img src=\"https://cdn.sspai.com/2019/05/24/efcf65ba993c4bb0b058d6eb8258df6f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1\" alt=\"img\">主题商店</p>\n<p>除此以外，如果你有一定的 Web 编程基础，你当然也可以自己修改、新建适合你使用需求的 CSS 文件。我自己就写了一份名为 WeChat 的 CSS 文件，来符合我公众号特定的排版需求，例如正文是 15px，页边距是 8，小标题是 18px 等等。</p>\n<p><img src=\"https://cdn.sspai.com/2019/05/24/317ac1df25fcfc817c03f92d6086764e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1\" alt=\"img\">CSS 文件</p>\n<p>使用 Typora 的「主题」功能写公众号的一个好处是，只需要每次都套用同样的主题，我们就可以在保证每次排版规范都相同的同时，节省许多重复的工作。</p>\n<h3 id=\"YAML-front-matter\"><a href=\"#YAML-front-matter\" class=\"headerlink\" title=\"YAML front-matter\"></a>YAML front-matter</h3><p>Typora 支持在文档头部加上基于 YAML 的 front-matter 信息，这一特性适用于把 Markdown 文档分类归档上传到用 Hexo 框架搭建的博客中。</p>\n<h2 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h2><p>如果你看过 Typora 的 <a href=\"https://typora.io/dev_release.html\">更新日志</a> 你会发现它早在 2015 年 12 月 19 日就发布了 0.7.0 (alpha) 版本，但到目前为止它仍处于 beta 阶段。<em>截止到笔者写作这篇文章的初稿时，Typora 的版本号为 0.9.9.24.6 (beta)。</em></p>\n<p>我想，能够潜心三年多打磨、测试一个产品，开发者们一定是倾注了极大的心血到这款笔记应用中。而在使用中，我也能体会到开发者的良苦用心。他们不想做知识的储备中心，不想做快速的草稿、笔记应用，也不想做任何和生产力无关的功能和特性。对于 Typora 的设计和构想，只有唯一的宗旨——<strong>「生产效率」</strong>。</p>\n<p>因为移动端生产效率低，所以只有桌面端应用。因为左顾右盼的两栏式预览影响思路，所以他们甚至去掉了 Markdown 语法标记，只留下最终呈现的样式。因为 Markdown 是为了 HTML 呈现而设计的，所以他们提供了从入门到高级的一系列 Web 辅助功能…… 这一切都只是为了纯粹的<strong>生产效率</strong>。如果我们回头想想，Markdown 语言本身，当初不也是为了高效地生成简单网页而诞生的吗？</p>\n<p>最后，让我们一起期待这款<strong>顶级桌面文本生产力工具</strong>的正式版的到来吧！😆</p>\n<h1 id=\"快捷键操作\"><a href=\"#快捷键操作\" class=\"headerlink\" title=\"快捷键操作\"></a>快捷键操作</h1><table>\n<thead>\n<tr>\n<th>快捷键</th>\n<th>作用</th>\n<th>快捷键</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Ctrl + 1</td>\n<td>一级 标题</td>\n<td>Ctrl + B</td>\n<td>字体加粗</td>\n</tr>\n<tr>\n<td>Ctrl + 2</td>\n<td>二级标题</td>\n<td>Ctrl + I</td>\n<td>字体倾斜</td>\n</tr>\n<tr>\n<td>Ctrl + 3</td>\n<td>三级标题</td>\n<td>Ctrl + U</td>\n<td>下划线</td>\n</tr>\n<tr>\n<td>Ctrl + 4</td>\n<td>四级标题</td>\n<td>Ctrl + Home</td>\n<td>返回顶部</td>\n</tr>\n<tr>\n<td>Ctrl + 5</td>\n<td>五级标题</td>\n<td>Ctrl + End</td>\n<td>返回底部</td>\n</tr>\n<tr>\n<td>Ctrl + 6</td>\n<td>六级标题</td>\n<td>Ctrl + T</td>\n<td>创建表格</td>\n</tr>\n<tr>\n<td>Ctrl + L</td>\n<td>选中一行</td>\n<td>Ctrl + K</td>\n<td>创造超链接</td>\n</tr>\n<tr>\n<td>Ctrl + D</td>\n<td>选择一个单词</td>\n<td>Ctrl + F</td>\n<td>搜索</td>\n</tr>\n<tr>\n<td>Ctrl + E</td>\n<td>选中相同格式的文字</td>\n<td>Ctrl + H</td>\n<td>搜索并替换</td>\n</tr>\n<tr>\n<td>Alt + Shift + 5</td>\n<td>删除线</td>\n<td>Ctrl + Shift + I</td>\n<td>插入图片</td>\n</tr>\n</tbody></table>\n<h1 id=\"高级进阶\"><a href=\"#高级进阶\" class=\"headerlink\" title=\"高级进阶\"></a>高级进阶</h1><h2 id=\"优化标题排版（带序号）\"><a href=\"#优化标题排版（带序号）\" class=\"headerlink\" title=\"优化标题排版（带序号）\"></a>优化标题排版（带序号）</h2><blockquote>\n<p><code>俗话说：“授之以鱼，不如授之以渔”。</code>在讲如何添加自动编号功能之前，我要先讲一下如何修改的，不能不明所以。</p>\n</blockquote>\n<p>Typora的底层是一个浏览器，或者说是一个Electron应用。不信，你可以按下快捷键<code>Shift + F12</code>，或者点击<code>视图</code>中的<code>打开开发者工具</code>按钮：<br><img src=\"https://img-blog.csdnimg.cn/20190225023640443.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMzMTU5MDU5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>就可以看到熟悉的浏览器控制台调试界面了：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190225023703930.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMzMTU5MDU5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>既然知道Typora的实现基于浏览器，那么就好办了。各个界面肯定都是HTML语言渲染出来的，那么，我们就可以通过添加CSS样式表，来添加自动编号的功能。好在Typora官方提前想到了这个事，专门出了篇官方文章来告诉我们怎么去添加自定义的样式文件。</p>\n<p>知道了怎么添加自定义样式文件，还得知道怎么去定制样式表。语言吗，肯定是CSS。剩下的就差定位编辑区、导航窗格区和目录树区对应的元素了。最简洁的方法，就是使用元素选择键去定位，下图中的红色按钮就是：</p>\n<p>三个区域的元素定位如下：</p>\n<blockquote>\n<ol>\n<li>正文标题： #write</li>\n<li>[TOC]目录树区: .md-toc-content</li>\n<li>侧边栏的目录大纲区: .sidebar-content<br>到此，前菜都已准备好。</li>\n</ol>\n</blockquote>\n<p>自动编号功能<br><strong>那么，开始准备主菜。</strong></p>\n<p>编写css样式文件，命名为：<code>base.user.css</code>。要完成自动编号功能，必须借助CSS3中的如下特性：</p>\n<blockquote>\n<p>计数器：counter(基准计数器)，用于计算基准计数器的值<br>计数器增量：counter-increment，设置每次增长的量<br>重置计数器：counter-reset，用于将当前标题的计数器重置到指定的基准计数器<br>子代类型选择器：nth-of-type，可以从子代中选择出同一类型元素中的指定元素</p>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-selector-class\">.sidebar-content</span> &#123;<br>    <span class=\"hljs-attribute\">counter-reset</span>: h1<br>&#125;<br> <br><span class=\"hljs-selector-class\">.outline-h1</span> &#123;<br>    <span class=\"hljs-attribute\">counter-reset</span>: h2<br>&#125;<br> <br><span class=\"hljs-selector-class\">.outline-h2</span> &#123;<br>    <span class=\"hljs-attribute\">counter-reset</span>: h3<br>&#125;<br> <br><span class=\"hljs-selector-class\">.outline-h3</span> &#123;<br>    <span class=\"hljs-attribute\">counter-reset</span>: h4<br>&#125;<br> <br><span class=\"hljs-selector-class\">.outline-h4</span> &#123;<br>    <span class=\"hljs-attribute\">counter-reset</span>: h5<br>&#125;<br> <br><span class=\"hljs-selector-class\">.outline-h5</span> &#123;<br>    <span class=\"hljs-attribute\">counter-reset</span>: h6<br>&#125;<br> <br><span class=\"hljs-selector-class\">.outline-h1</span>&gt;<span class=\"hljs-selector-class\">.outline-item</span>&gt;<span class=\"hljs-selector-class\">.outline-label</span><span class=\"hljs-selector-pseudo\">:before</span> &#123;<br>    <span class=\"hljs-attribute\">counter-increment</span>: h1;<br>    <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-built_in\">counter</span>(h1) <span class=\"hljs-string\">&quot; &quot;</span><br>&#125;<br> <br><span class=\"hljs-selector-class\">.outline-h2</span>&gt;<span class=\"hljs-selector-class\">.outline-item</span>&gt;<span class=\"hljs-selector-class\">.outline-label</span><span class=\"hljs-selector-pseudo\">:before</span> &#123;<br>    <span class=\"hljs-attribute\">counter-increment</span>: h2;<br>    <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-built_in\">counter</span>(h1) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h2) <span class=\"hljs-string\">&quot; &quot;</span><br>&#125;<br> <br><span class=\"hljs-selector-class\">.outline-h3</span>&gt;<span class=\"hljs-selector-class\">.outline-item</span>&gt;<span class=\"hljs-selector-class\">.outline-label</span><span class=\"hljs-selector-pseudo\">:before</span> &#123;<br>    <span class=\"hljs-attribute\">counter-increment</span>: h3;<br>    <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-built_in\">counter</span>(h1) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h2) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h3) <span class=\"hljs-string\">&quot; &quot;</span><br>&#125;<br> <br><span class=\"hljs-selector-class\">.outline-h4</span>&gt;<span class=\"hljs-selector-class\">.outline-item</span>&gt;<span class=\"hljs-selector-class\">.outline-label</span><span class=\"hljs-selector-pseudo\">:before</span> &#123;<br>    <span class=\"hljs-attribute\">counter-increment</span>: h4;<br>    <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-built_in\">counter</span>(h1) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h2) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h3) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h4) <span class=\"hljs-string\">&quot; &quot;</span><br>&#125;<br> <br><span class=\"hljs-selector-class\">.outline-h5</span>&gt;<span class=\"hljs-selector-class\">.outline-item</span>&gt;<span class=\"hljs-selector-class\">.outline-label</span><span class=\"hljs-selector-pseudo\">:before</span> &#123;<br>    <span class=\"hljs-attribute\">counter-increment</span>: h5;<br>    <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-built_in\">counter</span>(h1) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h2) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h3) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h4) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h5) <span class=\"hljs-string\">&quot; &quot;</span><br>&#125;<br> <br><span class=\"hljs-selector-class\">.outline-h6</span>&gt;<span class=\"hljs-selector-class\">.outline-item</span>&gt;<span class=\"hljs-selector-class\">.outline-label</span><span class=\"hljs-selector-pseudo\">:before</span> &#123;<br>    <span class=\"hljs-attribute\">counter-increment</span>: h6;<br>    <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-built_in\">counter</span>(h1) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h2) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h3) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h4) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h5) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h6) <span class=\"hljs-string\">&quot; &quot;</span><br>&#125;<br><br><br><span class=\"hljs-comment\">/** initialize css counter */</span><br><span class=\"hljs-selector-id\">#write</span> &#123;<br><span class=\"hljs-attribute\">counter-reset</span>: h1<br>&#125;<br><span class=\"hljs-selector-tag\">h1</span> &#123;<br><span class=\"hljs-attribute\">counter-reset</span>: h2<br>&#125;<br><span class=\"hljs-selector-tag\">h2</span> &#123;<br><span class=\"hljs-attribute\">counter-reset</span>: h3<br>&#125;<br><span class=\"hljs-selector-tag\">h3</span> &#123;<br><span class=\"hljs-attribute\">counter-reset</span>: h4<br>&#125;<br><span class=\"hljs-selector-tag\">h4</span> &#123;<br><span class=\"hljs-attribute\">counter-reset</span>: h5<br>&#125;<br><span class=\"hljs-selector-tag\">h5</span> &#123;<br><span class=\"hljs-attribute\">counter-reset</span>: h6<br>&#125;<br><span class=\"hljs-comment\">/** put counter result into headings */</span><br><span class=\"hljs-selector-id\">#write</span> <span class=\"hljs-selector-tag\">h1</span><span class=\"hljs-selector-pseudo\">:before</span> &#123;<br><span class=\"hljs-attribute\">counter-increment</span>: h1;<br><span class=\"hljs-attribute\">content</span>: <span class=\"hljs-built_in\">counter</span>(h1) <span class=\"hljs-string\">&quot; &quot;</span><br>&#125;<span class=\"hljs-selector-id\">#write</span> <span class=\"hljs-selector-tag\">h2</span><span class=\"hljs-selector-pseudo\">:before</span> &#123;<br><span class=\"hljs-attribute\">counter-increment</span>: h2;<br><span class=\"hljs-attribute\">content</span>: <span class=\"hljs-built_in\">counter</span>(h1) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h2) <span class=\"hljs-string\">&quot; &quot;</span><br>&#125;<br><span class=\"hljs-selector-id\">#write</span> <span class=\"hljs-selector-tag\">h3</span><span class=\"hljs-selector-pseudo\">:before</span>,<br><span class=\"hljs-selector-tag\">h3</span><span class=\"hljs-selector-class\">.md-focus</span><span class=\"hljs-selector-class\">.md-heading</span><span class=\"hljs-selector-pseudo\">:before</span> <span class=\"hljs-comment\">/** override the default style for focused headings */</span> &#123;<br><span class=\"hljs-attribute\">counter-increment</span>: h3;<br><span class=\"hljs-attribute\">content</span>: <span class=\"hljs-built_in\">counter</span>(h1) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h2) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h3) <span class=\"hljs-string\">&quot; &quot;</span><br>&#125;<br><span class=\"hljs-selector-id\">#write</span> <span class=\"hljs-selector-tag\">h4</span><span class=\"hljs-selector-pseudo\">:before</span>,<br><span class=\"hljs-selector-tag\">h4</span><span class=\"hljs-selector-class\">.md-focus</span><span class=\"hljs-selector-class\">.md-heading</span><span class=\"hljs-selector-pseudo\">:before</span> &#123;<br><span class=\"hljs-attribute\">counter-increment</span>: h4;<br><span class=\"hljs-attribute\">content</span>: <span class=\"hljs-built_in\">counter</span>(h1) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h2) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h3) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h4) <span class=\"hljs-string\">&quot; &quot;</span><br>&#125;<br><span class=\"hljs-selector-id\">#write</span> <span class=\"hljs-selector-tag\">h5</span><span class=\"hljs-selector-pseudo\">:before</span>,<br><span class=\"hljs-selector-tag\">h5</span><span class=\"hljs-selector-class\">.md-focus</span><span class=\"hljs-selector-class\">.md-heading</span><span class=\"hljs-selector-pseudo\">:before</span> &#123;<br><span class=\"hljs-attribute\">counter-increment</span>: h5;<br><span class=\"hljs-attribute\">content</span>: <span class=\"hljs-built_in\">counter</span>(h1) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h2) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h3) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h4) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h5) <span class=\"hljs-string\">&quot; &quot;</span><br>&#125;<br><span class=\"hljs-selector-id\">#write</span> <span class=\"hljs-selector-tag\">h6</span><span class=\"hljs-selector-pseudo\">:before</span>,<br><span class=\"hljs-selector-tag\">h6</span><span class=\"hljs-selector-class\">.md-focus</span><span class=\"hljs-selector-class\">.md-heading</span><span class=\"hljs-selector-pseudo\">:before</span> &#123;<br><span class=\"hljs-attribute\">counter-increment</span>: h6;<br><span class=\"hljs-attribute\">content</span>: <span class=\"hljs-built_in\">counter</span>(h1) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h2) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h3) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h4) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h5) <span class=\"hljs-string\">&quot;.&quot;</span> <span class=\"hljs-built_in\">counter</span>(h6) <span class=\"hljs-string\">&quot; &quot;</span><br>&#125;<br><span class=\"hljs-comment\">/** override the default style for focused headings */</span><br><span class=\"hljs-selector-id\">#write</span>&gt;<span class=\"hljs-selector-tag\">h3</span><span class=\"hljs-selector-class\">.md-focus</span><span class=\"hljs-selector-pseudo\">:before</span>,<br><span class=\"hljs-selector-id\">#write</span>&gt;<span class=\"hljs-selector-tag\">h4</span><span class=\"hljs-selector-class\">.md-focus</span><span class=\"hljs-selector-pseudo\">:before</span>,<br><span class=\"hljs-selector-id\">#write</span>&gt;<span class=\"hljs-selector-tag\">h5</span><span class=\"hljs-selector-class\">.md-focus</span><span class=\"hljs-selector-pseudo\">:before</span>,<br><span class=\"hljs-selector-id\">#write</span>&gt;<span class=\"hljs-selector-tag\">h6</span><span class=\"hljs-selector-class\">.md-focus</span><span class=\"hljs-selector-pseudo\">:before</span>,<br><span class=\"hljs-selector-tag\">h3</span><span class=\"hljs-selector-class\">.md-focus</span><span class=\"hljs-selector-pseudo\">:before</span>,<br><span class=\"hljs-selector-tag\">h4</span><span class=\"hljs-selector-class\">.md-focus</span><span class=\"hljs-selector-pseudo\">:before</span>,<br><span class=\"hljs-selector-tag\">h5</span><span class=\"hljs-selector-class\">.md-focus</span><span class=\"hljs-selector-pseudo\">:before</span>,<br><span class=\"hljs-selector-tag\">h6</span><span class=\"hljs-selector-class\">.md-focus</span><span class=\"hljs-selector-pseudo\">:before</span> &#123;<br><span class=\"hljs-attribute\">color</span>: inherit;<br><span class=\"hljs-attribute\">border</span>: inherit;<br><span class=\"hljs-attribute\">border-radius</span>: inherit;<br><span class=\"hljs-attribute\">position</span>: inherit;<br><span class=\"hljs-attribute\">left</span>:initial;<br><span class=\"hljs-attribute\">float</span>: none;<br><span class=\"hljs-attribute\">top</span>:initial;<br><span class=\"hljs-attribute\">font-size</span>: inherit;<br><span class=\"hljs-attribute\">padding-left</span>: inherit;<br><span class=\"hljs-attribute\">padding-right</span>: inherit;<br><span class=\"hljs-attribute\">vertical-align</span>: inherit;<br><span class=\"hljs-attribute\">font-weight</span>: inherit;<br><span class=\"hljs-attribute\">line-height</span>: inherit;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Typora侧边栏的大纲视图折叠-win系统\"><a href=\"#Typora侧边栏的大纲视图折叠-win系统\" class=\"headerlink\" title=\"Typora侧边栏的大纲视图折叠( win系统 )\"></a>Typora侧边栏的大纲视图折叠( win系统 )</h2><h3 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h3><p><img src=\"https://img-blog.csdnimg.cn/20181226094905721.gif\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h3><p><code>文件 ⇒ 偏好设置 ⇒ 勾选&quot;侧边栏&quot;</code><br><img src=\"https://img-blog.csdnimg.cn/20181226093929134.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20181226093934973.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20181226101055865.gif\" alt=\"在这里插入图片描述\"></p>\n",
            "tags": [
                "工具",
                "Typora"
            ]
        }
    ]
}