{
    "version": "https://jsonfeed.org/version/1",
    "title": "Will • All posts by \"枚举\" tag",
    "description": "愿你一生努力，一生被爱",
    "home_page_url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io",
    "items": [
        {
            "id": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/JAVA%E7%89%B9%E6%80%A7/JAVA_%E6%B5%85%E6%9E%90%E6%9E%9A%E4%B8%BE/",
            "url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/JAVA/JAVA%E7%89%B9%E6%80%A7/JAVA_%E6%B5%85%E6%9E%90%E6%9E%9A%E4%B8%BE/",
            "title": "JAVA_浅析枚举",
            "date_published": "2024-01-03T13:13:21.642Z",
            "content_html": "<h1 id=\"1-简介\"><a href=\"#1-简介\" class=\"headerlink\" title=\"1.简介\"></a>1.简介</h1><p>&#x3D;&#x3D;<font color=\"red\">Enum 一般用来表示<strong>一组相同类型的常量</strong></font>&#x3D;&#x3D;。如：性别、日期、月份、颜色等。对这些属性用常量的好处是显而易见的，不仅可以保证单例，且在比较的时候可以用 ”&#x3D;&#x3D;” 来替换 equals。在 JDK1.5 之前是没有 Enum 这个类型的，那时候一般用接口常量来替代。</p>\n<h1 id=\"2-Enum究竟是啥\"><a href=\"#2-Enum究竟是啥\" class=\"headerlink\" title=\"2.Enum究竟是啥\"></a>2.Enum究竟是啥</h1><p>你是否被问到过以下的问题：</p>\n<ul>\n<li>枚举允许继承类吗？</li>\n<li>枚举允许实现接口吗？</li>\n<li>枚举可以用等号比较吗？</li>\n<li>可以继承枚举吗？</li>\n<li>枚举是单例吗？</li>\n<li>当使用compareTo()比较枚举时，比较的是什么？</li>\n<li>当使用equals()比较枚举的时候，比较的是什么？</li>\n</ul>\n<p>面试官的问题五花八门，但归根结底都是在考察同一个问题：枚举的本质。</p>\n<p>那么枚举究竟是啥?</p>\n<p>废话不说,先看源代码:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Enum</span>&lt;E <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">Enum</span>&lt;E&gt;&gt;<br>        <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">Comparable</span>&lt;E&gt;, Serializable &#123;<br>\t\t<span class=\"hljs-comment\">//*******        </span><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>从源代码可以看出Enum的本质是一个抽象类,所以上述问题基本上都迎刃而解了.</p>\n<h1 id=\"3-Enum的特性\"><a href=\"#3-Enum的特性\" class=\"headerlink\" title=\"3.Enum的特性\"></a>3.Enum的特性</h1><ul>\n<li>Enum常量隐式的加上了static和final，一旦被创建就无法修改</li>\n<li>Enum提供了是类型安全的(type-safe)</li>\n<li>Enum隐式的加上了values()方法，返回一个数组包含所有的Enum常量</li>\n<li>两个Enum常量可以使用 <code>==</code>或<code>equals()</code>方法比较</li>\n<li>Enum可以用在switch语句中，就像int，String。</li>\n<li>Enum有自己的名称空间</li>\n<li>Enum可以实现Java接口</li>\n<li>可以在Enum中定义构造器</li>\n</ul>\n<h1 id=\"4-Enum的注意事项\"><a href=\"#4-Enum的注意事项\" class=\"headerlink\" title=\"4.Enum的注意事项\"></a>4.Enum的注意事项</h1><h3 id=\"Enum的用法\"><a href=\"#Enum的用法\" class=\"headerlink\" title=\"Enum的用法\"></a>Enum的用法</h3><p>1 . Enum的声明，Enum可以声明在一个类之外或者在类内部，但是不能在方法中。</p>\n<h3 id=\"Enum的用法-1\"><a href=\"#Enum的用法-1\" class=\"headerlink\" title=\"Enum的用法\"></a>Enum的用法</h3><ol>\n<li>Enum的声明，Enum可以声明在一个类之外或者在类内部，但是不能在方法中。</li>\n<li>&#x3D;&#x3D;<strong>&lt;font color&#x3D;&quot;red&quot;&gt;<strong>​</strong>在创建Enum常量的时候可以指定值，但是这个时候你需要定义一个成员变量构造器。构造器必须是private的，不然会报编译错误.<strong>​</strong>&lt;&#x2F;font&gt;</strong>&#x3D;&#x3D;</li>\n</ol>\n<h1 id=\"5-EumDemo\"><a href=\"#5-EumDemo\" class=\"headerlink\" title=\"5.EumDemo\"></a>5.EumDemo</h1><p>1)创建一个水果相关的枚举</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">enum</span> <span class=\"hljs-title class_\">Fruit</span> &#123;  <br>    APPLE, PEAR, PEACH, ORANGE;  <br>&#125; <br></code></pre></td></tr></table></figure>\n\n<p>再看看Fruit反编译的结果:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> test;  <br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Fruit</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">Enum</span> &#123;  <br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-title function_\">Fruit</span><span class=\"hljs-params\">(String s, <span class=\"hljs-type\">int</span> i)</span> &#123;  <br>        <span class=\"hljs-built_in\">super</span>(s, i);  <br>    &#125;  <br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> Fruit[] values() &#123;  <br>        Fruit afruit[];  <br>        <span class=\"hljs-type\">int</span> i;  <br>        Fruit afruit1[];  <br>        System.arraycopy(afruit = ENUM$VALUES, <span class=\"hljs-number\">0</span>, afruit1 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Fruit</span>[i = afruit.length], <span class=\"hljs-number\">0</span>, i);  <br>        <span class=\"hljs-keyword\">return</span> afruit1;  <br>    &#125;  <br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> Fruit <span class=\"hljs-title function_\">valueOf</span><span class=\"hljs-params\">(String s)</span> &#123;  <br>        <span class=\"hljs-keyword\">return</span> (Fruit)Enum.valueOf(test/Fruit, s);  <br>    &#125;  <br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> Fruit APPLE;  <br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> Fruit PEAR;  <br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> Fruit PEACH;  <br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> Fruit ORANGE;  <br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> Fruit ENUM$VALUES[];  <br>    <span class=\"hljs-keyword\">static</span> &#123;  <br>        APPLE = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Fruit</span>(<span class=\"hljs-string\">&quot;APPLE&quot;</span>, <span class=\"hljs-number\">0</span>);  <br>        PEAR = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Fruit</span>(<span class=\"hljs-string\">&quot;PEAR&quot;</span>, <span class=\"hljs-number\">1</span>);  <br>        PEACH = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Fruit</span>(<span class=\"hljs-string\">&quot;PEACH&quot;</span>, <span class=\"hljs-number\">2</span>);  <br>        ORANGE = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Fruit</span>(<span class=\"hljs-string\">&quot;ORANGE&quot;</span>, <span class=\"hljs-number\">3</span>);  <br>        ENUM$VALUES = (<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Fruit</span>[] &#123;  <br>            APPLE, PEAR, PEACH, ORANGE  <br>        &#125;);  <br>    &#125;  <br>&#125;  <br></code></pre></td></tr></table></figure>\n\n<p>注意这几行：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> Fruit APPLE;  <br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> Fruit PEAR;  <br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> Fruit PEACH;  <br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> Fruit ORANGE;  <br></code></pre></td></tr></table></figure>\n\n<p>可以看到我们定义的几个成员变量,JVM底层把它转换成Eunm类型.</p>\n<p>我们还是再写点代码看看:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">enum</span> <span class=\"hljs-title class_\">Fruit</span> &#123;  <br>    APPLE &#123;   <br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">test</span><span class=\"hljs-params\">()</span> &#123;  <br>            System.out.println(<span class=\"hljs-string\">&quot;I am an apple.&quot;</span>);  <br>        &#125;  <br>    &#125;,  <br>    PEAR &#123;   <br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">test</span><span class=\"hljs-params\">()</span> &#123;  <br>            System.out.println(<span class=\"hljs-string\">&quot;I am a pear.&quot;</span>);  <br>        &#125;  <br>    &#125;,  <br>    PEACH &#123;   <br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">test</span><span class=\"hljs-params\">()</span> &#123;  <br>            System.out.println(<span class=\"hljs-string\">&quot;I am a peach.&quot;</span>);  <br>        &#125;  <br>    &#125;,  <br>    ORANGE;  <br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">test</span><span class=\"hljs-params\">()</span> &#123;  <br>        System.out.println(<span class=\"hljs-string\">&quot;I am a fruit.&quot;</span>);  <br>    &#125;  <br>&#125;  <br></code></pre></td></tr></table></figure>\n\n<p>其中，只有Orange没有Overide test()方法；</p>\n<p>在main方法里面调用:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> &#123;  <br>        Fruit.APPLE.test();  <br>        Fruit.PEAR.test();  <br>        Fruit.PEACH.test();  <br>        Fruit.ORANGE.test();  <br>&#125;  <br></code></pre></td></tr></table></figure>\n\n<p>输出结果:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-selector-tag\">I</span> am an apple. <br><span class=\"hljs-selector-tag\">I</span> am <span class=\"hljs-selector-tag\">a</span> pear. <br><span class=\"hljs-selector-tag\">I</span> am <span class=\"hljs-selector-tag\">a</span> peach. <br><span class=\"hljs-selector-tag\">I</span> am <span class=\"hljs-selector-tag\">a</span> fruit.<br></code></pre></td></tr></table></figure>\n\n<p>可以看到，重新定义了test方法的APPLE,PEAR,PEACH覆盖了从父类继承过来的默认行为，而未从新定义test方法的ORANGE却沿袭了父类的行为，多态性在这里展现出来了。</p>\n<p>再看看反编译后的文件:</p>\n<p><img src=\"https://img-blog.csdn.net/20160413220702331\"></p>\n<p>发现多了几个内部类的字节码文件,看看反编译后的代码:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">// Decompiled by Jad v1.5.8e. Copyright 2001 Pavel Kouznetsov.  </span><br><span class=\"hljs-comment\">// Jad home page: http://www.geocities.com/kpdus/jad.html  </span><br><span class=\"hljs-comment\">// Decompiler options: packimports(3)   </span><br><span class=\"hljs-comment\">// Source File Name:   Fruit.java  </span><br><span class=\"hljs-keyword\">package</span> test;  <br><span class=\"hljs-keyword\">import</span> java.io.PrintStream;  <br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Fruit</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">Enum</span> &#123;  <br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-title function_\">Fruit</span><span class=\"hljs-params\">(String s, <span class=\"hljs-type\">int</span> i)</span> &#123;  <br>        <span class=\"hljs-built_in\">super</span>(s, i);  <br>    &#125;  <br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">test</span><span class=\"hljs-params\">()</span> &#123;  <br>        System.out.println(<span class=\"hljs-string\">&quot;I am a fruit.&quot;</span>);  <br>    &#125;  <br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> Fruit[] values() &#123;  <br>        Fruit afruit[];  <br>        <span class=\"hljs-type\">int</span> i;  <br>        Fruit afruit1[];  <br>        System.arraycopy(afruit = ENUM$VALUES, <span class=\"hljs-number\">0</span>, afruit1 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Fruit</span>[i = afruit.length], <span class=\"hljs-number\">0</span>, i);  <br>        <span class=\"hljs-keyword\">return</span> afruit1;  <br>    &#125;  <br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> Fruit <span class=\"hljs-title function_\">valueOf</span><span class=\"hljs-params\">(String s)</span> &#123;  <br>        <span class=\"hljs-keyword\">return</span> (Fruit)Enum.valueOf(test/Fruit, s);  <br>    &#125;  <br>    Fruit(String s, <span class=\"hljs-type\">int</span> i, Fruit fruit) &#123;  <br>        <span class=\"hljs-built_in\">this</span>(s, i);  <br>    &#125;  <br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> Fruit APPLE;  <br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> Fruit PEAR;  <br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> Fruit PEACH;  <br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> Fruit ORANGE;  <br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> Fruit ENUM$VALUES[];  <br><br>    <span class=\"hljs-keyword\">static</span> &#123;  <br>        APPLE = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Fruit</span>(<span class=\"hljs-string\">&quot;APPLE&quot;</span>, <span class=\"hljs-number\">0</span>) &#123;  <br>            <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">test</span><span class=\"hljs-params\">()</span>  <br>            &#123;  <br>                System.out.println(<span class=\"hljs-string\">&quot;I am an apple.&quot;</span>);  <br>            &#125;  <br>        &#125;;  <br>        PEAR = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Fruit</span>(<span class=\"hljs-string\">&quot;PEAR&quot;</span>, <span class=\"hljs-number\">1</span>) &#123;  <br><br>            <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">test</span><span class=\"hljs-params\">()</span>  <br>            &#123;  <br>                System.out.println(<span class=\"hljs-string\">&quot;I am a pear.&quot;</span>);  <br>            &#125;  <br>        &#125;;  <br>        PEACH = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Fruit</span>(<span class=\"hljs-string\">&quot;PEACH&quot;</span>, <span class=\"hljs-number\">2</span>) &#123;  <br><br>            <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">test</span><span class=\"hljs-params\">()</span>  <br>            &#123;  <br>                System.out.println(<span class=\"hljs-string\">&quot;I am a peach.&quot;</span>);  <br>            &#125;  <br>        &#125;;  <br>        ORANGE = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Fruit</span>(<span class=\"hljs-string\">&quot;ORANGE&quot;</span>, <span class=\"hljs-number\">3</span>);  <br>        ENUM$VALUES = (<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Fruit</span>[] &#123;  <br>            APPLE, PEAR, PEACH, ORANGE  <br>        &#125;);  <br>    &#125;  <br>&#125;  <br></code></pre></td></tr></table></figure>\n\n<p>注意这段代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">static</span>   <br>    &#123;  <br>        APPLE = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Fruit</span>(<span class=\"hljs-string\">&quot;APPLE&quot;</span>, <span class=\"hljs-number\">0</span>) &#123;  <br>            <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">test</span><span class=\"hljs-params\">()</span>  <br>            &#123;  <br>                System.out.println(<span class=\"hljs-string\">&quot;I am an apple.&quot;</span>);  <br>            &#125;  <br>        &#125;;  <br>        PEAR = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Fruit</span>(<span class=\"hljs-string\">&quot;PEAR&quot;</span>, <span class=\"hljs-number\">1</span>) &#123;  <br>            <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">test</span><span class=\"hljs-params\">()</span>  <br>            &#123;  <br>                System.out.println(<span class=\"hljs-string\">&quot;I am a pear.&quot;</span>);  <br>            &#125;  <br>        &#125;;  <br>        PEACH = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Fruit</span>(<span class=\"hljs-string\">&quot;PEACH&quot;</span>, <span class=\"hljs-number\">2</span>) &#123;  <br>            <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">test</span><span class=\"hljs-params\">()</span>  <br>            &#123;  <br>                System.out.println(<span class=\"hljs-string\">&quot;I am a peach.&quot;</span>);  <br>            &#125;  <br>        &#125;;  <br>        ORANGE = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Fruit</span>(<span class=\"hljs-string\">&quot;ORANGE&quot;</span>, <span class=\"hljs-number\">3</span>);  <br></code></pre></td></tr></table></figure>\n\n<p>　这个时候的APPLE，PEAR，PEACH已经以匿名内部类的方式对Fruit进行了Overide，自然体现出了多态，多出的那三个疑似内部类的class文件也就是它们！而ORANGE，没有重写test方法，仍然以一个Fruit实例的形式出现。</p>\n<h1 id=\"6-反思-Enum多态体现的好处\"><a href=\"#6-反思-Enum多态体现的好处\" class=\"headerlink\" title=\"6.反思-Enum多态体现的好处\"></a>6.反思-Enum多态体现的好处</h1><p>其实通过上面我们可以通过Enum(枚举类)实现单例工厂模式,这样就能省去多余的判断步骤和不必要的父类和其他的相关类,大大提高我们的代码效率.</p>\n<h2 id=\"lt-font-color-x3D-quot-red-quot-gt-​练习小Demo​-lt-x2F-font-gt\"><a href=\"#lt-font-color-x3D-quot-red-quot-gt-​练习小Demo​-lt-x2F-font-gt\" class=\"headerlink\" title=\"&lt;font color&#x3D;&quot;red&quot;&gt;​练习小Demo​**&lt;&#x2F;font&gt;**\"></a><strong>&lt;font color&#x3D;&quot;red&quot;&gt;<strong>​</strong>练习小Demo</strong>​**&lt;&#x2F;font&gt;**</h2><p><strong>1.创建Dog和Persion类</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com._521it.Enum.Model;<br><br><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Auther</span>: yangxiangnan</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span>: 2019/7/17 14:47</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span>:</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Dog</span> &#123;<br><br>    <span class=\"hljs-keyword\">private</span> String name;<br>    <span class=\"hljs-keyword\">private</span> String age;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">Dog</span><span class=\"hljs-params\">()</span> &#123;<br>        System.out.println(<span class=\"hljs-string\">&quot;狗狗的无参数构造器&quot;</span>);<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">Dog</span><span class=\"hljs-params\">(String name, String age)</span> &#123;<br>        <span class=\"hljs-built_in\">this</span>.name = name;<br>        <span class=\"hljs-built_in\">this</span>.age = age;<br>        System.out.println(<span class=\"hljs-string\">&quot;狗狗的有参数构造器&quot;</span>);<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">bark</span><span class=\"hljs-params\">()</span>&#123;<br>        System.out.println(<span class=\"hljs-string\">&quot;汪汪&quot;</span>);<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">getName</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> name;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">setName</span><span class=\"hljs-params\">(String name)</span> &#123;<br>        <span class=\"hljs-built_in\">this</span>.name = name;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">getAge</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> age;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">setAge</span><span class=\"hljs-params\">(String age)</span> &#123;<br>        <span class=\"hljs-built_in\">this</span>.age = age;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com._521it.Enum.Model;<br><br><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Auther</span>: yangxiangnan</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span>: 2019/7/17 14:51</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span>:</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Persion</span> &#123;<br>    <span class=\"hljs-keyword\">private</span> String name;<br>    <span class=\"hljs-keyword\">private</span> String age;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">Persion</span><span class=\"hljs-params\">()</span> &#123;<br>        System.out.println(<span class=\"hljs-string\">&quot;人的无参数构造器&quot;</span>);<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">Persion</span><span class=\"hljs-params\">(String name, String age)</span> &#123;<br>        <span class=\"hljs-built_in\">this</span>.name = name;<br>        <span class=\"hljs-built_in\">this</span>.age = age;<br>        System.out.println(<span class=\"hljs-string\">&quot;人的有参数构造器&quot;</span>);<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">speak</span><span class=\"hljs-params\">()</span>&#123;<br>        System.out.println(<span class=\"hljs-string\">&quot;说话&quot;</span>);<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">getName</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> name;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">setName</span><span class=\"hljs-params\">(String name)</span> &#123;<br>        <span class=\"hljs-built_in\">this</span>.name = name;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">getAge</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-keyword\">return</span> age;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">setAge</span><span class=\"hljs-params\">(String age)</span> &#123;<br>        <span class=\"hljs-built_in\">this</span>.age = age;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<p><strong>2.创建单例工厂类</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com._521it.Enum.Singletion;<br><br><span class=\"hljs-keyword\">import</span> com._521it.Enum.Model.Dog;<br><span class=\"hljs-keyword\">import</span> com._521it.Enum.Model.Persion;<br><br><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Auther</span>: yangxiangnan</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span>: 2019/7/17 14:52</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span>:</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">enum</span> <span class=\"hljs-title class_\">SingletonInstanceFactory</span> &#123;<br><br>    INSTANCE_FACTORY;<br><br>    <span class=\"hljs-keyword\">private</span> Persion persion;<br>    <span class=\"hljs-keyword\">private</span> Dog dog;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-title function_\">SingletonInstanceFactory</span><span class=\"hljs-params\">()</span>&#123;<br>        persion = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Persion</span>();<br>        dog = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Dog</span>();<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> Persion <span class=\"hljs-title function_\">getPersion</span><span class=\"hljs-params\">()</span>&#123;<br>        <span class=\"hljs-keyword\">return</span> persion;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> Dog <span class=\"hljs-title function_\">getDog</span><span class=\"hljs-params\">()</span>&#123;<br>        <span class=\"hljs-keyword\">return</span> dog;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<p><strong>3.进行测试</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com._521it.Enum;<br><br><span class=\"hljs-keyword\">import</span> com._521it.Enum.Model.Dog;<br><span class=\"hljs-keyword\">import</span> com._521it.Enum.Model.Persion;<br><span class=\"hljs-keyword\">import</span> com._521it.Enum.Singletion.SingletonInstanceFactory;<br><span class=\"hljs-keyword\">import</span> org.junit.Test;<br><br><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Auther</span>: yangxiangnan</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Date</span>: 2019/7/17 17:18</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@Description</span>:</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Demo</span> &#123;<br>    <span class=\"hljs-meta\">@Test</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">test01</span><span class=\"hljs-params\">()</span>&#123;<br>        <span class=\"hljs-type\">Dog</span> <span class=\"hljs-variable\">dog1</span> <span class=\"hljs-operator\">=</span> SingletonInstanceFactory.INSTANCE_FACTORY.getDog();<br>        <span class=\"hljs-type\">Dog</span> <span class=\"hljs-variable\">dog2</span> <span class=\"hljs-operator\">=</span> SingletonInstanceFactory.INSTANCE_FACTORY.getDog();<br>        System.out.println(<span class=\"hljs-string\">&quot;dog1 = &quot;</span> + dog1);<br>        System.out.println(<span class=\"hljs-string\">&quot;dog2 = &quot;</span> + dog2);<br>        dog1.bark();<br>        dog2.bark();<br>        System.out.println(dog1 == dog2);<br><br>        <span class=\"hljs-type\">Persion</span> <span class=\"hljs-variable\">persion1</span> <span class=\"hljs-operator\">=</span> SingletonInstanceFactory.INSTANCE_FACTORY.getPersion();<br>        <span class=\"hljs-type\">Persion</span> <span class=\"hljs-variable\">persion2</span> <span class=\"hljs-operator\">=</span> SingletonInstanceFactory.INSTANCE_FACTORY.getPersion();<br>        System.out.println(<span class=\"hljs-string\">&quot;persion1 = &quot;</span> + persion1);<br>        System.out.println(<span class=\"hljs-string\">&quot;persion2 = &quot;</span> + persion2);<br>        persion1.speak();<br>        persion2.speak();<br>        System.out.println(persion1 == persion2);<br>    &#125;<br><br><br><br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<p><strong>4.运行结果</strong></p>\n<p>结果如下:</p>\n<p><img src=\"https://raw.githubusercontent.com/yangxiangnanwill/uploadImages/master/img/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190717172845.png\"></p>\n",
            "tags": [
                "思考",
                "JAVA",
                "枚举"
            ]
        }
    ]
}