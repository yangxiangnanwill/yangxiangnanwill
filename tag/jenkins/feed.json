{
    "version": "https://jsonfeed.org/version/1",
    "title": "Will • All posts by \"jenkins\" tag",
    "description": "愿你一生努力，一生被爱",
    "home_page_url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io",
    "items": [
        {
            "id": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/Linux/Jenkins/",
            "url": "https://github.com/yangxiangnanwill/yangxiangnanwill.github.io/2024/01/03/%E5%A5%BD%E5%A5%BD%E7%A0%81%E4%BB%A3%E7%A0%81%E5%90%96/Linux/Jenkins/",
            "title": "Jenkins",
            "date_published": "2024-01-03T13:13:21.659Z",
            "content_html": "<blockquote>\n<p>持续集成：Continuous Integration，简称CI，意思是，在一个项目中，任何人对代码库的任何改动，都会触发CI服务器自动对项目进行构建，自动运行测试，甚至自动部署到测试环境。这样做的好处就是，随时发现问题，随时修复。因为修复问题的成本随着时间的推移而增长，越早发现，修复成本越低。</p>\n</blockquote>\n<h1 id=\"持续集成工具\"><a href=\"#持续集成工具\" class=\"headerlink\" title=\"持续集成工具\"></a>持续集成工具</h1><h2 id=\"Travis-CI\"><a href=\"#Travis-CI\" class=\"headerlink\" title=\"Travis CI\"></a>Travis CI</h2><p>在线托管的CI服务，用Travis来进行持续集成，不需要自己搭服务器，在网页上点几下就好，用起来更方便。最重要的是，它对开源项目是免费的。私有项目会收费。</p>\n<h2 id=\"Jenkins\"><a href=\"#Jenkins\" class=\"headerlink\" title=\"Jenkins\"></a>Jenkins</h2><p>Jenkins是一个用Java编写的开源的持续集成工具。官方网站：<a href=\"https://jenkins.io/\">https://jenkins.io/</a><br>Jenkins能实时监控持续集成过程中所存在的问题，提供详细的日志文件和提醒功能，还能用图表的形式，形象地展示项目构建的趋势和稳定性。</p>\n<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>Jenkins自动化部署可以解决集成、测试、部署等重复性的工作，工具集成的效率明显高于人工操作；并且持续集成可以更早的获取代码变更的信息，从而更早的进入测试阶段，更早的发现问题，这样解决问题的成本就会显著下降：持续集成缩短了从开发、集成、测试、部署各个环节的时间，从而也就缩短了中间出现的等待时间；持续集成也意味着开发、集成、测试、部署得以持续。。<br>使用Maven（Ant）等来实现lava项目自动化构建发布部署。这些工具可以帮助在构建过程中实现自动化发布、回滚等动作。</p>\n<blockquote>\n<p>Jenkins提供Docker、war等部署方式，博猪比较倾向于yum源安装方式，同时作为一个服务启动。</p>\n</blockquote>\n<h1 id=\"安装教程\"><a href=\"#安装教程\" class=\"headerlink\" title=\"安装教程\"></a>安装教程</h1><h2 id=\"系统要求\"><a href=\"#系统要求\" class=\"headerlink\" title=\"系统要求\"></a>系统要求</h2><p>最低推荐配置:</p>\n<ul>\n<li>256MB可用内存</li>\n<li>1GB可用磁盘空间(作为一个Docker容器运行jenkins的话推荐10GB)</li>\n</ul>\n<p>为小团队推荐的硬件配置:</p>\n<ul>\n<li>1GB+可用内存</li>\n<li>50 GB+ 可用磁盘空间</li>\n</ul>\n<p>软件配置:</p>\n<ul>\n<li>Java 8—无论是Java运行时环境（JRE）还是Java开发工具包（JDK）都可以。</li>\n</ul>\n<blockquote>\n<p><strong>注意:</strong> 如果将Jenkins作为Docker 容器运行，这不是必需的</p>\n</blockquote>\n<h2 id=\"下载Jenkins\"><a href=\"#下载Jenkins\" class=\"headerlink\" title=\"下载Jenkins\"></a>下载Jenkins</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">sudo wget -O /etc/yum.repos.d/jenkins.repo \\<br>    https://pkg.jenkins.io/redhat/jenkins.repo<br>sudo rpm --import https://pkg.jenkins.io/redhat/jenkins.io.key<br>sudo yum upgrade<br>sudo yum install epel-release java-11-openjdk-devel<br>sudo yum install jenkins<br>sudo systemctl daemon-reload<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"查看Jenkins状态\"><a href=\"#查看Jenkins状态\" class=\"headerlink\" title=\"查看Jenkins状态\"></a>查看Jenkins状态</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">sudo systemctl status jenkins<br></code></pre></td></tr></table></figure>\n\n<p>如果是开启状态，关闭，以便更改配置。关闭命令如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">sudo systemctl stop jenkins<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"自定义配置\"><a href=\"#自定义配置\" class=\"headerlink\" title=\"自定义配置\"></a>自定义配置</h2><blockquote>\n<p>配置路径如下：  &#x2F;etc&#x2F;sysconfig</p>\n</blockquote>\n<h3 id=\"自定义配置路径\"><a href=\"#自定义配置路径\" class=\"headerlink\" title=\"自定义配置路径\"></a>自定义配置路径</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">JENKINS_HOME=&quot;/opt/jenkins&quot;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"自定义默认用户\"><a href=\"#自定义默认用户\" class=\"headerlink\" title=\"自定义默认用户\"></a>自定义默认用户</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">JENKINS_USER=&quot;root&quot;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"自定义访问路径\"><a href=\"#自定义访问路径\" class=\"headerlink\" title=\"自定义访问路径\"></a>自定义访问路径</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">JENKINS_PORT=&quot;9955&quot;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"重启-amp-amp-启动Jenkins服务\"><a href=\"#重启-amp-amp-启动Jenkins服务\" class=\"headerlink\" title=\"重启&amp;&amp;启动Jenkins服务\"></a>重启&amp;&amp;启动Jenkins服务</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">sudo systemctl start jenkins<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"访问-amp-amp-解锁Jenkins\"><a href=\"#访问-amp-amp-解锁Jenkins\" class=\"headerlink\" title=\"访问&amp;&amp;解锁Jenkins\"></a>访问&amp;&amp;解锁Jenkins</h2><blockquote>\n<p>访问地址为：linux+端口号，如上配置为：<code>http://192.168.56.121:9955</code>，访问后，进入一下配置页面。</p>\n</blockquote>\n<p><img src=\"https://i.loli.net/2021/10/04/Fwx6D1kGHqt2ogX.png\" alt=\"image-20211004202424221\"></p>\n<p>按照上方提示，输入一下命令,输入密码：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">cat /opt/jenkins/secrets/initialAdminPassword<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"按照插件\"><a href=\"#按照插件\" class=\"headerlink\" title=\"按照插件\"></a>按照插件</h2><p>默认按照推荐按照即可。</p>\n<p><img src=\"https://i.loli.net/2021/10/04/EZwmnHSxribWpd5.png\" alt=\"image-20211004203303329\"></p>\n<h2 id=\"初始化用户\"><a href=\"#初始化用户\" class=\"headerlink\" title=\"初始化用户\"></a>初始化用户</h2><blockquote>\n<p>创建初始化用户，用户名：opser,密码：admin</p>\n</blockquote>\n<p><img src=\"https://i.loli.net/2021/10/04/OEiDtgdlAYW65kz.png\" alt=\"image-20211004204936715\"></p>\n<p>Jenkins初始URL默认不进行配置</p>\n<p><img src=\"https://i.loli.net/2021/10/04/YRJmbgUFoj1xhnB.png\" alt=\"image-20211004205136257\"></p>\n<h2 id=\"安装完成，开始使用\"><a href=\"#安装完成，开始使用\" class=\"headerlink\" title=\"安装完成，开始使用\"></a>安装完成，开始使用</h2><p><img src=\"https://i.loli.net/2021/10/04/kdETlSe1rw7N5py.png\" alt=\"image-20211004205218802\"></p>\n<h1 id=\"Jenkins优化\"><a href=\"#Jenkins优化\" class=\"headerlink\" title=\"Jenkins优化\"></a>Jenkins优化</h1><h2 id=\"插件优化\"><a href=\"#插件优化\" class=\"headerlink\" title=\"插件优化\"></a>插件优化</h2><blockquote>\n<p>由于Jenkins默认使用国外的镜像，所以插件下载安装速度极慢，所以我们需要更改插件仓库。</p>\n<p><strong>注意：该仓库更改必须要在没有下载插件之前！</strong></p>\n</blockquote>\n<ul>\n<li><p>进入Jenkins目录，<code>/opt/jenkins</code></p>\n</li>\n<li><p>复制并重命名文件<code>hudson.model.UpdateCenter.xml</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">cp hudson.model.UpdateCenter.xml hudson.model.UpdateCenter.xml.bak<br></code></pre></td></tr></table></figure></li>\n<li><p>修改<code>hudson.model.UpdateCenter.xml</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">url改为<br>https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json<br></code></pre></td></tr></table></figure></li>\n<li><p>修改<code>default.json</code></p>\n</li>\n<li><p>配置default.json</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">vim /var/lib/jenkins/updates/default.json<br></code></pre></td></tr></table></figure></li>\n<li><p>全局替换</p>\n<blockquote>\n<p>把  updates.jenkins-ci.org&#x2F;download  替换为  mirrors.tuna.tsinghua.edu.cn&#x2F;jenkins</p>\n<p>地址修改把  <code>www.google.com</code> 替换为  <code>www.baidu.com</code></p>\n</blockquote>\n</li>\n<li><p>重启服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">systemctl restart jenkins<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"页面优化\"><a href=\"#页面优化\" class=\"headerlink\" title=\"页面优化\"></a>页面优化</h2><blockquote>\n<p>装完Jenkins之后，我们发现有一部分菜单汉化了，有一部分菜单没有汉化，这让人很不爽，所以我们需要调整一下让页面保持统一！</p>\n</blockquote>\n<ul>\n<li><code>系统管理</code>-<code>插件管理</code>-<code>已安装</code>，中搜索，<code>Localization: Chinese (Simplified)</code></li>\n<li>卸载，重装，同时安装<code>locale</code>插件</li>\n<li><code>系统管理</code>-<code>系统配置</code>-<code>Locale</code>-<code>Default Language</code>,填写<code>zh_CN</code>,勾选<code>Ignore browser preference and force this language to all users</code></li>\n<li>重启</li>\n</ul>\n<h1 id=\"Jenkins操作\"><a href=\"#Jenkins操作\" class=\"headerlink\" title=\"Jenkins操作\"></a>Jenkins操作</h1><h2 id=\"基本配置\"><a href=\"#基本配置\" class=\"headerlink\" title=\"基本配置\"></a>基本配置</h2><h3 id=\"配置一览\"><a href=\"#配置一览\" class=\"headerlink\" title=\"配置一览\"></a>配置一览</h3><p><img src=\"https://i.loli.net/2021/10/05/KNfwrISu3cqpzoB.jpg\" alt=\"img\"></p>\n<h3 id=\"构建环境配置\"><a href=\"#构建环境配置\" class=\"headerlink\" title=\"构建环境配置\"></a>构建环境配置</h3><p>指定构建时所依赖的环境参数，如jdk版本，可以手动安装jdk，也可以在【全局工具配置】中指定好jdk版本，在首次构建时会自动安装，首次构建下载时间较长，耐心等待即可。</p>\n<p>以NodeJS自动安装为例：</p>\n<p><img src=\"https://i.loli.net/2021/10/05/w3ypsOPzqZ4QM2d.jpg\" alt=\"img\"></p>\n<h2 id=\"插件管理\"><a href=\"#插件管理\" class=\"headerlink\" title=\"插件管理\"></a>插件管理</h2><p>构建模块大多以插件形式存在，使用前需安装，否则无法找到对应构建项。</p>\n<p><img src=\"https://i.loli.net/2021/10/05/BQ7LWwcZgriysMS.jpg\" alt=\"img\"></p>\n<h2 id=\"服务器配置\"><a href=\"#服务器配置\" class=\"headerlink\" title=\"服务器配置\"></a>服务器配置</h2><p>系统管理-&gt;系统配置-&gt;Publish over SSH，点击[新增]按钮添加服务器，按要求填写服务器信息，如果没有找到此选项，可先在【插件管理】中安装Publish over SSH插件。</p>\n<p><img src=\"https://i.loli.net/2021/10/05/e96JzP8iSpvhcy7.jpg\" alt=\"img\"></p>\n<p>说明：Remote Directory指定的目录会作为文件上传时的根目录。</p>\n<h2 id=\"Java应用构建配置\"><a href=\"#Java应用构建配置\" class=\"headerlink\" title=\"Java应用构建配置\"></a>Java应用构建配置</h2><h3 id=\"新建任务\"><a href=\"#新建任务\" class=\"headerlink\" title=\"新建任务\"></a>新建任务</h3><p>以构建Maven项目为例，选择一个Maven构建风格，可以省去许多maven配置，如果已经有一个相同配置，可选择输入名称进行复制。</p>\n<p>Maven setting.xml配置文件：</p>\n<blockquote>\n<p>&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;tools&#x2F;hudson.tasks.Maven_MavenInstallation&#x2F;maven&#x2F;conf&#x2F;</p>\n</blockquote>\n<p><img src=\"https://i.loli.net/2021/10/05/QqhzG2svYTgujEN.jpg\" alt=\"img\"></p>\n<h3 id=\"构建包留存策略\"><a href=\"#构建包留存策略\" class=\"headerlink\" title=\"构建包留存策略\"></a>构建包留存策略</h3><p><img src=\"https://i.loli.net/2021/10/05/BsxnbpaRHl6qdGM.jpg\" alt=\"img\"></p>\n<h3 id=\"源码仓库\"><a href=\"#源码仓库\" class=\"headerlink\" title=\"源码仓库\"></a>源码仓库</h3><p>正式环境采用参数化构建，只用Git参数指定构建tag分支，默认master分支</p>\n<p><img src=\"https://i.loli.net/2021/10/05/zMtvPDfjFoXyO8S.jpg\" alt=\"img\"></p>\n<p>配置源码仓库，指定动态tag分支</p>\n<p><img src=\"https://i.loli.net/2021/10/05/sSY6haTOtJcqI2M.jpg\" alt=\"img\"></p>\n<h3 id=\"自动构建选项\"><a href=\"#自动构建选项\" class=\"headerlink\" title=\"自动构建选项\"></a>自动构建选项</h3><p>取消触发自动构建的选项</p>\n<p><img src=\"https://i.loli.net/2021/10/05/RBLYzZElcywuX7U.jpg\" alt=\"img\"></p>\n<h3 id=\"构建\"><a href=\"#构建\" class=\"headerlink\" title=\"构建\"></a>构建</h3><p><img src=\"https://i.loli.net/2021/10/05/i84axClGu2AokXY.jpg\" alt=\"img\"></p>\n<p>在jekenis服务器本地构建，使用jekenis服务器的maven配置进行编译构建</p>\n<h3 id=\"上传\"><a href=\"#上传\" class=\"headerlink\" title=\"上传\"></a>上传</h3><p>构建成功后上传到指定部署服务器，仅编译成功后进行上传</p>\n<p><img src=\"https://i.loli.net/2021/10/05/xyuPw2FXsRdIDpL.jpg\" alt=\"img\"></p>\n<ul>\n<li>Name：在服务列表中选择上传目标；</li>\n<li>Source files：指定上传的jar包，支持正则通配（根据构建目录距离jar包位置的不同，会自动在服务器端创建不同深度的目录）。</li>\n<li>Remote directory：可以指定上传目录，目录位于配置服务器时指定的根目录之下。</li>\n<li>Exec command：上传成功后在上传后的服务器上执行的命令或脚本。</li>\n</ul>\n<blockquote>\n<p>注：整体涉及到的编译脚本详见“项目编译脚本”</p>\n</blockquote>\n<h2 id=\"Js应用构建\"><a href=\"#Js应用构建\" class=\"headerlink\" title=\"Js应用构建\"></a>Js应用构建</h2><h3 id=\"新建任务-1\"><a href=\"#新建任务-1\" class=\"headerlink\" title=\"新建任务\"></a>新建任务</h3><p>选择一个自由风格的构建</p>\n<p><img src=\"https://i.loli.net/2021/10/05/W48lXhm1DkjRvag.jpg\" alt=\"img\"></p>\n<h3 id=\"构建包留存策略-1\"><a href=\"#构建包留存策略-1\" class=\"headerlink\" title=\"构建包留存策略\"></a>构建包留存策略</h3><p><img src=\"https://i.loli.net/2021/10/05/5XyWcCawtzI9JlV.jpg\" alt=\"img\"></p>\n<h3 id=\"源码仓库-1\"><a href=\"#源码仓库-1\" class=\"headerlink\" title=\"源码仓库\"></a>源码仓库</h3><p>正式环境采用参数化构建，只用Git参数指定构建tag分支，默认master分支</p>\n<p><img src=\"https://i.loli.net/2021/10/05/zMtvPDfjFoXyO8S.jpg\" alt=\"img\"></p>\n<p>配置源码仓库，指定动态tag分支</p>\n<p><img src=\"https://i.loli.net/2021/10/06/sgqaEWYKMb5rA8z.png\" alt=\"image-20211006134146871\"></p>\n<h3 id=\"自动构建选项-1\"><a href=\"#自动构建选项-1\" class=\"headerlink\" title=\"自动构建选项\"></a>自动构建选项</h3><p>取消自动构建选项</p>\n<p><img src=\"https://i.loli.net/2021/10/05/WUG6PSjmNKFaH37.jpg\" alt=\"img\"></p>\n<h3 id=\"构建环境\"><a href=\"#构建环境\" class=\"headerlink\" title=\"构建环境\"></a>构建环境</h3><p>指定构建环境，选择已配置的nodejs构建环境，在jekenis本地服务器进行编译构建</p>\n<p><img src=\"https://i.loli.net/2021/10/05/gcNnHvzawXFKC76.jpg\" alt=\"img\"></p>\n<h3 id=\"构建-1\"><a href=\"#构建-1\" class=\"headerlink\" title=\"构建\"></a>构建</h3><p>在jekenis本地服务器进行编译构建</p>\n<p><img src=\"https://i.loli.net/2021/10/05/j2Z4QHn5qYSolFM.jpg\" alt=\"img\"></p>\n<p>为方便后续上传，在构建环节执行了压缩命令，可视情况而定。</p>\n<blockquote>\n<p>注：整体涉及到的编译脚本详见“项目编译脚本”</p>\n</blockquote>\n<h3 id=\"上传-1\"><a href=\"#上传-1\" class=\"headerlink\" title=\"上传\"></a>上传</h3><p>将编译并压缩后的前端文件上传到指定服务器</p>\n<p><img src=\"https://i.loli.net/2021/10/05/zjxrTqCF4QGvNLH.jpg\" alt=\"img\"></p>\n<p>在服务器列表中选择目标，指定上传文件，填写上传成功后需执行的命令。因VUE编译多次会生成不同的文件，故需将编译后的文件一次性上传多个负载的服务器。</p>\n<p>即重新选择一次上传步骤：</p>\n<p><img src=\"https://i.loli.net/2021/10/05/m5ODJEU6vIx9n3L.jpg\" alt=\"img\"></p>\n<p><img src=\"https://i.loli.net/2021/10/05/2Dsf1Mg7rq4vYdn.jpg\" alt=\"img\"></p>\n<blockquote>\n<p>注：整体涉及到的编译脚本详见“项目编译脚本”</p>\n</blockquote>\n",
            "tags": [
                "CentOS",
                "Linux",
                "Jenkins"
            ]
        }
    ]
}